{"version":3,"sources":["Chimera_01-01.svg","store/reducers/authReducer.js","store/actions/actionTypes.js","store/reducers/usersReducer.js","store/reducers/transactionsReducer.js","store/reducers/systemReducer.js","store/reducers/dashboardReducer.js","store/reducers/logsReducer.js","store/reducers/rootReducer.js","store/actions/logTypes.js","store/actions/logsActions.js","store/actions/transactionsActions.js","useful.js","store/actions/usersActions.js","store/actions/authActions.js","store/actions/systemActions.js","pjeset/common/Menu.js","pjeset/common/Notifications.js","pjeset/Home/Dashboard.js","store/actions/dashboardActions.js","faqet/Home.js","faqet/Login.js","pjeset/Users/EditUser.js","pjeset/Users/AddUser.js","faqet/Users.js","pjeset/Transactions/AddTransaction.js","pjeset/Transactions/EditTransaction.js","faqet/Transactions.js","faqet/Logs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","token","error","loading","admin","balance","id","authReducer","state","arguments","length","undefined","action","type","_objectSpread","authStart","authFail","email","username","is_staff","authSuccess","authSetToken","parseFloat","updateBalance","users","editing","editingThis","adding","updateUsersList","newUsers","map","user","url","data","usersReducer_objectSpread","usersReducer","console","log","getUsersList","filter","removeSuccess","beginEdit","endEdit","beginAdd","endAdd","concat","Object","toConsumableArray","addSuccess","today","Date","aWeekAgo","setDate","getDate","transactions","clients","editData","filters","partners","types","client","fromDate","setHours","toDate","allPartnersSelected","allTypesSelected","updateTransactionsList","newTransactions","transaction","transactionsReducer_objectSpread","systemReducer","getTransactionsList","defineProperty","value","setFilter","setAllPartnersSelected","setAllTypesSelected","c","client_name","getClientsList","menu","systemReducer_objectSpread","selected","selectMenu","partner","alltime","dashboardReducer","dashboardReducer_objectSpread","getDashboardData","message","logs","logsReducer","logsReducer_objectSpread","getLogs","removeLog","rootReducer","combineReducers","auth","transactionsReducer","system","dashboard","USER_ADD","USER_REMOVE","USER_UPDATE","USER_DEACTIVATE","USER_ACTIVATE","TRANSACTION_ADD","TRANSACTION_REMOVE","addLog","dispatch","getState","bearer","axios","post","log_type","headers","Authorization","then","res","catch","e","response","status","logout","getAllTransactions","_state$auth","_state$transactions","q","toLocaleDateString","get","urltoid","arr","split","formatText","text","toUpperCase","toLowerCase","slice","replace","formatDate","date","year","month","day","round2","num","Math","round","Number","EPSILON","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","currency","symbol","getAllUsers","updateUserLocally","updateAdminLocally","partner_data","setToken","window","persistor","flush","purge","connect","logOut","setMenu","refreshToken","_ref","useEffect","interval","setInterval","clearInterval","addEventListener","removeEventListener","react_default","a","createElement","Pivot","linkSize","PivotLinkSize","normal","linkFormat","PivotLinkFormat","links","selectedKey","onLinkClick","key","PivotItem","iconProps","iconName","itemKey","headerText","onClick","onRenderItemLink","react_router_dom","to","Icon","Text","variant","styles","root","verticalAlign","color","DefaultButton","className","allowDisabledFocus","react_router","getTransactions","updateThisUser","w3cwebsocket","_useState","useState","_useState2","slicedToArray","anchor","setAnchor","_useState3","_useState4","notifications","setNotifications","Notification","_ref2","head","body","hideNotification","_useState5","_useState6","active","setActive","timeoutid","setTimeout","clearTimeout","Callout","isBeakVisible","target","gapSpace","directionalHint","DirectionalHint","bottomRightEdge","width","backgrounColor","zIndex","display","padding","onopen","onmessage","m","msg","JSON","parse","close","ref","notification","i","n","removeNotification","partnerId","getData","_state$dashboard$filt","dateQ","selectedPartner","parseInt","partnersDropdown","u","urlArray","d","alldata","t","transaction_type","name","wire","reduce","accumulator","amount","cc","profit","amount_paid","allUsersWire","acc","b","allUsersCC","allUsersDeposits","singleUserData","partnerData","sort","entry_time","Dashboard_objectSpread","Set","da","prepareSingleUserData","singleUserWire","singleUserCC","singleUserDeposits","due","selectedPartnerName","find","selectedPartnerBalance","Stack","horizontal","horizontalAlign","tokens","childrenGap","ComboBox","autoComplete","options","placeholder","onChange","e2","style","DatePicker","firstDayOfWeek","DayOfWeek","Monday","maxDate","onSelectDate","minDate","Toggle","inlineLabel","label","onText","offText","checked","build_default","duration","formatValue","format","es6","height","strokeDasharray","dataKey","stackId","stroke","fill","val","document","title","Home_Dashboard","login","password","_res$data","pk","_res$data2","is_active","setEmail","setPassword","props","useSpring","opacity","from","src","logourl","alt","web","div","TextField","onKeyPress","_ref3","_ref4","_ref5","PrimaryButton","save","oldUser","oldUsername","oldEmail","oldBalance","oldWRate","Wrate","oldCCRate","CCrate","patch","adminOrPartner","changedUsername","changedEmail","changedBalance","changedWRate","changedCCRate","logTypes","editUser","toggleActiveState","logtype","toggleActive","remove","delete","removeUser","staff","_username","setUsername","_email","_balance","setBalance","_useState7","_useState8","_Wrate","setWRate","_useState9","_useState10","_CCrate","setCCRate","_useState11","_useState12","_active","_useState13","_useState14","deleting","setDeleting","deActivateColorRoot","deActivateColorRootHovered","deActivateColorRootPressed","Modal","isOpen","onDismiss","isModeless","dragOptions","dragHandleSelector","containerClassName","ActionButton","buttonType","step","min","max","_ref6","Link","href","borderColor","rootHovered","rootPressed","menuProps","items","marginRight","Dialog","hidden","dialogContentProps","DialogType","subText","modalProps","isBlocking","main","maxWidth","DialogFooter","backgroundColor","add","password1","password2","addUser","setPassword1","setPassword2","_useState15","_useState16","isReady","setReady","_useState17","passwordMatch","_useState18","errors","setErrors","errorMessage","onBlur","forEach","em","AddUser_objectSpread","test","usernameRegex","RegExp","usernames","us","mediumRegex","_ref7","_ref8","disabled","locale","getUsers","sortkey","setSortkey","ascending","setAscending","searchStr","setSearchStr","roleFilter","setRoleFilter","array","asc","columns","fieldName","minWidth","isSorted","isSortedDescending","onColumnClick","isPadded","last_login","moment","fromNow","date_joined","x","y","indexOf","_e","Fabric","SearchBox","align","justifySelf","MarqueeSelection","DetailsList","compact","onItemInvoked","enableShimmer","isHeaderVisible","checkboxVisibility","selectionMode","SelectionMode","multiple","layoutMode","DetailsListLayoutMode","justified","onRenderItemColumn","item","index","column","fieldContent","marginLeft","textAlign","onRenderRow","DetailsRow","assign","fontSize","Users_EditUser","Users_AddUser","rate","adminAmount","abs","partnerAmount","addTransaction","setType","setClient","client_names","setClientNames","setAmount","setAmountpaid","setPartner","currentPartner","setCurrentPartner","setRate","sign","setSign","_useState19","_useState20","ready","toPrecision","clientOK","setTheSign","showCalculations","borderLeft","allowFreeform","visibility","htmlFor","edit","editTransaction","_transactions$filter$","getClients","setTransactionsFilter","allTypes","bool","allPartners","deletingID","setDeletingID","includes","typesDropdown","isRowHeader","_onColumnClick","isResizable","onRender","IconButton","partnerColumns","created_at","Dropdown","selectedKeys","every","multiSelect","itemType","DropdownMenuItemType","Header","row","Transactions_AddTransaction","Transactions_EditTransaction","react_csv","filename","_state$logs$filters","deleteLog","Log","hovered","setHovered","onMouseOver","onMouseOut","onMouseEnter","position","right","top","ActivityItem","classNames","exampleRoot","getUsername","filteredUser","mergeStyleSets","marginTop","nameText","fontWeight","activityDescription","activityIcon","comments","timeStamp","marginBottom","initializeIcons","App","common_Menu","exact","path","component","Home","Login","Users","Transactions","Logs","common_Notifications","Boolean","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistStore","ReactDOM","render","es","integration_react","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e3070c8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Chimera_01-01.71e6b608.svg\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    token: \"\",\n    error: null,\n    loading: false,\n    admin: false,\n    balance: 0,\n    id: 0\n}\n\nconst authStart = (state, action) => {\n    return {...state, error: null, loading: true}\n}\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state, \n        error: null, \n        loading: false, \n        token: action.token,\n        id: action.id,\n        email: action.email,\n        username: action.username,\n        admin: action.is_staff,\n        balance: action.balance\n    }\n}\n\nconst authSetToken = (state, action) => {\n    return {...state, token: action.token}\n}\n\n\nconst authFail = (state, action) => {\n    return {...state, error: action.error, loading: false}\n}\n\nconst updateBalance = (state, action) => {\n    return {...state, balance: parseFloat(action.balance)}\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.AUTH_START: return authStart(state, action);\n        case types.AUTH_FAIL: return authFail(state, action);\n        case types.AUTH_SUCCESS: return authSuccess(state, action);\n        case types.AUTH_SET_TOKEN: return authSetToken(state, action);\n        case types.ADMIN_UPDATE_BALANCE: return updateBalance(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default authReducer;","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const AUTH_SET_TOKEN = \"AUTH_SET_TOKEN\";\nexport const AUTH_RESET_PASSWORD = \"AUTH_RESET_PASSWORD\";\nexport const AUTH_CHANGE_PASSWORD = \"AUTH_CHANGE_PASSWORD\";\nexport const USERS_GET_ONE = \"USERS_GET_ONE\";\nexport const USERS_GET_LIST = \"USERS_GET_LIST\";\nexport const USERS_BEGIN_ADD = \"USERS_BEGIN_ADD\";\nexport const USERS_END_ADD = \"USERS_END_ADD\";\nexport const USERS_ADD_SUCCESS = \"USERS_ADD_SUCCESS\";\nexport const USERS_ADD_FAIL = \"USERS_ADD_FAIL\";\nexport const USERS_BEGIN_EDIT = \"USERS_BEGIN_EDIT\";\nexport const USERS_END_EDIT = \"USERS_END_EDIT\";\nexport const USERS_EDIT_SUCCESS = \"USERS_EDIT_SUCCESS\";\nexport const USERS_EDIT_FAIL = \"USERS_EDIT_FAIL\";\nexport const USERS_ARCHIVE_SUCCESS = \"USERS_ARCHIVE_SUCCESS\";\nexport const USERS_ARCHIVE_FAIL = \"USERS_ARCHIVE_FAIL\";\nexport const USERS_REMOVE_SUCCESS = \"USERS_REMOVE_SUCCESS\";\nexport const USERS_REMOVE_FAIL = \"USERS_REMOVE_FAIL\";\nexport const USERS_UPDATE_USER = \"USERS_UPDATE_USER\";\nexport const TRANSACTIONS_SET_FILTER = \"TRANSACTIONS_SET_FILTER\";\nexport const TRANSACTIONS_SET_ALL_PARTNERS_SELECTED = \"TRANSACTIONS_SET_ALL_PARTNERS_SELECTED\";\nexport const TRANSACTIONS_SET_ALL_TYPES_SELECTED = \"TRANSACTIONS_SET_ALL_TYPES_SELECTED\";\nexport const TRANSACTIONS_GET_LIST = \"TRANSACTIONS_GET_LIST\";\nexport const TRANSACTIONS_BEGIN_ADD = \"TRANSACTIONS_BEGIN_ADD\";\nexport const TRANSACTIONS_END_ADD = \"TRANSACTIONS_END_ADD\";\nexport const TRANSACTIONS_ADD_SUCCESS = \"TRANSACTIONS_ADD_SUCCESS\";\nexport const TRANSACTIONS_ADD_FAIL = \"TRANSACTIONS_ADD_FAIL\";\nexport const TRANSACTIONS_BEGIN_EDIT = \"TRANSACTIONS_BEGIN_EDIT\";\nexport const TRANSACTIONS_END_EDIT = \"TRANSACTIONS_END_EDIT\";\nexport const TRANSACTIONS_EDIT_SUCCESS = \"TRANSACTIONS_EDIT_SUCCESS\";\nexport const TRANSACTIONS_EDIT_FAIL = \"TRANSACTIONS_EDIT_FAIL\";\nexport const TRANSACTIONS_ARCHIVE_SUCCESS = \"TRANSACTIONS_ARCHIVE_SUCCESS\";\nexport const TRANSACTIONS_ARCHIVE_FAIL = \"TRANSACTIONS_ARCHIVE_FAIL\";\nexport const TRANSACTIONS_REMOVE_SUCCESS = \"TRANSACTIONS_REMOVE_SUCCESS\";\nexport const TRANSACTIONS_REMOVE_FAIL = \"TRANSACTIONS_REMOVE_FAIL\";\nexport const TRANSACTIONS_GET_CLIENTS_LIST = \"TRANSACTIONS_GET_CLIENTS_LIST\";\nexport const TRANSACTIONS_ADD_ONE_CLIENT = \"TRANSACTIONS_ADD_ONE_CLIENT\";\nexport const DASHBOARD_SET_FILTER = \"DASHBOARD_SET_FILTER\";\nexport const DASHBOARD_GET_DATA = \"DASHBOARD_GET_DATA\";\nexport const LOGS_SET_FILTER = \"LOGS_SET_FILTER\";\nexport const LOGS_GET_DATA = \"LOGS_GET_DATA\";\nexport const LOGS_ADD = \"LOGS_ADD\";\nexport const LOGS_REMOVE = \"LOGS_REMOVE\";\nexport const SYSTEM_CALLOUT_SHOW = \"SYSTEM_CALLOUT_SHOW\";\nexport const SYSTEM_CALLOUT_HIDE = \"SYSTEM_CALLOUT_HIDE\";\nexport const SYSTEM_SET_SELECTED_MENU = \"SYSTEM_SET_SELECTED_MENU\";\nexport const ADMIN_UPDATE_BALANCE = \"ADMIN_UPDATE_BALANCE\";\nexport const ADMIN_UPDATE_LOCALLY = \"ADMIN_UPDATE_LOCALLY\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    users: [],\n    editing: false,\n    editingThis: '',\n    adding: false\n}\n\nconst getUsersList = (state, action) => {\n    return {...state, users: action.users}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editingThis: action.email}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, users: [...state.users, action.user] }\n}\n\nconst removeSuccess = (state, action) => {\n    const newUsers = state.users.filter(user => {\n        return user.url !== action.url\n    });\n    return {...state, users: newUsers}\n}\n\nconst updateUsersList = (state, action) => {\n    const newUsers = state.users.map(user => {\n        if(user.url === action.data.url){\n            return action.data\n        }else{\n            return user\n        }\n    })\n    return {...state, users: newUsers}\n}\n\nconst usersReducer = (state = initialState, action) => {\n    console.log(action.type);\n    switch(action.type){\n        case types.USERS_GET_LIST: return getUsersList(state, action);\n        case types.USERS_GET_ONE: return updateUsersList(state, action);\n        case types.USERS_EDIT_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_ARCHIVE_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.USERS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.USERS_END_EDIT: return endEdit(state);\n        case types.USERS_BEGIN_ADD: return beginAdd(state);\n        case types.USERS_END_ADD: return endAdd(state);\n        case types.USERS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.USERS_UPDATE_USER: return updateUsersList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default usersReducer;","import * as types from '../actions/actionTypes';\n\nconst today = new Date();\nconst aWeekAgo = new Date(new Date().setDate(today.getDate()-6));\n\nconst initialState = {\n    transactions: [],\n    clients: [],\n    editing: false,\n    editingThis: 0,\n    adding: false,\n    editData: {},\n    filters: {\n        partners: [],\n        types: [],\n        client: '',\n        fromDate: new Date(aWeekAgo.setHours(0,0,0,0)),\n        toDate: new Date(today.setHours(23,59,59,0))\n    },\n    allPartnersSelected: true,\n    allTypesSelected: true\n}\n\nconst getTransactionsList = (state, action) => {\n    return {...state, transactions: action.transactions}\n}\n\nconst getClientsList = (state, action) => {\n    return {...state, clients: action.clients.map(c => c.client_name)}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editData: action.transaction}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, transactions: [ action.transaction,...state.transactions]}\n}\n\nconst removeSuccess = (state, action) => {\n    const newTransactions = state.transactions.filter(transaction => {\n        return transaction.id !== action.id\n    });\n    return {...state, transactions: newTransactions}\n}\n\nconst updateTransactionsList = (state, action) => {\n    const newTransactions = state.transactions.map(transaction => {\n        if(transaction.url === action.data.url){\n            return action.data\n        }else{\n            return transaction\n        }\n    })\n    return {...state, transactions: newTransactions}\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst setAllPartnersSelected = (state, action) => {\n    return {...state, allPartnersSelected: action.allPartnersSelected}\n}\n\nconst setAllTypesSelected = (state, action) => {\n    return {...state, allTypesSelected: action.allTypesSelected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.TRANSACTIONS_GET_LIST: return getTransactionsList(state, action);\n        case types.TRANSACTIONS_EDIT_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_ARCHIVE_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.TRANSACTIONS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.TRANSACTIONS_END_EDIT: return endEdit(state);\n        case types.TRANSACTIONS_BEGIN_ADD: return beginAdd(state);\n        case types.TRANSACTIONS_END_ADD: return endAdd(state);\n        case types.TRANSACTIONS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.TRANSACTIONS_SET_FILTER: return setFilter(state, action);\n        case types.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED: return setAllPartnersSelected(state, action);\n        case types.TRANSACTIONS_SET_ALL_TYPES_SELECTED: return setAllTypesSelected(state, action);\n        case types.TRANSACTIONS_GET_CLIENTS_LIST: return getClientsList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    menu: '0'\n}\n\nconst selectMenu = (state, action) => {\n    return {...state, menu: action.selected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.SYSTEM_SET_SELECTED_MENU: return selectMenu(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        partner: 0,\n        alltime: false\n    },\n    data: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getDashboardData = (state, action) => {\n    return {...state, data: action.data}\n}\n\nconst dashboardReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.DASHBOARD_GET_DATA: return getDashboardData(state, action);\n        case types.DASHBOARD_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default dashboardReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        message: ''\n    },\n    logs: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getLogs = (state, action) => {\n    return {...state, logs: action.data}\n}\n\nconst removeLog = (state, action) => {\n    return {...state, logs: state.logs.filter(log => log.id !== action.id)}\n}\n\nconst logsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LOGS_GET_DATA: return getLogs(state, action);\n        case types.LOGS_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        case types.LOGS_REMOVE: return removeLog(state, action);\n        default: return state;\n    }\n}\n\nexport default logsReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer';\nimport transactionsReducer from './transactionsReducer';\nimport systemReducer from './systemReducer';\nimport dashboardReducer from './dashboardReducer';\nimport logsReducer from './logsReducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    users: usersReducer,\n    transactions: transactionsReducer,\n    system: systemReducer,\n    dashboard: dashboardReducer,\n    logs: logsReducer\n})\n\nexport default rootReducer;\n","export const USER_ADD = \"USER_ADD\";\nexport const USER_REMOVE = \"USER_REMOVE\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DEACTIVATE = \"USER_DEACTIVATE\";\nexport const USER_ACTIVATE = \"USER_ACTIVATE\";\nexport const TRANSACTION_ADD = \"TRANSACTION_ADD\";\nexport const TRANSACTION_REMOVE = \"TRANSACTION_REMOVE\";\nexport const TRANSACTION_UPDATE = \"TRANSACTION_UPDATE\";","import * as types from './actionTypes';\nimport axios from 'axios';\nimport { logout } from './authActions';\n\nexport const addLog = (user, type, message) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`https://api.chimera-finance.com/api/logs/`, {user, log_type: type, message}, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_ADD,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}\n\nexport const deleteLog = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`https://api.chimera-finance.com/api/logs/${id}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_REMOVE,\n                id\n            })\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n}\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.LOGS_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getLogs = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, message} = state.logs.filters;\n        const {token} = state.auth;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(message){q+=`message=${message}`}\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/logs/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout());\n            }\n        });         \n    }    \n}","import * as actionTypes from './actionTypes';\nimport * as logTypes from './logTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { updateUserLocally, updateAdminLocally } from './usersActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\n\nexport const getAllTransactions = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, admin} = state.auth;\n        const {allTypesSelected, filters} = state.transactions;\n        // const own = admin ? '' : 'own';\n        const {client, types, partners, fromDate, toDate} = filters;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(client){q+=`client=${client}&`}\n        if(!allTypesSelected){q+=`types=${types}&`}\n        if(admin){q+=`partners=${partners}&`};\n        console.log(q);\n        const bearer = 'Bearer ' + token;\n        if(!types.length || (admin && !partners.length)){\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_LIST,\n                transactions: []\n            })\n        }else{\n            axios.get(`https://api.chimera-finance.com/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n                const transactions = res.data;\n                dispatch({\n                    type: actionTypes.TRANSACTIONS_GET_LIST,\n                    transactions\n                })\n            }).catch(e => {\n                console.log(e)\n                if(e.response && e.response.status === 401){\n                    dispatch(logout);\n                }\n            });\n        }\n    }   \n}\n\nexport const getAllClients = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/clients/`, { headers: { 'Authorization': bearer } }).then(res => {\n            const clients = res.data;\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_CLIENTS_LIST,\n                clients\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_ADD})\n    }\n}\n\nexport const beginEdit = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction = transactions.filter(t=>t.id === id)[0]\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_EDIT, transaction})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_EDIT})\n    }\n}\n\nexport const addTransaction = (transaction_type, client_name, amount, amount_paid, rate, user ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\"\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user0 = users.filter(u=> u.url === `http://api.chimera-finance.com/api/users/${user}/`)[0];\n        const {username} = user0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/transactions/\", {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\nexport const editTransaction = (transaction_type, client_name, amount, amount_paid, rate, user, id ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\";\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction0 = transactions.filter(t=> t.id === id)[0];\n        const {username} = transaction0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/transactions/\", {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\n\nexport const removeTransaction = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`https://api.chimera-finance.com/api/transactions/${id}/`,{headers: {\"Authorization\": bearer}})\n        .then(() => {\n            const {transactions} = state.transactions;\n            const {amount, amount_paid, client_name, user, rate, transaction_type} = transactions.filter(t=>t.id === id)[0];\n            const {users} = state.users;\n            const user0 = users.filter(u=> u.url === `http://api.chimera-finance.com/api/users/${user}/`)[0];\n            const {username} = user0;\n            const adminAmount = numeral(parseFloat(amount)).format('0,0.00 $');\n            const partnerAmount = numeral(parseFloat(amount_paid)).format('0,0.00 $');\n            dispatch({type: actionTypes.TRANSACTIONS_REMOVE_SUCCESS, id});\n            dispatch({type: actionTypes.TRANSACTIONS_END_EDIT});\n            dispatch(updateAdminLocally());\n            const message = `Removed transaction ${id} of type ${transaction_type}. Client: ${client_name}. Main amount: ${adminAmount}. Partner amount: ${partnerAmount}. Partner: ${username}. Rate ${rate}`;\n            dispatch(addLog(user, logTypes.TRANSACTION_REMOVE, message))\n        })\n        .catch(e => dispatch({type: actionTypes.TRANSACTIONS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const setTransactionsFilter = (filter, value) => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_SET_FILTER, filter, value});\n        dispatch(getAllTransactions())\n    }\n}\n\nexport const setAllPartnersSelected = allPartnersSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED,\n        allPartnersSelected\n    }\n}\n\nexport const setAllTypesSelected = allTypesSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_TYPES_SELECTED,\n        allTypesSelected\n    }\n}\n","import numeral from 'numeral';\n\nexport function urltoid(url){\n    let arr;\n    if(url){\n        arr = url.split(\"/\");\n        return arr[arr.length - 2];\n    }else{\n        return 0\n    }\n}\n\nexport function formatText(text){\n    return text[0].toUpperCase() + text.toLowerCase().slice(1).replace(/[_.]/, ' ')\n}\n\nexport function formatDate(date){\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-UK', options)\n}\n\nexport function round2(num){\n    return Math.round(num * 100 + Number.EPSILON) / 100\n}\n\nnumeral.register('locale', 'al', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'k',\n        million: 'm',\n        billion: 'b',\n        trillion: 't'\n    },\n    currency: {\n        symbol: '€'\n    }\n});","import * as types from './actionTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { getAllTransactions } from './transactionsActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\nimport { urltoid } from '../../useful';\nimport * as  logTypes from './logTypes';\n\nexport const getAllUsers = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.get('https://api.chimera-finance.com/api/users/', { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.USERS_GET_LIST,\n                users: res.data\n            })\n        }).catch(e => {\n            console.log(e);\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_ADD})\n    }\n}\n\nexport const beginEdit = email => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_EDIT, email})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_EDIT})\n    }\n}\n\nexport const updateUserLocally = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.get(`https://api.chimera-finance.com/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.USERS_GET_ONE, data: response.data});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const updateAdminLocally = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, id} = state.auth;\n        axios.get(`https://api.chimera-finance.com/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.ADMIN_UPDATE_BALANCE, balance: response.data.partner_data.balance});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const addUser = (username, email, password, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/users/\", {\n            username, email, password, partner_data\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            const {url, username, partner_data} = res.data;\n            const {balance, Wrate, CCrate} = partner_data;\n            dispatch({type: types.USERS_ADD_SUCCESS, user: res.data});\n            dispatch({type: types.USERS_END_ADD});\n            dispatch(updateAdminLocally());\n            dispatch(addLog(urltoid(url), logTypes.USER_ADD, `Added partner ${username} with initial balance ${numeral(parseFloat(balance)).format('0,0.00 $')} Wire rate ${Wrate} and Credit Card rate ${CCrate}.`))\n        }).catch(e => {\n            dispatch({type: types.USERS_ADD_FAIL})\n        })\n    }\n}\n\nexport const editUser = (url, username, email, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const oldUser = users.filter(u=> u.url === url)[0];\n        const oldUsername = oldUser.username;\n        const oldEmail = oldUser.email;\n        const oldBalance = oldUser.partner_data.balance;\n        const oldWRate = oldUser.partner_data.Wrate;\n        const oldCCRate = oldUser.partner_data.CCrate;\n        const admin = oldUser.is_staff;\n        const {balance, Wrate, CCrate} = partner_data;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(url.replace('http', 'https'), {username, email, partner_data},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_EDIT_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally())\n            dispatch(updateUserLocally(urltoid(url)));\n            const adminOrPartner = admin ? 'admin' : `partner with id ${urltoid(url)}`;\n            const changedUsername = (username !== oldUsername) ? ` username from ${oldUsername} to ${username},` : '';\n            const changedEmail = (email !== oldEmail) ?  ` email from ${oldEmail} to ${email},` : '';\n            const changedBalance = (parseFloat(balance) !== parseFloat(oldBalance)) ?  ` balance from ${numeral(parseFloat(oldBalance)).format('0,0.00 $')} to ${numeral(parseFloat(balance)).format('0,0.00 $')},` : '';\n            const changedWRate = (Wrate !== oldWRate) ?  ` Wire rate from ${oldWRate} to ${Wrate},` : '';\n            const changedCCRate = (CCrate !== oldCCRate) ?  ` Credit Card rate from ${oldCCRate} to ${CCrate},` : '';\n            let message = `Updated ${adminOrPartner}: changed${changedUsername + changedEmail + changedBalance + changedWRate + changedCCRate}`.replace(/.$/,\".\");\n            dispatch(addLog(urltoid(url), logTypes.USER_UPDATE, message))\n        })\n        .catch(e => dispatch({type: types.USERS_EDIT_FAIL, error: e}))\n    }\n}\n\nexport const removeUser = url => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const {users} = state.users;\n        const user = users.filter(u=> u.url === url)[0];\n        const bearer = 'Bearer ' + token;\n        axios.delete(url.replace('http', 'https'),{headers: {\"Authorization\": bearer}})\n        .then((res) => {\n            const {username, partner_data} = user;\n            const {balance} = partner_data;\n            dispatch({type: types.USERS_REMOVE_SUCCESS, url});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally());\n            dispatch(getAllTransactions());\n            const message = `Removed partner ${username}, along with his balance of ${balance} and all his transactions.`;\n            dispatch(null, logTypes.USER_REMOVE, message)\n        })\n        .catch(e => dispatch({type: types.USERS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const toggleActive = (url, is_active) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user = users.filter(u=> u.url === url)[0];\n        const {username} = user;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(url.replace('http', 'https'), {is_active, partner_data: {}},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_ARCHIVE_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateUserLocally(urltoid(url)));\n            const logtype = is_active ? logTypes.USER_ACTIVATE : logTypes.USER_DEACTIVATE;\n            const action = is_active ? \"Activated\" : \"Deactivated\";\n            const message = `${action} partner ${username}. Now he will ${is_active ? 'again' : 'not'} be available for new transactions and${is_active ? '' : ' will not be able to'} log in.`;\n            dispatch(addLog(urltoid(url), logtype, message))\n        })\n        .catch(e => dispatch({type: types.USERS_ARCHIVE_FAIL, error: e}))\n    }\n}","import axios from 'axios';\nimport * as types from './actionTypes';\nimport {getAllUsers} from './usersActions';\nimport {getAllTransactions} from './transactionsActions';\n\nexport const authStart = () => {\n    return {\n        type: types.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, id, email, username, is_staff, balance) => {\n    return {\n        type: types.AUTH_SUCCESS,\n        token,\n        id,\n        email,\n        username,\n        is_staff,\n        balance\n    }\n}\nexport const authFail = error => {\n    return {\n        type: types.AUTH_FAIL,\n        error\n    }\n}\nexport const authLogout = () => {\n    return {\n        type: types.AUTH_LOGOUT\n    }\n}\n\nexport const setToken = token => {\n    return {\n        type: types.AUTH_SET_TOKEN,\n        token\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        axios.post('https://api.chimera-finance.com/api/auth/logout/').then(()=>{\n            dispatch(authLogout())\n            window.persistor.flush()\n            window.persistor.purge()\n        }).catch(e => {\n            console.log(e.message)\n        })\n    }\n}\n\nexport const refreshToken = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.post('https://api.chimera-finance.com/api/auth-jwt-refresh/', {token}).then(res => {\n            dispatch(setToken(res.data.token))\n        }).catch(e => {\n            console.log(\"refresh token error \" + e)\n            dispatch(logout())\n        })\n    }\n}\n\nexport const login = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('https://api.chimera-finance.com/api/auth/login/', {\n            email,\n            password\n        }).then(res => {\n            const {token, user} = res.data;\n            const {pk, email, username} = user;\n            axios.get(`https://api.chimera-finance.com/api/users/${pk}/`,{\n                headers: {'Authorization': `Bearer ${token}`}\n            }).then(res => {\n                const {is_active, is_staff, partner_data} = res.data;\n                let balance  = parseFloat(partner_data.balance);\n                if(is_active){\n                    dispatch(authSuccess(token, pk, email, username, is_staff, balance));\n                }\n                if(is_staff){\n                    dispatch(getAllUsers());\n                    dispatch(getAllTransactions())\n                }\n            })\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}\n\nexport const changePassword = (new_password1, new_password2) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post('https://api.chimera-finance.com/api/auth/password/change/', {new_password1, new_password2}, { headers: { 'Authorization': bearer } });\n        dispatch({type: types.AUTH_RESET_PASSWORD});\n    }\n}\n\nexport const signup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('https://api.chimera-finance.com/api/users/register/', {\n            username,\n            email,\n            password1,\n            password2\n        }).then(res => {\n            const token = res.data.key;\n            dispatch(authSuccess(token));\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}","import * as types from './actionTypes';\n\nexport const selectMenu = selected => {\n    return dispatch => {\n        dispatch({\n            type: types.SYSTEM_SET_SELECTED_MENU,\n            selected\n        })\n    }\n}","import React, { useEffect } from 'react';\nimport { Pivot, PivotItem, PivotLinkSize, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { DefaultButton } from 'office-ui-fabric-react';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout, refreshToken } from '../../store/actions/authActions';\nimport { selectMenu } from '../../store/actions/systemActions';\nimport './Menu.sass';\n\nfunction Menu({logOut, refreshToken, setMenu, token, menu, admin, username}){\n    useEffect(() => {\n      const interval = setInterval( () => {\n        refreshToken()\n      }, 300000);\n      return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        refreshToken();\n        window.addEventListener(\"focus\", refreshToken);\n        return () => window.removeEventListener(\"focus\", refreshToken);\n    },[])\n    \n    if(!token) return null;\n    \n    function itemClicked(e){\n      setMenu(e.key.slice(1));\n    }\n    \n    function logOutClicked(){\n      logOut();\n      return <Redirect to=\"/login\" />\n    }\n    \n    return (\n        <div id=\"menu\">\n          <nav>\n            <Pivot linkSize={PivotLinkSize.normal} linkFormat={PivotLinkFormat.links} selectedKey={menu} onLinkClick={itemClicked}>\n              <PivotItem iconProps={{iconName: 'People'}} itemKey=\"0\" headerText=\"Dashboard\" onClick={() => setMenu(\"home\")} onRenderItemLink={() => <Link to=\"/\"><Icon iconName=\"Diagnostic\" /> Dashboard</Link>} />\n              {admin ? <PivotItem itemKey=\"1\" headerText=\"Users\" onClick={() => setMenu(\"users\")} onRenderItemLink={() => <Link to=\"/users\"><Icon iconName=\"People\" /> Users</Link>} /> : null}\n              <PivotItem itemKey=\"2\" headerText=\"Transactions\" onClick={() => setMenu(\"transactions\")} onRenderItemLink={() => <Link to=\"/transactions\"><Icon iconName=\"Money\" /> Transactions</Link>} />\n              <PivotItem itemKey=\"4\" headerText=\"Transactions\" onClick={() => setMenu(\"logs\")} onRenderItemLink={() => <Link to=\"/logs\"><Icon iconName=\"TextDocument\" /> Logs</Link>} />\n            </Pivot>\n            <div>\n              <Text variant=\"large\" styles={{root: {verticalAlign: 'middle', color: '#777'}}}>{username}  |  </Text>\n              <DefaultButton\n                className=\"logout\"\n                allowDisabledFocus={true}\n                text=\"Logout\"\n                onClick={() => logOutClicked()}\n                iconProps={{ iconName: 'Leave' }}\n              />\n            </div>\n          </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    admin: state.auth.admin,\n    menu: state.system.menu,\n    username: state.auth.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logout()),\n    setMenu: menu => dispatch(selectMenu(menu)),\n    refreshToken: () => dispatch(refreshToken())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { w3cwebsocket } from 'websocket';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { formatText } from '../../useful';\nimport { getAllTransactions } from '../../store/actions/transactionsActions';\nimport { updateAdminLocally } from '../../store/actions/usersActions';\nimport './Notifications.sass';\n\nfunction Notifications({token, getTransactions, updateThisUser}){\n    const client = w3cwebsocket(`wss://api.chimera-finance.com/notifications/?${token}`);\n    const [anchor, setAnchor] = useState(null);\n    const [notifications, setNotifications] = useState([]);\n    \n    useEffect(()=>{\n        client.onopen = () => {\n          console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (m) => {\n            const msg = JSON.parse(m.data);\n            const {message, id, type} = msg;\n            setNotifications([...notifications, {head: formatText(type), message, id}])\n            getTransactions();\n            updateThisUser();\n        };\n        return () => client.close()\n    }, [token])\n\n    function Notification({head, body, id, hideNotification}){\n        const [active, setActive] = useState(true);\n        useEffect(()=>{\n            const timeoutid = setTimeout(() => {\n                setActive(false)\n                hideNotification(id)\n            }, 10000);\n            return () => clearTimeout(timeoutid)\n        }, [])\n        return(\n            <div>\n                {active ? <Callout\n                    className=\"ms-CalloutExample-callout\"\n                    onClick={()=>hideNotification(id)}\n                    isBeakVisible={false}\n                    target={anchor}\n                    gapSpace={0}\n                    directionalHint={DirectionalHint.bottomRightEdge}\n                    styles={{root: {width: '280px', backgrounColor: 'white', zIndex: 8}}}\n                >\n                    <div className=\"content\">\n                        <Text styles={{root: {display: 'block', padding: '20px 20px 0px 20px'}}} variant=\"large\">{head}</Text>\n                        <Text styles={{root: {display: 'block', padding: '0px 20px 20px 20px'}}} variant=\"medium\">{body}</Text>\n                    </div>\n                </Callout>: null}\n            </div>\n        )\n    }\n\n    function removeNotification(id){\n        setNotifications(notifications.filter(n=>n.id !== id))\n    }\n\n    return(\n        <div id=\"notifications\">\n            <div className=\"ms-CalloutCoverExample-buttonArea\" id=\"anchor\" ref={ref=>setAnchor(ref)}>\n                {notifications.map((notification, i) => {\n                    return <Notification key={i} head={notification.head} body={notification.message} id={notification.id} hideNotification={id => removeNotification(id)}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTransactions: () => dispatch(getAllTransactions()),\n        updateThisUser: () => dispatch(updateAdminLocally())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React, {useEffect} from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip, AreaChart, Area} from 'recharts';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { setFilter, getDashboardData } from '../../store/actions/dashboardActions';\nimport AnimatedNumber from 'animated-number-react';\nimport { round2 } from '../../useful';\nimport './Dashboard.sass';\n\nfunction Dashboard({admin, balance, users, setFilter, filters, getData, data, partnerId}){\n\n    let {fromDate, toDate, partner, alltime} = filters;\n\n    const selectedPartner = admin ? partner : parseInt(partnerId);\n\n    useEffect(()=>{\n        getData()\n    }, [getData, fromDate, toDate, partner, alltime])\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    const partnersDropdown = users.filter(u=> !u.is_staff).map(u => {\n        const urlArray = u.url.split(\"/\");\n        const key = urlArray[urlArray.length - 2];\n        return {key, text: u.username}\n    });\n\n    function formatDate(date){\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return date.toLocaleDateString('en-UK', options);\n    }\n\n    function prepareSingleUserData(id){\n        const partnerData = data.sort((a, b) => new Date(a.entry_time) - new Date(b.entry_time)).filter(d => d.user === parseInt(id)).filter(d => d.transaction_type !== \"Payment\").map(d=> {\n            return {\n                ...d,\n                entry_time: new Date(d.entry_time).toLocaleDateString(\"it-IT\").replace('/2019', '')\n            }\n        });\n        const dates = [...new Set(partnerData.map(d => d.entry_time))];\n        return dates.map(d => {\n            return {\n                name: d,\n                wire: round2(partnerData.filter(p => p.entry_time === d).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                cc: round2(partnerData.filter(p => p.entry_time === d).filter(d => d.transaction_type === \"Credit Card\").reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                profit: round2(partnerData.filter(p => p.entry_time === d).reduce((da, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + da\n                }, 0))\n            }\n        })\n    }\n\n    function prepareAllUsersData(d){\n        d = d.filter(t => t.transaction_type !== \"Payment\");\n        const partners = users.filter(u=>!u.is_staff).map(u => {\n            const urlArray = u.url.split(\"/\");\n            const id = parseInt(urlArray[urlArray.length - 2]);\n            const username = u.username\n            return {id, username}\n        });\n        return partners.map(p => {\n            return {\n                name: p.username,\n                wire: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                cc: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => d.transaction_type === \"Credit Card\").reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                profit: round2(d.filter(d => parseInt(d.user) === p.id).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + accumulator\n                }, 0))\n            }\n        })\n    }\n\n    const alldata = prepareAllUsersData(data);\n    const allUsersWire = alldata.reduce((acc, b)=> acc + b.wire, 0);\n    const allUsersCC = alldata.reduce((acc, b)=> acc + b.cc, 0);\n    const allUsersDeposits = allUsersWire + allUsersCC;\n    const singleUserData = prepareSingleUserData(selectedPartner);\n    const singleUserWire = singleUserData.reduce((acc, b)=> acc + b.wire, 0);\n    const singleUserCC = singleUserData.reduce((acc, b)=> acc + b.cc, 0);\n    const singleUserDeposits = singleUserWire + singleUserCC;\n    const due = users.filter(u => !u.is_staff).reduce((a, b) => a + parseFloat(b.partner_data.balance), 0);\n    const selectedPartnerName = (selectedPartner && admin) ? partnersDropdown.find(p=> p.key === selectedPartner).text : null;\n    const selectedPartnerBalance = (selectedPartner && admin) ? users.find(u => u.url === `http://api.chimera-finance.com/api/users/${selectedPartner}/`).partner_data.balance : balance;\n    \n    return(\n        <div id=\"dashboard\">\n            <Stack className=\"bar\" horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                    {admin ? <div className=\"combo\"><ComboBox autoComplete=\"on\" selectedKey={selectedPartner} options={partnersDropdown} placeholder=\"Partner...\" onChange={(e, e2) => setFilter('partner',e2.key)} style={{width: 140}} />{selectedPartner ? <span className=\"clear\" onClick={()=>setFilter('partner', null)}>Clear</span> : null}</div> : null}\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> {setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0))); setFilter('alltime', false)}}/>\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> {setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)));setFilter('alltime', false)}}/>\n                    <Toggle inlineLabel label='Time limit' onText='All time' offText='Date range' checked={alltime} onChange={()=>setFilter('alltime', !alltime)}  />\n                </Stack>\n                <div className=\"balance\">\n                    <div className=\"txt\">{admin ? 'To pay: ' : 'Balance: '}</div>\n                    <Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(admin ? due : balance)} formatValue={(due) => numeral(parseFloat(due)).format(\"0,0.00 $\")} /></Text>\n                </div>\n            </Stack>\n            {selectedPartner ? <section className=\"userInfo\">\n                <AreaChart\n                    width={720}\n                    height={400}\n                    data={singleUserData}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"wire\" stackId=\"one\" stroke=\"#fce100\" fill=\"#fce100\" />\n                    <Area type=\"monotone\" dataKey=\"cc\" stackId=\"one\" stroke=\"#ffaa44\" fill=\"#ffaa44\" />\n                    {admin ? <Area type=\"monotone\" dataKey=\"profit\" stackId=\"one\" stroke=\"#82ca9d\" fill=\"darkgreen\" /> : null}\n                </AreaChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            {admin ? <tr>\n                                <td>Partner: </td>\n                                <td><Text variant=\"xLarge\">{selectedPartnerName}</Text></td>\n                            </tr> : null}\n                            <tr>\n                                <td>Balance: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(selectedPartnerBalance)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(singleUserDeposits)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserWire)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserCC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n            {(admin && alldata.length) ? <section className=\"allInfo\">\n            <BarChart\n                    width={720}\n                    height={400}\n                    data={alldata}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"wire\" fill=\"#fce100\" />\n                    <Bar dataKey=\"cc\" fill=\"#ffaa44\" />\n                    <Bar dataKey=\"profit\" fill=\"darkgreen\" />\n                </BarChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(allUsersDeposits)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersWire)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersCC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users.users,\n        balance: state.auth.balance,\n        admin: state.auth.admin,\n        partnerId: state.auth.id,\n        data: state.dashboard.data,\n        filters: state.dashboard.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilter: (filter, value) => dispatch(setFilter(filter, value)),\n        getData: () => dispatch(getDashboardData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import * as types from './actionTypes';\nimport axios from 'axios';\nimport {logout} from './authActions';\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.DASHBOARD_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getDashboardData = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, alltime} = state.dashboard.filters;\n        const {token} = state.auth;\n        const dateQ = alltime ? '' : `from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        let q = `?${dateQ}`;\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.DASHBOARD_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}","import React, {useEffect} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Dashboard from '../pjeset/Home/Dashboard';\nimport { selectMenu } from '../store/actions/systemActions';\nimport './Home.sass';\n\nfunction Home({selectMenu, token, balance}){\n    useEffect(()=>{selectMenu(\"0\");document.title = \"Chimera | Home\"}, [selectMenu]);\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"home\">\n            <Dashboard />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        balance: state.auth.balance\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {useState, useEffect} from 'react';\nimport {useSpring, animated} from 'react-spring';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../store/actions/authActions';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport logourl from '../Chimera_01-01.svg'\nimport './Login.sass';\n\nfunction Login({login, error, token}){\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(()=>{document.title = \"Chimera | Login\"}, [])\n\n    const props = useSpring({opacity: 1, from: {opacity: 0}})\n    \n    if(token){return <Redirect to=\"/\" />}\n\n    return(\n        <div id=\"login\">\n            <div className=\"logo\">\n                <img src={logourl} alt=\"logo file\"/><animated.div style={props}><span className=\"Chimera\">Chimera</span></animated.div>\n            </div>\n            <form>\n                <h3>Log in</h3>\n                <TextField name=\"admin_email\" type=\"email\" label=\"email\" placeholder=\"enter email\" onChange={({target}) => setEmail(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <TextField name=\"admin_password\" label=\"Password\" type=\"password\" placeholder=\"enter password\" onChange={({target})=> setPassword(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <PrimaryButton className=\"login\" onClick={() => login(email, password)}>Log in</PrimaryButton>\n                <h6>{error && error.message}</h6>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        error: state.auth.error,\n        loading: state.auth.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (email, password) => dispatch(login(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editUser, removeUser,toggleActive, endEdit } from '../../store/actions/usersActions';\nimport { urltoid } from '../../useful';\nimport './EditUser.sass';\n\nfunction EditUser({editing, endEdit, username, email, Wrate, CCrate, balance, active, staff, url, save, remove, toggleActiveState}){\n    const [_username, setUsername] = useState(username);\n    const [_email, setEmail] = useState(email);\n    const [_balance, setBalance] = useState(balance);\n    const [_Wrate, setWRate] = useState(Wrate);\n    const [_CCrate, setCCRate] = useState(CCrate);\n    const [_active, setActive] = useState(active);\n    const [deleting, setDeleting] = useState(false);\n    useEffect(()=>{setActive(active)}, [active]);\n    const deActivateColorRoot = !_active ? \"green\" : \"brown\";\n    const deActivateColorRootHovered = !_active ? \"darkgreen\" : \"darkbrown\";\n    const deActivateColorRootPressed = !_active ? \"darkgreen\" : \"darkred\";\n    return(\n        <div>\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Edit user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" value={_username || \"\"} onChange={({target}) => setUsername(target.value)} />\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" value={_email} onChange={({target}) => setEmail(target.value)} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={_balance || 0} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={_Wrate || undefined} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card Rate\" name=\"credit card rate\" placeholder=\"rate\" value={_CCrate || undefined} onChange={({target}) => setCCRate(target.value)} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <Link className=\"changePassword\" target=\"_blank\" href={`https://api.chimera-finance.com/admin/api/user/${urltoid(url)}/password/`}>Change password</Link>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()}text=\"Cancel\" />\n                        {!staff ? <DefaultButton\n                            className=\"delete\"\n                            styles={{root: {color: deActivateColorRoot, borderColor: deActivateColorRoot}, \n                                    rootHovered: {color: deActivateColorRootHovered, borderColor: deActivateColorRootHovered}, \n                                    rootPressed: {color: deActivateColorRootPressed, borderColor: deActivateColorRootPressed}}\n                                } \n                            onClick={() => toggleActiveState(url, !_active)}\n                            text={_active ? \"Deactivate\" : \"Activate\"}\n                            split={true}\n                            menuProps={{\n                                items: [\n                                  {\n                                    key: 'deleteUser',\n                                    text: 'Delete',\n                                    style: {color: 'red', marginRight: 0},\n                                    onClick: () => setDeleting(true),\n                                    styles: {root: {color: 'red'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}},\n                                    iconProps: { iconName: 'Delete', color: 'red' }\n                                  }\n                                ]\n                              }} /> : null}\n                        <PrimaryButton \n                            className=\"save\"\n                            onClick={()=>save(url, _username, _email, {balance: _balance, Wrate: _Wrate, CCrate: _CCrate})} \n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n        <Dialog\n            hidden={!deleting}\n            onDismiss={() => setDeleting(false)}\n            dialogContentProps={{\n                type: DialogType.normal,\n                title: `Delete user ${username}?`,\n                subText: 'Warning! By deleting this user you will delete all his data, all his related transactions and the resulting profit from this user. Are you absolutely sure you want to delete this user?'\n            }}\n            modalProps={{\n                isBlocking: true,\n                styles: { main: { maxWidth: 450 } },\n                dragOptions: true\n            }}\n            >\n            <DialogFooter>\n                <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                    onClick={() => {remove(url); setDeleting(false)}} text=\"Delete\" />\n                <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n            </DialogFooter>\n        </Dialog>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        save: (url, username, email, is_active, is_staff, partner_data) => dispatch(editUser(url, username, email, is_active, is_staff, partner_data)),\n        toggleActiveState: (url, active) => dispatch(toggleActive(url, active)),\n        endEdit: () => dispatch(endEdit()),\n        remove: url => dispatch(removeUser(url))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addUser, endAdd } from '../../store/actions/usersActions';\nimport axios from 'axios';\nimport './AddUser.sass';\n\nfunction AddUser({adding, endAdd, add, users}){\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password1, setPassword1] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n    const [Wrate, setWRate] = useState(1);\n    const [CCrate, setCCRate] = useState(1);\n    const [isReady, setReady] = useState(false);\n    const [errors, setErrors] = useState({\n        email: '',\n        username: '',\n        password: '',\n        passwordMatch: ''\n    })\n\n    useEffect(()=> {\n        if(username && email && password1 && password2 && !errors.username && !errors.email && !errors.password && !errors.passwordMatch){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [username, email, password1, password2, errors])\n\n    function checkEmail(){\n        if(email){\n            const emails = users.map(u => u.email);\n            //var emailRegex = new RegExp('^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$')\n            emails.forEach(em =>{\n                if (em === email){\n                    setErrors({...errors, email: 'User with this email is already present'})\n                }\n            })\n            if(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n                setErrors({...errors, email: ''})\n            }else{\n                setErrors({...errors, email: 'Email not valid'})\n            }\n        }else{\n            setErrors({...errors, email: ''})\n        }\n    }\n\n    function checkPassword(){\n        var mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n        if(password1){\n            if(mediumRegex.test(password1)){\n                setErrors({...errors, password: ''})\n            }else{\n                setErrors({...errors, password: 'Password not valid'})\n            }\n        }else{\n            setErrors({...errors, password: ''})\n        }\n    }\n\n    function checkPassword2(){\n        if(password2){\n            if(password1 === password2){\n                setErrors({...errors, passwordMatch: ''})\n            }else{\n                setErrors({...errors, passwordMatch: 'Passwords do not match'})\n            }\n        }else{\n            setErrors({...errors, passwordMatch: ''})\n        }\n    }\n\n    function checkUsername(){\n        var usernameRegex = new RegExp(\"^[A-Z]+$\", \"i\");\n        if(username){   \n            if(usernameRegex.test(username)){\n                setErrors({...errors, username: ''})\n            }else{\n                setErrors({...errors, username: 'Username should contain only letters'})\n            }\n            const usernames = users.map(u => u.username);\n            for(let us in usernames){\n                if (us === username){\n                    setErrors({...errors, username: 'User with this username is already present'})\n                }\n            }\n        }else{\n            setErrors({...errors, username: ''})\n        }\n    }\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Add user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" errorMessage={errors.email} value={email} onChange={({target}) => setEmail(target.value)} onBlur={checkEmail} /> \n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" errorMessage={errors.username} value={username} onChange={({target}) => setUsername(target.value)} onBlur={checkUsername} />\n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"password\" label=\"Password\" name=\"password1\" placeholder=\"password\" errorMessage={errors.password} value={password1} onChange={({target}) => setPassword1(target.value)} onBlur={checkPassword} />\n                        <TextField type=\"password\" label=\"Confirm Password\" name=\"password2\" placeholder=\"confirm password\" errorMessage={errors.passwordMatch} value={password2} onChange={({target}) => setPassword2(target.value)} onBlur={checkPassword2} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={balance} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={Wrate} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card Rate\" name=\"credit card rate\" placeholder=\"rate\" value={CCrate} onChange={({target}) => setCCRate(target.value)} /> \n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            disabled={!isReady}\n                            className=\"add\"\n                            onClick={()=>add(username, email, password1, {balance, Wrate, CCrate})}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (username, email, password1, password2, partner_data) => dispatch(addUser(username, email, password1, password2, partner_data)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsRow, DetailsListLayoutMode } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { getAllUsers, beginEdit, beginAdd } from '../store/actions/usersActions';\nimport EditUser from '../pjeset/Users/EditUser';\nimport AddUser from '../pjeset/Users/AddUser';\nimport './Users.sass';\n\nnumeral.locale('al');\n\nfunction sortByKey(array, key, asc) {\n    return array.sort(function(a, b) {\n        var x = a[key]; var y = b[key];\n        return asc ? ((x < y) ? -1 : ((x > y) ? 1 : 0)) : ((x > y) ? -1 : ((x < y) ? 1 : 0));\n    });\n}\n\nfunction Users({getUsers, selectMenu, beginEdit, beginAdd, token, users, editing, editingThis, adding}){\n\n    const [sortkey, setSortkey] = useState(\"staff\");\n    const [ascending, setAscending] = useState(true);\n    const [searchStr, setSearchStr] = useState(\"\");\n    const [roleFilter, setRoleFilter] = useState(\"partner\");\n\n    useEffect(()=>{\n        getUsers();\n    }, [getUsers])\n\n    const columns = [\n        {\n            key: 'username',\n            name: 'Username',\n            fieldName: 'username',\n            minWidth: 60,\n            maxWidth: 80,\n            isSorted: sortkey === 'username',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'email',\n            name: 'Email',\n            fieldName: 'email',\n            minWidth: 200,\n            maxWidth: 230,\n            isSorted: sortkey === 'email',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'last_login',\n            name: 'Last login',\n            fieldName: 'last_login',\n            minWidth: 80,\n            maxWidth: 100,\n            isSorted: sortkey === 'last_login',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'date',\n            isPadded: true\n        },\n        {\n            key: 'balance',\n            name: 'Balance',\n            fieldName: 'balance',\n            minWidth: 80,\n            maxWidth: 90,\n            isSorted: sortkey === 'balance',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'Wrate',\n            name: 'Wire Rate',\n            fieldName: 'Wrate',\n            minWidth: 40,\n            maxWidth: 40,\n            isSorted: sortkey === 'Wrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'CCrate',\n            name: 'Credit Card Rate',\n            fieldName: 'CCrate',\n            minWidth: 85,\n            maxWidth: 85,\n            isSorted: sortkey === 'CCrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'is_active',\n            name: 'Active',\n            fieldName: 'active',\n            minWidth: 60,\n            maxWidth: 100,\n            isPadded: true\n        }\n    ];\n\n    const data = sortByKey(users.map(user => {\n        return {\n            email: user.email,\n            last_login: moment(new Date(user.last_login)).fromNow().replace(\"50 years ago\", 'never'),\n            date_joined: moment(new Date(user.date_joined)).fromNow(),\n            username: user.username,\n            password: user.password,\n            balance: parseFloat(user.partner_data.balance),\n            Wrate: user.partner_data.Wrate,\n            CCrate: user.partner_data.CCrate,\n            active: user.is_active,\n            staff: user.is_staff,\n            url: user.url\n        }\n    }), sortkey, ascending).filter(u => {\n        return (u.email.indexOf(searchStr) !== -1) || (u.username.toLowerCase().indexOf(searchStr) !== -1)\n    }).filter(u => {\n        switch(roleFilter){\n            case \"partner\": return !u.staff;\n            case \"admin\": return u.staff;\n            default: return true;\n        }\n    })\n\n    useEffect(()=>{\n        selectMenu(\"1\");\n        document.title = \"Chimera | Users\"\n    }, [getUsers, selectMenu])\n\n    function onItemInvoked({email}){\n        beginEdit(email);\n    }\n    function onColumnClick(_e, {key}){\n        setSortkey(key);\n        setAscending(true)\n        if(key === sortkey){setAscending(!ascending)}\n    }\n    function onRenderItemColumn(item, index, column){\n        const fieldContent = item[column.fieldName];\n        switch (column.key) {\n            case 'is_active':\n                return fieldContent ? <Icon iconName=\"StatusCircleInner\" styles={{root: {marginLeft: '14px'}}} /> : null;\n            case 'balance':\n                return <span style={{textAlign: 'right'}}>{numeral(fieldContent).format('0,0.00 $')}</span>\n            default:\n              return <span>{fieldContent}</span>;\n          }\n    }\n    function onRenderRow(props){\n        return <DetailsRow {...props} styles={{root: {backgroundColor: props.item.staff ? \"lightblue\" : \"white\", fontSize: '1.1em'}}} />\n    }\n    \n    let editData;\n    editData = data.filter(user => {\n        return user.email === editingThis\n    })[0]\n    const roles = [\n        { key: 'admin', text: 'Admin' },\n        { key: 'partner', text: 'Partner' },\n    ];\n        \n    if(!token){\n        return <Redirect to=\"/login\" />\n    }\n    return(\n        <div id=\"users\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <SearchBox styles={{root:{width: 300}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}}  value={searchStr} placeholder=\"Filter by username or email...\" onChange={({target}) => setSearchStr(target.value)} />\n                        <ComboBox style={{width: 150}} options={roles} selectedKey={roleFilter} placeholder=\"Filter by role...\" onChange={(e, {key})=> setRoleFilter(key)} />\n                    </Stack>\n                    <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New user\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    />\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={960}\n                        minWidth={960}\n                        items={data}\n                        compact={false}\n                        columns={columns}\n                        onItemInvoked={onItemInvoked}\n                        enableShimmer={!data}\n                        isHeaderVisible={true}\n                        checkboxVisibility={2}\n                        selectionMode={SelectionMode.multiple}\n                        layoutMode={DetailsListLayoutMode.justified}\n                        onRenderItemColumn={onRenderItemColumn}\n                        onRenderRow={onRenderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {editing ? <EditUser editing={editing} {...editData} /> : null}\n            {adding ? <AddUser adding={adding} /> : null}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        editing: state.users.editing,\n        editingThis: state.users.editingThis,\n        adding: state.users.adding\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        getUsers: () => dispatch(getAllUsers()),\n        beginEdit: email => dispatch(beginEdit(email)),\n        beginAdd: () => dispatch(beginAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addTransaction, endAdd } from '../../store/actions/transactionsActions';\nimport './AddTransaction.sass';\n\nnumeral.locale('al');\n\nfunction AddTransaction({adding, endAdd, add, users, clients}){\n    const [type, setType] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [client_names, setClientNames] = useState([]);\n    const [amount, setAmount] = useState(0);\n    const [amount_paid, setAmountpaid] = useState(0);\n    const [partner, setPartner] = useState(\"\");\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(1);\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.CCrate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(1);break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    useEffect(()=>{\n        setClientNames(clients.map(c => {\n            return {\n                key: c,\n                text: c\n            }\n        }))\n    }, [])\n\n    function addClientToClientNames(){\n        setClientNames([{key: client, text: client}, ...client_names])\n    }\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `http://api.chimera-finance.com/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    let color = 'white'\n\n    switch(type){\n        case 'Wire': color = '#fce100'; break;\n        case 'Credit Card': color = '#ffaa44'; break;\n        case 'Withdraw': color = '#da3b01'; break;\n        case 'Payment': color = '#00b7c3'; break;\n        default: color = 'white'; break;\n    }\n\n    const showCalculations = (type && type !== \"Payment\" && partner)\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Add transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form style={{borderLeft: `4px solid ${color}`}}>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <ComboBox disabled={type === \"Payment\"} label=\"Client name\" autoComplete=\"on\" allowFreeform={true} selectedKey={client} options={client_names} onBlur={addClientToClientNames} placeholder=\"Client name...\" onChange={(e, e2) => setClient(e.target.value ? e.target.value : e2.key)} />\n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" styles={{root: {visibility: showCalculations ? 'visible' : 'hidden'}}} variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"add\"\n                            disabled={!ready}\n                            onClick={()=>add(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        clients: state.transactions.clients\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (type, client, amount, amount_paid, rate, partner) => dispatch(addTransaction(type, client, amount, amount_paid, rate, partner)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTransaction);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editTransaction, endEdit } from '../../store/actions/transactionsActions';\nimport './EditTransaction.sass';\n\nnumeral.locale('al');\n\nfunction EditTransaction({editing, endEdit, edit, users, data}){\n\n    const [type, setType] = useState(data.transaction_type);\n    const [client, setClient] = useState(data.client_name);\n    const [amount, setAmount] = useState(parseFloat(data.amount));\n    const [amount_paid, setAmountpaid] = useState(parseFloat(data.amount_paid));\n    const [partner, setPartner] = useState(data.user);\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(currentPartner.partner_data.rate)\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `http://api.chimera-finance.com/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    return(\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Edit transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <TextField disabled={type === \"Payment\"} name=\"client\" label=\"Client name\" placeholder=\"client\" value={client} onChange={({target}) => setClient(target.value)} /> \n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"edit\"\n                            disabled={!ready}\n                            onClick={()=>edit(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        edit: (type, client, amount, amount_paid, rate, partner) => dispatch(editTransaction(type, client, amount, amount_paid, rate, partner)),\n        endEdit: () => dispatch(endEdit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTransaction);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsListLayoutMode, DetailsRow } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton, IconButton, DefaultButton } from 'office-ui-fabric-react';\nimport { Dropdown, DropdownMenuItemType } from 'office-ui-fabric-react/lib/Dropdown';\nimport { CSVLink } from \"react-csv\";\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { formatDate } from '../useful';\nimport { beginEdit, beginAdd, removeTransaction, getAllTransactions, getAllClients, setTransactionsFilter, setAllPartnersSelected, setAllTypesSelected } from '../store/actions/transactionsActions';\nimport AddTransaction from '../pjeset/Transactions/AddTransaction';\nimport EditTransaction from '../pjeset/Transactions/EditTransaction';\nimport './Transactions.sass';\n\nnumeral.locale('al');\n\nfunction Transactions ({selectMenu, beginAdd, token, users, admin, adding, editing, editData, transactions, remove, getTransactions, getClients, setFilter, filters, allPartners, allTypes}){\n\n    const [deleting, setDeleting] = useState(false);\n    const [deletingID, setDeletingID] = useState(0);\n    \n    let {client, partners, types, fromDate, toDate} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=> {\n        if(!partners.length){\n            setFilter('partners', users.filter(u=> !u.is_staff).map(u => {\n                const urlArray = u.url.split(\"/\");\n                const key = urlArray[urlArray.length - 2];\n                return key\n            }));\n        }\n        if(!types.length){\n            setFilter('types', ['Wire', 'Credit Card', 'Withdraw', 'Payment']);\n        }\n    }, [setFilter, users])\n\n    const partnersDropdown = users.filter(u => !u.is_staff).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        const key = urlArray[urlArray.length - 2];\n        return {\n            key,\n            text: u.username,\n            selected: partners.includes(key)\n        }\n    });\n\n    const typesDropdown = [\n        { key: 'Wire', text: 'Wire', selected: types.includes('Wire') },\n        { key: 'Credit Card', text: 'Credit Card', selected: types.includes('Credit Card') },\n        { key: 'Withdraw', text: 'Withdraw', selected: types.includes('Withdraw') },\n        { key: 'Payment', text: 'Payment', selected: types.includes('Payment') }\n    ];\n    \n    useEffect(()=>{\n        document.title = \"Chimera | Transactions\"; \n        selectMenu(admin ? \"2\" : \"3\");\n        getTransactions();\n        if(admin){getClients()}\n    }, [selectMenu, getTransactions, admin]);\n    \n    const columns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 17,\n            maxWidth: 17,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 110,\n            maxWidth: 180,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'partner',\n            name: 'Partner',\n            fieldName: 'partner',\n            minWidth: 70,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'rate',\n            name: 'Rate',\n            fieldName: 'rate',\n            minWidth: 30,\n            maxWidth: 50,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'Partner amount',\n            fieldName: 'amount_paid',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 110,\n            maxWidth: 110,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'delete',\n            name: 'Delete',\n            minWidth: 45,\n            maxWidth: 55,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true,\n            onRender: (item) => {\n                return <IconButton onClick={() => { setDeleting(true); setDeletingID(item.id) }} styles={{root:{height: '15px', marginLeft: '7px', color: '#ccc'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}}} iconProps={{iconName: \"Delete\"}} />\n            }\n        }\n    ];\n\n    const partnerColumns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 20,\n            maxWidth: 30,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 60,\n            maxWidth: 100,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 120,\n            maxWidth: 140,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 50,\n            maxWidth: 60,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'My amount',\n            fieldName: 'amount_paid',\n            minWidth: 60,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 130,\n            maxWidth: 150,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        }\n    ];\n\n    function _onColumnClick(){}\n\n    function renderRow(row){\n        let color;\n        switch(row.item.transaction_type){\n            case 'Wire': color = '#fce100'; break;\n            case 'Credit Card': color = '#ffaa44'; break;\n            case 'Withdraw': color = '#da3b01'; break;\n            case 'Payment': color = '#00b7c3'; row.item.amount = ''; row.item.rate = ''; break;\n            default: color = 'white'; break;\n        }\n        return <DetailsRow {...row} styles={{root: {borderLeft: `4px solid ${color}`, fontSize: '1.1em'}}} />\n    }\n\n    function renderItemColumn(item, index, column){\n        if(column.key === 'amount' || column.key === 'amount_paid'){\n            return <div style={{textAlign: 'right'}}>{item[column.key]}</div>\n        }else if(column.key === 'id' || column.key === 'created_at'){\n            return <div style={{fontSize: '1em'}}>{item[column.key]}</div>\n        }else{\n            return item[column.key]\n        }\n    }\n\n    function editTransaction({id}){\n        // beginEdit(id)\n    }\n\n    let data = []\n    \n    data = transactions.map(t => {\n        return {\n            id: t.id,\n            transaction_type: t.transaction_type,\n            client: t.client_name,\n            amount: numeral(parseFloat(t.amount)).format('0,0.00 $'),\n            rate: numeral(parseFloat(t.rate)).format('0 %'),\n            partner: admin ? users.filter(u => u.url === `http://api.chimera-finance.com/api/users/${t.user}/`)[0].username : null,\n            amount_paid: numeral(parseFloat(t.amount_paid)).format('0,0.00 $'),\n            created_at: moment(new Date(t.entry_time)).format(\"DD/MM/YYYY hh:mm:ss\"),\n        }\n    });\n\n    const CSVheaders = [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Type\", key: \"transaction_type\" },\n        { label: \"Client Name\", key: \"client\" },\n        { label: \"Parner Name\", key: \"partner\" },\n        { label: \"Amount\", key: \"amount\" },\n        { label: \"Partner Amount\", key: \"amount_paid\" },\n        { label: \"Date\", key: \"created_at\" }\n      ];\n\n    function changeSelectedPartners(e, e2){\n        const p = partnersDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        });\n        allPartners(p.every(p=>p.selected));\n        setFilter('partners', p.filter(p => p.selected).map(p=> p.key));\n    }\n\n    function changeSelectedTypes(e, e2){\n        const t = typesDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        })\n        allTypes(t.every(t=>t.selected));\n        setFilter('types', t.filter(t => t.selected).map(t=> t.key));\n    }\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"transactions\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <Dropdown\n                            placeholder=\"Type\"\n                            selectedKeys={types}\n                            onChange={changeSelectedTypes}\n                            multiSelect\n                            options={[{ key: 'typesHeader', text: 'Types', itemType: DropdownMenuItemType.Header },...typesDropdown]}\n                            style={{width: 120, textAlign: 'left'}}\n                        />\n                        <SearchBox styles={{root: {width: 150}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}} value={client} placeholder=\"Client name...\" onChange={({target}) => setFilter('client',target.value.toLowerCase())} />\n                        {admin ? <Dropdown\n                            placeholder=\"Filter by partner\"\n                            selectedKeys={partners}\n                            onChange={changeSelectedPartners}\n                            multiSelect\n                            options={[{ key: 'partnersHeader', text: 'Partners', itemType: DropdownMenuItemType.Header },...partnersDropdown]}\n                            style={{width: 140, textAlign: 'left'}}\n                        /> : null}\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                    </Stack>\n                    {admin ? <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New transaction\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    /> : null}\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={admin ? 960 : 720}\n                        height={'70%'}\n                        items={data}\n                        compact={false}\n                        columns={admin ? columns : partnerColumns}\n                        onItemInvoked={editTransaction}\n                        enableShimmer={!data}\n                        isHeaderVisible={true}\n                        checkboxVisibility={2}\n                        selectionMode={SelectionMode.multiple}\n                        layoutMode={DetailsListLayoutMode.justified}\n                        onRenderItemColumn={renderItemColumn}\n                        onRenderRow={renderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {adding ? <AddTransaction adding={adding} /> : null}\n            {editing ? <EditTransaction data={editData} editing={editing} /> : null}\n            <Dialog\n                hidden={!deleting}\n                onDismiss={() => setDeleting(false)}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Delete transaction?',\n                    subText: 'Do you really want do delete this transaction?'\n                }}\n                modalProps={{\n                    isBlocking: true,\n                    styles: { main: { maxWidth: 450 } },\n                    dragOptions: true\n                }}\n                >\n                <DialogFooter>\n                    <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                        onClick={() => {remove(deletingID); setDeleting(false)}} text=\"Delete\" />\n                    <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n            <div className=\"bottom\">\n                <div className=\"data\">\n                    <Text variant=\"small\" >{transactions.length || 'No'} transaction{transactions.length !== 1 ? 's' : ''}</Text>\n                </div>\n                {transactions.length ? <DefaultButton iconProps={{iconName: 'Download'}}><CSVLink filename={`transactions_report_${moment(new Date()).format('DD_MM_YYYY_hh_mm_ss')}.csv`} data={data} headers={CSVheaders}>Download CSV</CSVLink></DefaultButton> : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        admin: state.auth.admin,\n        balance: state.auth.balance,\n        users: state.users.users,\n        transactions: state.transactions.transactions,\n        editing: state.transactions.editing,\n        adding: state.transactions.adding,\n        editData: state.transactions.editData,\n        filters: state.transactions.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        beginAdd: () => dispatch(beginAdd()),\n        beginEdit: id => dispatch(beginEdit(id)),\n        remove: url => dispatch(removeTransaction(url)),\n        getTransactions: () => dispatch(getAllTransactions()),\n        getClients: () => dispatch(getAllClients()),\n        setFilter: (filter, value) => dispatch(setTransactionsFilter(filter, value)),\n        allTypes: bool => dispatch(setAllTypesSelected(bool)),\n        allPartners: bool => dispatch(setAllPartnersSelected(bool))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport {getLogs, setFilter, deleteLog} from '../store/actions/logsActions';\nimport {selectMenu} from '../store/actions/systemActions';\nimport { ActivityItem, Icon, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport { Redirect } from 'react-router-dom';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { IconButton } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { formatText, formatDate } from '../useful';\nimport * as t from '../store/actions/logTypes';\nimport './Logs.sass';\n\nfunction Logs({logs, token, getLogs, remove, selectMenu, users, filters, setFilter}){\n\n    function Log({item}){\n        const [hovered, setHovered] = useState(false);\n        let color = hovered ? '#666' : '#ccc';\n        return <div className=\"log\" onMouseOver={() => setHovered(true)} onMouseOut={() => setHovered(false)}>\n            <IconButton onMouseEnter={() => setHovered(true)} onClick={() => remove(item.key)} iconProps={{iconName:\"Delete\"}} styles={{root: {position: 'absolute', right: '5px', top: '3px', color}, rootHovered: {color: 'red'}}} />\n            <ActivityItem {...item} className={classNames.exampleRoot} />\n        </div>\n    }\n\n    let {fromDate, toDate, message} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=>{\n        document.title = \"Chimera | Logs\"; \n        selectMenu(\"4\");\n    }, [selectMenu]);\n\n    useEffect(()=>{\n        getLogs()\n    }, [getLogs, filters])\n\n    function getUsername(user){\n        if(users.length){\n            const filteredUser = users.filter(u=> u.url === `http://api.chimera-finance.com/api/users/${user}/`);\n            if(filteredUser.length){\n                return \"@\" + filteredUser[0].username;\n            }else{\n                return \"Deleted\"\n            }\n        }else{\n            return '';\n        }\n    }\n\n    const classNames = mergeStyleSets({\n        exampleRoot: {\n          marginTop: '8px',\n          textAlign: 'left'\n        },\n        nameText: {\n          fontWeight: 'bold'\n        }\n    });\n\n    const items = logs.map(log => {\n        let iconName = '', color= '';\n        switch(log.log_type){\n            case t.USER_ADD: iconName = 'FollowUser'; color=\"darkgreen\";break;\n            case t.USER_REMOVE: iconName = 'UserRemove';color=\"darkred\"; break;\n            case t.USER_UPDATE: iconName = 'UserSync'; color=\"orange\";break;\n            case t.TRANSACTION_ADD: iconName = 'Money'; color=\"darkgreen\";break;\n            case t.TRANSACTION_REMOVE: iconName = 'Money';color=\"darkred\"; break;\n            case t.USER_DEACTIVATE: iconName = 'UserPause';color=\"darkred\"; break;\n            case t.USER_ACTIVATE: iconName = 'UserFollowed'; color=\"darkgreen\";break;\n            default: iconName = \"Message\";\n        }\n        return {\n            key: log.id,\n            activityDescription: [\n              <Text className={classNames.nameText} key={log.id}>{formatText(log.log_type)}</Text>,\n              <Link key={log.id + 'a'}>&nbsp;{getUsername(log.user)}</Link>\n            ],\n            activityIcon: <Icon styles={{root:{color}}} iconName={iconName} />,\n            comments: [\n              <span key={log.id}>{log.message}</span>\n            ],\n            timeStamp: moment(new Date(log.entry_time)).format(\"DD/MM/YY hh:mm:ss\")\n          }\n    })\n\n    if(!token){return <Redirect to=\"/login\" />}\n\n    return(\n        <div id=\"logs\">\n            <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\", marginTop: '20px', marginBottom: '12px' } }}>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                <SearchBox styles={{root:{width: 300}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}} value={message} placeholder=\"Filter by log text...\" onChange={({target}) => setFilter('message',target.value.toLowerCase())} />\n            </Stack>\n            <div className=\"logs\">\n                {items.map(item => (\n                    <Log key={item.key} item={item} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        logs: state.logs.logs,\n        filters: state.logs.filters,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getLogs: () => dispatch(getLogs()),\n        remove: id => dispatch(deleteLog(id)),\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setFilter: (filter, value) => dispatch(setFilter(filter, value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menu from './pjeset/common/Menu';\nimport Notifications from './pjeset/common/Notifications';\nimport Home from './faqet/Home';\nimport Login from './faqet/Login';\nimport Users from './faqet/Users';\nimport Transactions from './faqet/Transactions';\nimport Logs from './faqet/Logs';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport './App.css';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/users\" component={Users} />\n        <Route exact path=\"/transactions\" component={Transactions} />\n        <Route exact path=\"/logs\" component={Logs} />\n      </Switch>\n      <Notifications />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './store/reducers/rootReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n        key: 'root',\n        storage,\n      }\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);  \nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\nwindow.persistor = persistor;\n\nReactDOM.render(\n                <Provider store={store}>\n                        <PersistGate loading={null} persistor={persistor}>\n                                <BrowserRouter>\n                                        <App />\n                                </BrowserRouter>\n                        </PersistGate>\n                </Provider>, \n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}