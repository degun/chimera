{"version":3,"sources":["Chimera_01-01.svg","store/reducers/authReducer.js","store/actions/actionTypes.js","store/reducers/usersReducer.js","store/reducers/transactionsReducer.js","store/reducers/systemReducer.js","store/reducers/dashboardReducer.js","store/reducers/logsReducer.js","store/reducers/rootReducer.js","store/actions/logTypes.js","store/actions/logsActions.js","store/actions/transactionsActions.js","useful.js","store/actions/usersActions.js","store/actions/authActions.js","store/actions/systemActions.js","pjeset/common/Menu.js","pjeset/common/Notifications.js","pjeset/Home/Dashboard.js","store/actions/dashboardActions.js","faqet/Home.js","faqet/Login.js","pjeset/Users/EditUser.js","pjeset/Users/AddUser.js","faqet/Users.js","pjeset/Transactions/AddTransaction.js","pjeset/Transactions/EditTransaction.js","faqet/Transactions.js","faqet/Logs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","token","error","loading","admin","balance","id","authReducer","state","arguments","length","undefined","action","type","Object","objectSpread","authStart","authFail","email","username","is_staff","authSuccess","authSetToken","parseFloat","updateBalance","users","editing","editingThis","adding","updateUsersList","newUsers","map","user","url","data","usersReducer","console","log","getUsersList","filter","removeSuccess","beginEdit","endEdit","beginAdd","endAdd","concat","toConsumableArray","addSuccess","today","Date","aWeekAgo","setDate","getDate","transactions","clients","editData","filters","partners","types","client","fromDate","setHours","toDate","allPartnersSelected","allTypesSelected","updateTransactionsList","newTransactions","transaction","systemReducer","getTransactionsList","defineProperty","value","setFilter","setAllPartnersSelected","setAllTypesSelected","getClientsList","menu","selected","selectMenu","partner","alltime","dashboardReducer","getDashboardData","message","logs","logsReducer","getLogs","removeLog","rootReducer","combineReducers","auth","transactionsReducer","system","dashboard","USER_ADD","USER_REMOVE","USER_UPDATE","USER_DEACTIVATE","USER_ACTIVATE","TRANSACTION_ADD","TRANSACTION_REMOVE","addLog","dispatch","getState","bearer","axios","post","log_type","headers","Authorization","then","res","catch","e","response","status","logout","getAllTransactions","_state$auth","_state$transactions","q","toLocaleDateString","get","urltoid","arr","split","formatText","text","toUpperCase","toLowerCase","slice","replace","formatDate","date","year","month","day","round2","num","Math","round","Number","EPSILON","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","currency","symbol","getAllUsers","updateUserLocally","updateAdminLocally","partner_data","setToken","window","persistor","flush","purge","connect","logOut","setMenu","refreshToken","_ref","useEffect","interval","setInterval","clearInterval","addEventListener","removeEventListener","react_default","a","createElement","Pivot","linkSize","PivotLinkSize","normal","linkFormat","PivotLinkFormat","links","selectedKey","onLinkClick","key","PivotItem","iconProps","iconName","itemKey","headerText","onClick","onRenderItemLink","react_router_dom","to","Icon","Text","variant","styles","root","verticalAlign","color","DefaultButton","className","allowDisabledFocus","react_router","getTransactions","updateThisUser","w3cwebsocket","_useState","useState","_useState2","slicedToArray","anchor","setAnchor","_useState3","_useState4","notifications","setNotifications","Notification","_ref2","head","body","hideNotification","_useState5","_useState6","active","setActive","timeoutid","setTimeout","clearTimeout","Callout","isBeakVisible","target","gapSpace","directionalHint","DirectionalHint","bottomRightEdge","width","backgrounColor","zIndex","display","padding","onopen","onmessage","m","msg","JSON","parse","close","ref","notification","i","n","removeNotification","partnerId","getData","_state$dashboard$filt","dateQ","selectedPartner","parseInt","partnersDropdown","u","urlArray","d","alldata","t","transaction_type","name","wire","reduce","accumulator","amount","cc","profit","amount_paid","allUsersWire","acc","b","allUsersCC","allUsersDeposits","singleUserData","partnerData","sort","entry_time","Set","da","prepareSingleUserData","singleUserWire","singleUserCC","singleUserDeposits","due","selectedPartnerName","find","selectedPartnerBalance","Stack","horizontal","horizontalAlign","tokens","childrenGap","ComboBox","autoComplete","options","placeholder","onChange","e2","style","DatePicker","firstDayOfWeek","DayOfWeek","Monday","maxDate","onSelectDate","minDate","Toggle","inlineLabel","label","onText","offText","checked","build_default","duration","formatValue","format","es6","height","strokeDasharray","dataKey","stackId","stroke","fill","val","document","title","Home_Dashboard","login","password","_res$data","pk","_res$data2","is_active","forgot","resetPassword","setEmail","setPassword","props","useSpring","opacity","from","src","logourl","alt","web","div","TextField","onKeyPress","_ref3","_ref4","_ref5","TooltipHost","content","PrimaryButton","save","oldUser","oldUsername","oldEmail","oldBalance","oldWRate","Wrate","oldCCRate","CCrate","patch","adminOrPartner","changedUsername","changedEmail","changedBalance","changedWRate","changedCCRate","logTypes","editUser","toggleActiveState","logtype","toggleActive","remove","delete","removeUser","staff","_username","setUsername","_email","_balance","setBalance","_useState7","_useState8","_Wrate","setWRate","_useState9","_useState10","_CCrate","setCCRate","_useState11","_useState12","_active","_useState13","_useState14","deleting","setDeleting","deActivateColorRoot","deActivateColorRootHovered","deActivateColorRootPressed","Modal","isOpen","onDismiss","isModeless","dragOptions","dragHandleSelector","containerClassName","ActionButton","buttonType","step","min","max","_ref6","borderColor","rootHovered","rootPressed","menuProps","items","marginRight","Dialog","hidden","dialogContentProps","DialogType","subText","modalProps","isBlocking","main","maxWidth","DialogFooter","backgroundColor","add","password1","password2","addUser","setPassword1","setPassword2","_useState15","_useState16","isReady","setReady","_useState17","passwordMatch","_useState18","errors","setErrors","errorMessage","onBlur","forEach","em","test","usernameRegex","RegExp","usernames","us","mediumRegex","_ref7","_ref8","disabled","locale","getUsers","sortkey","setSortkey","ascending","setAscending","searchStr","setSearchStr","roleFilter","setRoleFilter","array","asc","columns","fieldName","minWidth","isSorted","isSortedDescending","onColumnClick","isPadded","last_login","moment","fromNow","date_joined","x","y","indexOf","_e","Fabric","SearchBox","align","justifySelf","MarqueeSelection","DetailsList","compact","selectionMode","SelectionMode","none","isHeaderVisible","onItemInvoked","checkboxVisibility","onRenderItemColumn","item","index","column","fieldContent","marginLeft","onRenderRow","DetailsRow","assign","fontSize","Users_EditUser","Users_AddUser","rate","client_name","adminAmount","abs","partnerAmount","addTransaction","setType","setClient","setAmount","setAmountpaid","setPartner","currentPartner","setCurrentPartner","setRate","sign","setSign","ready","toPrecision","clientOK","setTheSign","client_names","showCalculations","borderLeft","allowFreeform","visibility","htmlFor","edit","editTransaction","_transactions$filter$","getClients","setTransactionsFilter","allTypes","bool","allPartners","deletingID","setDeletingID","includes","typesDropdown","isRowHeader","_onColumnClick","isResizable","onRender","IconButton","partnerColumns","created_at","Dropdown","selectedKeys","every","multiSelect","itemType","DropdownMenuItemType","Header","textAlign","enableShimmer","multiple","layoutMode","DetailsListLayoutMode","justified","row","Transactions_AddTransaction","Transactions_EditTransaction","react_csv","filename","_state$logs$filters","deleteLog","Log","hovered","setHovered","onMouseOver","onMouseOut","onMouseEnter","position","right","top","ActivityItem","classNames","exampleRoot","getUsername","filteredUser","mergeStyleSets","marginTop","nameText","fontWeight","activityDescription","Link","activityIcon","comments","timeStamp","marginBottom","initializeIcons","App","common_Menu","exact","path","component","Home","Login","Users","Transactions","Logs","common_Notifications","Boolean","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistStore","ReactDOM","render","es","integration_react","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.19e48ba4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Chimera_01-01.71e6b608.svg\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    token: \"\",\n    error: null,\n    loading: false,\n    admin: false,\n    balance: 0,\n    id: 0\n}\n\nconst authStart = (state, action) => {\n    return {...state, error: null, loading: true}\n}\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state, \n        error: null, \n        loading: false, \n        token: action.token,\n        id: action.id,\n        email: action.email,\n        username: action.username,\n        admin: action.is_staff,\n        balance: action.balance\n    }\n}\n\nconst authSetToken = (state, action) => {\n    return {...state, token: action.token}\n}\n\n\nconst authFail = (state, action) => {\n    return {...state, error: action.error, loading: false}\n}\n\nconst updateBalance = (state, action) => {\n    return {...state, balance: parseFloat(action.balance)}\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.AUTH_START: return authStart(state, action);\n        case types.AUTH_FAIL: return authFail(state, action);\n        case types.AUTH_SUCCESS: return authSuccess(state, action);\n        case types.AUTH_SET_TOKEN: return authSetToken(state, action);\n        case types.ADMIN_UPDATE_BALANCE: return updateBalance(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default authReducer;","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const AUTH_SET_TOKEN = \"AUTH_SET_TOKEN\";\nexport const AUTH_RESET_PASSWORD = \"AUTH_RESET_PASSWORD\";\nexport const AUTH_CHANGE_PASSWORD = \"AUTH_CHANGE_PASSWORD\";\nexport const USERS_GET_ONE = \"USERS_GET_ONE\";\nexport const USERS_GET_LIST = \"USERS_GET_LIST\";\nexport const USERS_BEGIN_ADD = \"USERS_BEGIN_ADD\";\nexport const USERS_END_ADD = \"USERS_END_ADD\";\nexport const USERS_ADD_SUCCESS = \"USERS_ADD_SUCCESS\";\nexport const USERS_ADD_FAIL = \"USERS_ADD_FAIL\";\nexport const USERS_BEGIN_EDIT = \"USERS_BEGIN_EDIT\";\nexport const USERS_END_EDIT = \"USERS_END_EDIT\";\nexport const USERS_EDIT_SUCCESS = \"USERS_EDIT_SUCCESS\";\nexport const USERS_EDIT_FAIL = \"USERS_EDIT_FAIL\";\nexport const USERS_ARCHIVE_SUCCESS = \"USERS_ARCHIVE_SUCCESS\";\nexport const USERS_ARCHIVE_FAIL = \"USERS_ARCHIVE_FAIL\";\nexport const USERS_REMOVE_SUCCESS = \"USERS_REMOVE_SUCCESS\";\nexport const USERS_REMOVE_FAIL = \"USERS_REMOVE_FAIL\";\nexport const USERS_UPDATE_USER = \"USERS_UPDATE_USER\";\nexport const TRANSACTIONS_SET_FILTER = \"TRANSACTIONS_SET_FILTER\";\nexport const TRANSACTIONS_SET_ALL_PARTNERS_SELECTED = \"TRANSACTIONS_SET_ALL_PARTNERS_SELECTED\";\nexport const TRANSACTIONS_SET_ALL_TYPES_SELECTED = \"TRANSACTIONS_SET_ALL_TYPES_SELECTED\";\nexport const TRANSACTIONS_GET_LIST = \"TRANSACTIONS_GET_LIST\";\nexport const TRANSACTIONS_BEGIN_ADD = \"TRANSACTIONS_BEGIN_ADD\";\nexport const TRANSACTIONS_END_ADD = \"TRANSACTIONS_END_ADD\";\nexport const TRANSACTIONS_ADD_SUCCESS = \"TRANSACTIONS_ADD_SUCCESS\";\nexport const TRANSACTIONS_ADD_FAIL = \"TRANSACTIONS_ADD_FAIL\";\nexport const TRANSACTIONS_BEGIN_EDIT = \"TRANSACTIONS_BEGIN_EDIT\";\nexport const TRANSACTIONS_END_EDIT = \"TRANSACTIONS_END_EDIT\";\nexport const TRANSACTIONS_EDIT_SUCCESS = \"TRANSACTIONS_EDIT_SUCCESS\";\nexport const TRANSACTIONS_EDIT_FAIL = \"TRANSACTIONS_EDIT_FAIL\";\nexport const TRANSACTIONS_ARCHIVE_SUCCESS = \"TRANSACTIONS_ARCHIVE_SUCCESS\";\nexport const TRANSACTIONS_ARCHIVE_FAIL = \"TRANSACTIONS_ARCHIVE_FAIL\";\nexport const TRANSACTIONS_REMOVE_SUCCESS = \"TRANSACTIONS_REMOVE_SUCCESS\";\nexport const TRANSACTIONS_REMOVE_FAIL = \"TRANSACTIONS_REMOVE_FAIL\";\nexport const TRANSACTIONS_GET_CLIENTS_LIST = \"TRANSACTIONS_GET_CLIENTS_LIST\";\nexport const TRANSACTIONS_ADD_ONE_CLIENT = \"TRANSACTIONS_ADD_ONE_CLIENT\";\nexport const DASHBOARD_SET_FILTER = \"DASHBOARD_SET_FILTER\";\nexport const DASHBOARD_GET_DATA = \"DASHBOARD_GET_DATA\";\nexport const LOGS_SET_FILTER = \"LOGS_SET_FILTER\";\nexport const LOGS_GET_DATA = \"LOGS_GET_DATA\";\nexport const LOGS_ADD = \"LOGS_ADD\";\nexport const LOGS_REMOVE = \"LOGS_REMOVE\";\nexport const SYSTEM_CALLOUT_SHOW = \"SYSTEM_CALLOUT_SHOW\";\nexport const SYSTEM_CALLOUT_HIDE = \"SYSTEM_CALLOUT_HIDE\";\nexport const SYSTEM_SET_SELECTED_MENU = \"SYSTEM_SET_SELECTED_MENU\";\nexport const ADMIN_UPDATE_BALANCE = \"ADMIN_UPDATE_BALANCE\";\nexport const ADMIN_UPDATE_LOCALLY = \"ADMIN_UPDATE_LOCALLY\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    users: [],\n    editing: false,\n    editingThis: '',\n    adding: false\n}\n\nconst getUsersList = (state, action) => {\n    return {...state, users: action.users}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editingThis: action.email}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, users: [...state.users, action.user] }\n}\n\nconst removeSuccess = (state, action) => {\n    const newUsers = state.users.filter(user => {\n        return user.url !== action.url\n    });\n    return {...state, users: newUsers}\n}\n\nconst updateUsersList = (state, action) => {\n    const newUsers = state.users.map(user => {\n        if(user.url === action.data.url){\n            return action.data\n        }else{\n            return user\n        }\n    })\n    return {...state, users: newUsers}\n}\n\nconst usersReducer = (state = initialState, action) => {\n    console.log(action.type);\n    switch(action.type){\n        case types.USERS_GET_LIST: return getUsersList(state, action);\n        case types.USERS_GET_ONE: return updateUsersList(state, action);\n        case types.USERS_EDIT_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_ARCHIVE_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.USERS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.USERS_END_EDIT: return endEdit(state);\n        case types.USERS_BEGIN_ADD: return beginAdd(state);\n        case types.USERS_END_ADD: return endAdd(state);\n        case types.USERS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.USERS_UPDATE_USER: return updateUsersList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default usersReducer;","import * as types from '../actions/actionTypes';\n\nconst today = new Date();\nconst aWeekAgo = new Date(new Date().setDate(today.getDate()-6));\n\nconst initialState = {\n    transactions: [],\n    clients: [],\n    editing: false,\n    editingThis: 0,\n    adding: false,\n    editData: {},\n    filters: {\n        partners: [],\n        types: [],\n        client: '',\n        fromDate: new Date(aWeekAgo.setHours(0,0,0,0)),\n        toDate: new Date(today.setHours(23,59,59,0))\n    },\n    allPartnersSelected: true,\n    allTypesSelected: true\n}\n\nconst getTransactionsList = (state, action) => {\n    return {...state, transactions: action.transactions}\n}\n\nconst getClientsList = (state, action) => {\n    return {...state, clients: action.clients}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editData: action.transaction}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, transactions: [ action.transaction,...state.transactions] }\n}\n\nconst removeSuccess = (state, action) => {\n    const newTransactions = state.transactions.filter(transaction => {\n        return transaction.id !== action.id\n    });\n    return {...state, transactions: newTransactions}\n}\n\nconst updateTransactionsList = (state, action) => {\n    const newTransactions = state.transactions.map(transaction => {\n        if(transaction.url === action.data.url){\n            return action.data\n        }else{\n            return transaction\n        }\n    })\n    return {...state, transactions: newTransactions}\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst setAllPartnersSelected = (state, action) => {\n    return {...state, allPartnersSelected: action.allPartnersSelected}\n}\n\nconst setAllTypesSelected = (state, action) => {\n    return {...state, allTypesSelected: action.allTypesSelected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.TRANSACTIONS_GET_LIST: return getTransactionsList(state, action);\n        case types.TRANSACTIONS_EDIT_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_ARCHIVE_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.TRANSACTIONS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.TRANSACTIONS_END_EDIT: return endEdit(state);\n        case types.TRANSACTIONS_BEGIN_ADD: return beginAdd(state);\n        case types.TRANSACTIONS_END_ADD: return endAdd(state);\n        case types.TRANSACTIONS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.TRANSACTIONS_SET_FILTER: return setFilter(state, action);\n        case types.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED: return setAllPartnersSelected(state, action);\n        case types.TRANSACTIONS_SET_ALL_TYPES_SELECTED: return setAllTypesSelected(state, action);\n        case types.TRANSACTIONS_GET_CLIENTS_LIST: return getClientsList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    menu: '0'\n}\n\nconst selectMenu = (state, action) => {\n    return {...state, menu: action.selected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.SYSTEM_SET_SELECTED_MENU: return selectMenu(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        partner: 0,\n        alltime: false\n    },\n    data: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getDashboardData = (state, action) => {\n    return {...state, data: action.data}\n}\n\nconst dashboardReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.DASHBOARD_GET_DATA: return getDashboardData(state, action);\n        case types.DASHBOARD_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default dashboardReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        message: ''\n    },\n    logs: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getLogs = (state, action) => {\n    return {...state, logs: action.data}\n}\n\nconst removeLog = (state, action) => {\n    return {...state, logs: state.logs.filter(log => log.id !== action.id)}\n}\n\nconst logsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LOGS_GET_DATA: return getLogs(state, action);\n        case types.LOGS_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        case types.LOGS_REMOVE: return removeLog(state, action);\n        default: return state;\n    }\n}\n\nexport default logsReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer';\nimport transactionsReducer from './transactionsReducer';\nimport systemReducer from './systemReducer';\nimport dashboardReducer from './dashboardReducer';\nimport logsReducer from './logsReducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    users: usersReducer,\n    transactions: transactionsReducer,\n    system: systemReducer,\n    dashboard: dashboardReducer,\n    logs: logsReducer\n})\n\nexport default rootReducer;\n","export const USER_ADD = \"USER_ADD\";\nexport const USER_REMOVE = \"USER_REMOVE\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DEACTIVATE = \"USER_DEACTIVATE\";\nexport const USER_ACTIVATE = \"USER_ACTIVATE\";\nexport const TRANSACTION_ADD = \"TRANSACTION_ADD\";\nexport const TRANSACTION_REMOVE = \"TRANSACTION_REMOVE\";\nexport const TRANSACTION_UPDATE = \"TRANSACTION_UPDATE\";","import * as types from './actionTypes';\nimport axios from 'axios';\nimport { logout } from './authActions';\n\nexport const addLog = (user, type, message) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`https://api.chimera-finance.com/api/logs/`, {user, log_type: type, message}, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_ADD,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}\n\nexport const deleteLog = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`https://api.chimera-finance.com/api/logs/${id}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_REMOVE,\n                id\n            })\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n}\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.LOGS_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getLogs = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, message} = state.logs.filters;\n        const {token} = state.auth;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(message){q+=`message=${message}`}\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/logs/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout());\n            }\n        });         \n    }    \n}","import * as actionTypes from './actionTypes';\nimport * as logTypes from './logTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { updateUserLocally, updateAdminLocally } from './usersActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\n\nexport const getAllTransactions = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, admin} = state.auth;\n        const {allTypesSelected, filters} = state.transactions;\n        // const own = admin ? '' : 'own';\n        const {client, types, partners, fromDate, toDate} = filters;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(client){q+=`client=${client}&`}\n        if(!allTypesSelected){q+=`types=${types}&,`}\n        if(admin){q+=`partners=${partners}&,`};\n        const bearer = 'Bearer ' + token;\n        if(!types.length || (admin && !partners.length)){\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_LIST,\n                transactions: []\n            })\n        }else{\n            axios.get(`https://api.chimera-finance.com/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n                const transactions = res.data;\n                dispatch({\n                    type: actionTypes.TRANSACTIONS_GET_LIST,\n                    transactions\n                })\n            }).catch(e => {\n                console.log(e)\n                if(e.response && e.response.status === 401){\n                    dispatch(logout);\n                }\n            });\n        }\n    }   \n}\n\nexport const getAllClients = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/clients/`, { headers: { 'Authorization': bearer } }).then(res => {\n            const clients = res.data;\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_CLIENTS_LIST,\n                clients\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_ADD})\n    }\n}\n\nexport const beginEdit = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction = transactions.filter(t=>t.id === id)[0]\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_EDIT, transaction})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_EDIT})\n    }\n}\n\nexport const addTransaction = (transaction_type, client_name, amount, amount_paid, rate, user ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\"\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user0 = users.filter(u=> u.url === `http://api.chimera-finance.com/api/users/${user}/`)[0];\n        const {username} = user0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/transactions/\", {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\nexport const editTransaction = (transaction_type, client_name, amount, amount_paid, rate, user, id ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\";\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction0 = transactions.filter(t=> t.id === id)[0];\n        const {username} = transaction0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/transactions/\", {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\n\nexport const removeTransaction = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`https://api.chimera-finance.com/api/transactions/${id}/`,{headers: {\"Authorization\": bearer}})\n        .then(() => {\n            const {transactions} = state.transactions;\n            const {amount, amount_paid, client_name, user, rate, transaction_type} = transactions.filter(t=>t.id === id)[0];\n            const {users} = state.users;\n            const user0 = users.filter(u=> u.url === `http://api.chimera-finance.com/api/users/${user}/`)[0];\n            const {username} = user0;\n            const adminAmount = numeral(parseFloat(amount)).format('0,0.00 $');\n            const partnerAmount = numeral(parseFloat(amount_paid)).format('0,0.00 $');\n            dispatch({type: actionTypes.TRANSACTIONS_REMOVE_SUCCESS, id});\n            dispatch({type: actionTypes.TRANSACTIONS_END_EDIT});\n            dispatch(updateAdminLocally());\n            const message = `Removed transaction ${id} of type ${transaction_type}. Client: ${client_name}. Main amount: ${adminAmount}. Partner amount: ${partnerAmount}. Partner: ${username}. Rate ${rate}`;\n            dispatch(addLog(user, logTypes.TRANSACTION_REMOVE, message))\n        })\n        .catch(e => dispatch({type: actionTypes.TRANSACTIONS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const setTransactionsFilter = (filter, value) => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_SET_FILTER, filter, value});\n        dispatch(getAllTransactions())\n    }\n}\n\nexport const setAllPartnersSelected = allPartnersSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED,\n        allPartnersSelected\n    }\n}\n\nexport const setAllTypesSelected = allTypesSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_TYPES_SELECTED,\n        allTypesSelected\n    }\n}\n","import numeral from 'numeral';\n\nexport function urltoid(url){\n    const arr = url.split(\"/\");\n    return arr[arr.length - 2];\n}\n\nexport function formatText(text){\n    return text[0].toUpperCase() + text.toLowerCase().slice(1).replace(/[_.]/, ' ')\n}\n\nexport function formatDate(date){\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-UK', options)\n}\n\nexport function round2(num){\n    return Math.round(num * 100 + Number.EPSILON) / 100\n}\n\nnumeral.register('locale', 'al', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'k',\n        million: 'm',\n        billion: 'b',\n        trillion: 't'\n    },\n    currency: {\n        symbol: '€'\n    }\n});","import * as types from './actionTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { getAllTransactions } from './transactionsActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\nimport { urltoid } from '../../useful';\nimport * as  logTypes from './logTypes';\n\nexport const getAllUsers = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.get('https://api.chimera-finance.com/api/users/', { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.USERS_GET_LIST,\n                users: res.data\n            })\n        }).catch(e => {\n            console.log(e);\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_ADD})\n    }\n}\n\nexport const beginEdit = email => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_EDIT, email})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_EDIT})\n    }\n}\n\nexport const updateUserLocally = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.get(`https://api.chimera-finance.com/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.USERS_GET_ONE, data: response.data});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const updateAdminLocally = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, id} = state.auth;\n        axios.get(`https://api.chimera-finance.com/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.ADMIN_UPDATE_BALANCE, balance: response.data.partner_data.balance});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const addUser = (username, email, password, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/users/\", {\n            username, email, password, partner_data\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            const {url, username, partner_data} = res.data;\n            const {balance, Wrate, CCrate} = partner_data;\n            dispatch({type: types.USERS_ADD_SUCCESS, user: res.data});\n            dispatch({type: types.USERS_END_ADD});\n            dispatch(updateAdminLocally());\n            dispatch(addLog(urltoid(url), logTypes.USER_ADD, `Added partner ${username} with initial balance ${numeral(parseFloat(balance)).format('0,0.00 $')} Wire rate ${Wrate} and Credit Card rate ${CCrate}.`))\n        }).catch(e => {\n            dispatch({type: types.USERS_ADD_FAIL})\n        })\n    }\n}\n\nexport const editUser = (url, username, email, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const oldUser = users.filter(u=> u.url === url)[0];\n        const oldUsername = oldUser.username;\n        const oldEmail = oldUser.email;\n        const oldBalance = oldUser.partner_data.balance;\n        const oldWRate = oldUser.partner_data.Wrate;\n        const oldCCRate = oldUser.partner_data.CCrate;\n        const admin = oldUser.is_staff;\n        const {balance, Wrate, CCrate} = partner_data;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(url.replace('http', 'https'), {username, email, partner_data},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_EDIT_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally())\n            dispatch(updateUserLocally(urltoid(url)));\n            const adminOrPartner = admin ? 'admin' : `partner with id ${urltoid(url)}`;\n            const changedUsername = (username !== oldUsername) ? ` username from ${oldUsername} to ${username},` : '';\n            const changedEmail = (email !== oldEmail) ?  ` email from ${oldEmail} to ${email},` : '';\n            const changedBalance = (parseFloat(balance) !== parseFloat(oldBalance)) ?  ` balance from ${numeral(parseFloat(oldBalance)).format('0,0.00 $')} to ${numeral(parseFloat(balance)).format('0,0.00 $')},` : '';\n            const changedWRate = (Wrate !== oldWRate) ?  ` Wire rate from ${oldWRate} to ${Wrate},` : '';\n            const changedCCRate = (CCrate !== oldCCRate) ?  ` Credit Card rate from ${oldCCRate} to ${CCrate},` : '';\n            let message = `Updated ${adminOrPartner}: changed${changedUsername + changedEmail + changedBalance + changedWRate + changedCCRate}`.replace(/.$/,\".\");\n            dispatch(addLog(urltoid(url), logTypes.USER_UPDATE, message))\n        })\n        .catch(e => dispatch({type: types.USERS_EDIT_FAIL, error: e}))\n    }\n}\n\nexport const removeUser = url => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const {users} = state.users;\n        const user = users.filter(u=> u.url === url)[0];\n        const bearer = 'Bearer ' + token;\n        axios.delete(url.replace('http', 'https'),{headers: {\"Authorization\": bearer}})\n        .then((res) => {\n            const {username, partner_data} = user;\n            const {balance} = partner_data;\n            dispatch({type: types.USERS_REMOVE_SUCCESS, url});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally());\n            dispatch(getAllTransactions());\n            const message = `Removed partner ${username}, along with his balance of ${balance} and all his transactions.`;\n            dispatch(null, logTypes.USER_REMOVE, message)\n        })\n        .catch(e => dispatch({type: types.USERS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const toggleActive = (url, is_active) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user = users.filter(u=> u.url === url)[0];\n        const {username} = user;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(url, {is_active, partner_data: {}},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_ARCHIVE_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateUserLocally(urltoid(url)));\n            const logtype = is_active ? logTypes.USER_ACTIVATE : logTypes.USER_DEACTIVATE;\n            const action = is_active ? \"Activated\" : \"Deactivated\";\n            const message = `${action} partner ${username}. Now he will ${is_active ? 'again' : 'not'} be available for new transactions and${is_active ? '' : ' will not be able to'} log in.`;\n            dispatch(addLog(urltoid(url), logtype, message))\n        })\n        .catch(e => dispatch({type: types.USERS_ARCHIVE_FAIL, error: e}))\n    }\n}","import axios from 'axios';\nimport * as types from './actionTypes';\nimport {getAllUsers} from './usersActions';\nimport {getAllTransactions} from './transactionsActions';\n\nexport const authStart = () => {\n    return {\n        type: types.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, id, email, username, is_staff, balance) => {\n    return {\n        type: types.AUTH_SUCCESS,\n        token,\n        id,\n        email,\n        username,\n        is_staff,\n        balance\n    }\n}\nexport const authFail = error => {\n    return {\n        type: types.AUTH_FAIL,\n        error\n    }\n}\nexport const authLogout = () => {\n    return {\n        type: types.AUTH_LOGOUT\n    }\n}\n\nexport const setToken = token => {\n    return {\n        type: types.AUTH_SET_TOKEN,\n        token\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        axios.post('https://api.chimera-finance.com/api/auth/logout/').then(()=>{\n            dispatch(authLogout())\n            window.persistor.flush()\n            window.persistor.purge()\n        }).catch(e => {\n            console.log(e.message)\n        })\n    }\n}\n\nexport const refreshToken = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.post('https://api.chimera-finance.com/api/auth-jwt-refresh/', {token}).then(res => {\n            dispatch(setToken(res.data.token))\n        }).catch(e => {\n            console.log(\"refresh token error \" + e)\n            dispatch(logout())\n        })\n    }\n}\n\nexport const login = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('https://api.chimera-finance.com/api/auth/login/', {\n            email,\n            password\n        }).then(res => {\n            const {token, user} = res.data;\n            const {pk, email, username} = user;\n            axios.get(`https://api.chimera-finance.com/api/users/${pk}/`,{\n                headers: {'Authorization': `Bearer ${token}`}\n            }).then(res => {\n                const {is_active, is_staff, partner_data} = res.data;\n                let balance  = parseFloat(partner_data.balance);\n                if(is_active){\n                    dispatch(authSuccess(token, pk, email, username, is_staff, balance));\n                }\n                if(is_staff){\n                    dispatch(getAllUsers());\n                    dispatch(getAllTransactions())\n                }\n            })\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}\n\nexport const resetPassword = email => {\n    return dispatch => {\n        axios.post('https://api.chimera-finance.com/api/auth/password/reset/', {email});\n        dispatch({type: types.AUTH_RESET_PASSWORD});\n    }\n}\n\nexport const changePassword = (new_password1, new_password2) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post('https://api.chimera-finance.com/api/auth/password/change/', {new_password1, new_password2}, { headers: { 'Authorization': bearer } });\n        dispatch({type: types.AUTH_RESET_PASSWORD});\n    }\n}\n\nexport const signup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('https://api.chimera-finance.com/api/users/register/', {\n            username,\n            email,\n            password1,\n            password2\n        }).then(res => {\n            const token = res.data.key;\n            dispatch(authSuccess(token));\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}","import * as types from './actionTypes';\n\nexport const selectMenu = selected => {\n    return dispatch => {\n        dispatch({\n            type: types.SYSTEM_SET_SELECTED_MENU,\n            selected\n        })\n    }\n}","import React, { useEffect } from 'react';\nimport { Pivot, PivotItem, PivotLinkSize, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { DefaultButton } from 'office-ui-fabric-react';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout, refreshToken } from '../../store/actions/authActions';\nimport { selectMenu } from '../../store/actions/systemActions';\nimport './Menu.sass';\n\nfunction Menu({logOut, refreshToken, setMenu, token, menu, admin, username}){\n    useEffect(() => {\n      const interval = setInterval( () => {\n        refreshToken()\n      }, 300000);\n      return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        refreshToken();\n        window.addEventListener(\"focus\", refreshToken);\n        return () => window.removeEventListener(\"focus\", refreshToken);\n    },[])\n    \n    if(!token) return null;\n    \n    function itemClicked(e){\n      setMenu(e.key.slice(1));\n    }\n    \n    function logOutClicked(){\n      logOut();\n      return <Redirect to=\"/login\" />\n    }\n    \n    return (\n        <div id=\"menu\">\n          <nav>\n            <Pivot linkSize={PivotLinkSize.normal} linkFormat={PivotLinkFormat.links} selectedKey={menu} onLinkClick={itemClicked}>\n              <PivotItem iconProps={{iconName: 'People'}} itemKey=\"0\" headerText=\"Dashboard\" onClick={() => setMenu(\"home\")} onRenderItemLink={() => <Link to=\"/\"><Icon iconName=\"Diagnostic\" /> Dashboard</Link>} />\n              {admin ? <PivotItem itemKey=\"1\" headerText=\"Users\" onClick={() => setMenu(\"users\")} onRenderItemLink={() => <Link to=\"/users\"><Icon iconName=\"People\" /> Users</Link>} /> : null}\n              <PivotItem itemKey=\"2\" headerText=\"Transactions\" onClick={() => setMenu(\"transactions\")} onRenderItemLink={() => <Link to=\"/transactions\"><Icon iconName=\"Money\" /> Transactions</Link>} />\n              <PivotItem itemKey=\"4\" headerText=\"Transactions\" onClick={() => setMenu(\"logs\")} onRenderItemLink={() => <Link to=\"/logs\"><Icon iconName=\"TextDocument\" /> Logs</Link>} />\n            </Pivot>\n            <div>\n              <Text variant=\"large\" styles={{root: {verticalAlign: 'middle', color: '#777'}}}>{username}  |  </Text>\n              <DefaultButton\n                className=\"logout\"\n                allowDisabledFocus={true}\n                text=\"Logout\"\n                onClick={() => logOutClicked()}\n                iconProps={{ iconName: 'Leave' }}\n              />\n            </div>\n          </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    admin: state.auth.admin,\n    menu: state.system.menu,\n    username: state.auth.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logout()),\n    setMenu: menu => dispatch(selectMenu(menu)),\n    refreshToken: () => dispatch(refreshToken())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { w3cwebsocket } from 'websocket';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { formatText } from '../../useful';\nimport { getAllTransactions } from '../../store/actions/transactionsActions';\nimport { updateAdminLocally } from '../../store/actions/usersActions';\nimport './Notifications.sass';\n\nfunction Notifications({token, getTransactions, updateThisUser}){\n    const client = w3cwebsocket(`wss://api.chimera-finance.com/notifications/?${token}`);\n    const [anchor, setAnchor] = useState(null);\n    const [notifications, setNotifications] = useState([]);\n    \n    useEffect(()=>{\n        client.onopen = () => {\n          console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (m) => {\n            const msg = JSON.parse(m.data);\n            const {message, id, type} = msg;\n            setNotifications([...notifications, {head: formatText(type), message, id}])\n            getTransactions();\n            updateThisUser();\n        };\n        return () => client.close()\n    }, [token])\n\n    function Notification({head, body, id, hideNotification}){\n        const [active, setActive] = useState(true);\n        useEffect(()=>{\n            const timeoutid = setTimeout(() => {\n                setActive(false)\n                hideNotification(id)\n            }, 10000);\n            return () => clearTimeout(timeoutid)\n        }, [])\n        return(\n            <div>\n                {active ? <Callout\n                    className=\"ms-CalloutExample-callout\"\n                    onClick={()=>hideNotification(id)}\n                    isBeakVisible={false}\n                    target={anchor}\n                    gapSpace={0}\n                    directionalHint={DirectionalHint.bottomRightEdge}\n                    styles={{root: {width: '280px', backgrounColor: 'white', zIndex: 8}}}\n                >\n                    <div className=\"content\">\n                        <Text styles={{root: {display: 'block', padding: '20px 20px 0px 20px'}}} variant=\"large\">{head}</Text>\n                        <Text styles={{root: {display: 'block', padding: '0px 20px 20px 20px'}}} variant=\"medium\">{body}</Text>\n                    </div>\n                </Callout>: null}\n            </div>\n        )\n    }\n\n    function removeNotification(id){\n        setNotifications(notifications.filter(n=>n.id !== id))\n    }\n\n    return(\n        <div id=\"notifications\">\n            <div className=\"ms-CalloutCoverExample-buttonArea\" id=\"anchor\" ref={ref=>setAnchor(ref)}>\n                {notifications.map((notification, i) => {\n                    return <Notification key={i} head={notification.head} body={notification.message} id={notification.id} hideNotification={id => removeNotification(id)}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTransactions: () => dispatch(getAllTransactions()),\n        updateThisUser: () => dispatch(updateAdminLocally())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React, {useEffect} from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip, AreaChart, Area} from 'recharts';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { setFilter, getDashboardData } from '../../store/actions/dashboardActions';\nimport AnimatedNumber from 'animated-number-react';\nimport { round2 } from '../../useful';\nimport './Dashboard.sass';\n\nfunction Dashboard({admin, balance, users, setFilter, filters, getData, data, partnerId}){\n\n    let {fromDate, toDate, partner, alltime} = filters;\n\n    const selectedPartner = admin ? partner : parseInt(partnerId);\n\n    useEffect(()=>{\n        getData()\n    }, [getData, fromDate, toDate, partner, alltime])\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    const partnersDropdown = users.filter(u=> !u.is_staff).map(u => {\n        const urlArray = u.url.split(\"/\");\n        const key = urlArray[urlArray.length - 2];\n        return {key, text: u.username}\n    });\n\n    function formatDate(date){\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return date.toLocaleDateString('en-UK', options);\n    }\n\n    function prepareSingleUserData(id){\n        const partnerData = data.sort((a, b) => new Date(a.entry_time) - new Date(b.entry_time)).filter(d => d.user === parseInt(id)).filter(d => d.transaction_type !== \"Payment\").map(d=> {\n            return {\n                ...d,\n                entry_time: new Date(d.entry_time).toLocaleDateString(\"it-IT\").replace('/2019', '')\n            }\n        });\n        const dates = [...new Set(partnerData.map(d => d.entry_time))];\n        return dates.map(d => {\n            return {\n                name: d,\n                wire: round2(partnerData.filter(p => p.entry_time === d).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                cc: round2(partnerData.filter(p => p.entry_time === d).filter(d => d.transaction_type === \"Credit Card\").reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                profit: round2(partnerData.filter(p => p.entry_time === d).reduce((da, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + da\n                }, 0))\n            }\n        })\n    }\n\n    function prepareAllUsersData(d){\n        d = d.filter(t => t.transaction_type !== \"Payment\");\n        const partners = users.filter(u=>!u.is_staff).map(u => {\n            const urlArray = u.url.split(\"/\");\n            const id = parseInt(urlArray[urlArray.length - 2]);\n            const username = u.username\n            return {id, username}\n        });\n        return partners.map(p => {\n            return {\n                name: p.username,\n                wire: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                cc: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => d.transaction_type === \"Credit Card\").reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                profit: round2(d.filter(d => parseInt(d.user) === p.id).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + accumulator\n                }, 0))\n            }\n        })\n    }\n\n    const alldata = prepareAllUsersData(data);\n    const allUsersWire = alldata.reduce((acc, b)=> acc + b.wire, 0);\n    const allUsersCC = alldata.reduce((acc, b)=> acc + b.cc, 0);\n    const allUsersDeposits = allUsersWire + allUsersCC;\n    const singleUserData = prepareSingleUserData(selectedPartner);\n    const singleUserWire = singleUserData.reduce((acc, b)=> acc + b.wire, 0);\n    const singleUserCC = singleUserData.reduce((acc, b)=> acc + b.cc, 0);\n    const singleUserDeposits = singleUserWire + singleUserCC;\n    const due = users.filter(u => !u.is_staff).reduce((a, b) => a + parseFloat(b.partner_data.balance), 0);\n    const selectedPartnerName = (selectedPartner && admin) ? partnersDropdown.find(p=> p.key === selectedPartner).text : null;\n    const selectedPartnerBalance = (selectedPartner && admin) ? users.find(u => u.url === `http://api.chimera-finance.com/api/users/${selectedPartner}/`).partner_data.balance : balance;\n    \n    return(\n        <div id=\"dashboard\">\n            <Stack className=\"bar\" horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                    {admin ? <div className=\"combo\"><ComboBox autoComplete=\"on\" selectedKey={selectedPartner} options={partnersDropdown} placeholder=\"Partner...\" onChange={(e, e2) => setFilter('partner',e2.key)} style={{width: 140}} />{selectedPartner ? <span className=\"clear\" onClick={()=>setFilter('partner', null)}>Clear</span> : null}</div> : null}\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> {setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0))); setFilter('alltime', false)}}/>\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> {setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)));setFilter('alltime', false)}}/>\n                    <Toggle inlineLabel label='Time limit' onText='All time' offText='Date range' checked={alltime} onChange={()=>setFilter('alltime', !alltime)}  />\n                </Stack>\n                <div className=\"balance\">\n                    <div className=\"txt\">{admin ? 'To pay: ' : 'Balance: '}</div>\n                    <Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(admin ? due : balance)} formatValue={(due) => numeral(parseFloat(due)).format(\"0,0.00 $\")} /></Text>\n                </div>\n            </Stack>\n            {selectedPartner ? <section className=\"userInfo\">\n                <AreaChart\n                    width={720}\n                    height={400}\n                    data={singleUserData}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"wire\" stackId=\"one\" stroke=\"#fce100\" fill=\"#fce100\" />\n                    <Area type=\"monotone\" dataKey=\"cc\" stackId=\"one\" stroke=\"#ffaa44\" fill=\"#ffaa44\" />\n                    {admin ? <Area type=\"monotone\" dataKey=\"profit\" stackId=\"one\" stroke=\"#82ca9d\" fill=\"darkgreen\" /> : null}\n                </AreaChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            {admin ? <tr>\n                                <td>Partner: </td>\n                                <td><Text variant=\"xLarge\">{selectedPartnerName}</Text></td>\n                            </tr> : null}\n                            <tr>\n                                <td>Balance: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(selectedPartnerBalance)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(singleUserDeposits)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserWire)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserCC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n            {(admin && alldata.length) ? <section className=\"allInfo\">\n            <BarChart\n                    width={720}\n                    height={400}\n                    data={alldata}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"wire\" fill=\"#fce100\" />\n                    <Bar dataKey=\"cc\" fill=\"#ffaa44\" />\n                    <Bar dataKey=\"profit\" fill=\"darkgreen\" />\n                </BarChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(allUsersDeposits)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersWire)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersCC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users.users,\n        balance: state.auth.balance,\n        admin: state.auth.admin,\n        partnerId: state.auth.id,\n        data: state.dashboard.data,\n        filters: state.dashboard.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilter: (filter, value) => dispatch(setFilter(filter, value)),\n        getData: () => dispatch(getDashboardData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import * as types from './actionTypes';\nimport axios from 'axios';\nimport {logout} from './authActions';\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.DASHBOARD_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getDashboardData = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, alltime} = state.dashboard.filters;\n        const {token} = state.auth;\n        const dateQ = alltime ? '' : `from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        let q = `?${dateQ}`;\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.DASHBOARD_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}","import React, {useEffect} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Dashboard from '../pjeset/Home/Dashboard';\nimport { selectMenu } from '../store/actions/systemActions';\nimport './Home.sass';\n\nfunction Home({selectMenu, token, balance}){\n    useEffect(()=>{selectMenu(\"0\");document.title = \"Chimera | Home\"}, [selectMenu]);\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"home\">\n            <Dashboard />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        balance: state.auth.balance\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {useState, useEffect} from 'react';\nimport {useSpring, animated} from 'react-spring';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, resetPassword } from '../store/actions/authActions';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport logourl from '../Chimera_01-01.svg'\nimport './Login.sass';\n\nfunction Login({login, forgot, error, token}){\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(()=>{document.title = \"Chimera | Login\"}, [])\n\n    const props = useSpring({opacity: 1, from: {opacity: 0}})\n    \n    if(token){return <Redirect to=\"/\" />}\n\n    return(\n        <div id=\"login\">\n            <div className=\"logo\">\n                <img src={logourl} alt=\"logo file\"/><animated.div style={props}><span className=\"Chimera\">Chimera</span></animated.div>\n            </div>\n            <form>\n                <h3>Log in</h3>\n                <TextField name=\"admin_email\" type=\"email\" label=\"email\" placeholder=\"enter email\" onChange={({target}) => setEmail(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <TextField name=\"admin_password\" label=\"Password\" type=\"password\" placeholder=\"enter password\" onChange={({target})=> setPassword(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <TooltipHost className=\"forgot\" content={email ? \"\" : \"Please enter email\"} styles={{ root: { display: 'inline-block' } }}>\n                    <Text onClick={() => {\n                        if(email){\n                            return forgot(email);\n                        }else{\n                            return null\n                        }\n                    }}>Forgot password?</Text>\n                </TooltipHost>\n                <PrimaryButton className=\"login\" onClick={() => login(email, password)}>Log in</PrimaryButton>\n                <h6>{error && error.message}</h6>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        error: state.auth.error,\n        loading: state.auth.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (email, password) => dispatch(login(email, password)),\n        forgot: email => dispatch(resetPassword(email))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editUser, removeUser,toggleActive, endEdit } from '../../store/actions/usersActions';\nimport './EditUser.sass';\n\nfunction EditUser({editing, endEdit, username, email, Wrate, CCrate, balance, active, staff, url, save, remove, toggleActiveState}){\n    const [_username, setUsername] = useState(username);\n    const [_email, setEmail] = useState(email);\n    const [_balance, setBalance] = useState(balance);\n    const [_Wrate, setWRate] = useState(Wrate);\n    const [_CCrate, setCCRate] = useState(CCrate);\n    const [_active, setActive] = useState(active);\n    const [deleting, setDeleting] = useState(false);\n    useEffect(()=>{setActive(active)}, [active]);\n    const deActivateColorRoot = !_active ? \"green\" : \"brown\";\n    const deActivateColorRootHovered = !_active ? \"darkgreen\" : \"darkbrown\";\n    const deActivateColorRootPressed = !_active ? \"darkgreen\" : \"darkred\";\n    return(\n        <div>\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Edit user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" value={_username || \"\"} onChange={({target}) => setUsername(target.value)} />\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" value={_email} onChange={({target}) => setEmail(target.value)} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={_balance || 0} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={_Wrate || undefined} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card Rate\" name=\"credit card rate\" placeholder=\"rate\" value={_CCrate || undefined} onChange={({target}) => setCCRate(target.value)} /> \n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()}text=\"Cancel\" />\n                        {!staff ? <DefaultButton\n                            className=\"delete\"\n                            styles={{root: {color: deActivateColorRoot, borderColor: deActivateColorRoot}, \n                                    rootHovered: {color: deActivateColorRootHovered, borderColor: deActivateColorRootHovered}, \n                                    rootPressed: {color: deActivateColorRootPressed, borderColor: deActivateColorRootPressed}}\n                                } \n                            onClick={() => toggleActiveState(url, !_active)}\n                            text={_active ? \"Deactivate\" : \"Activate\"}\n                            split={true}\n                            menuProps={{\n                                items: [\n                                  {\n                                    key: 'deleteUser',\n                                    text: 'Delete',\n                                    style: {color: 'red', marginRight: 0},\n                                    onClick: () => setDeleting(true),\n                                    styles: {root: {color: 'red'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}},\n                                    iconProps: { iconName: 'Delete', color: 'red' }\n                                  }\n                                ]\n                              }} /> : null}\n                        <PrimaryButton \n                            className=\"save\"\n                            onClick={()=>save(url, _username, _email, {balance: _balance, Wrate: _Wrate, CCrate: _CCrate})} \n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n        <Dialog\n            hidden={!deleting}\n            onDismiss={() => setDeleting(false)}\n            dialogContentProps={{\n                type: DialogType.normal,\n                title: `Delete user ${username}?`,\n                subText: 'Warning! By deleting this user you will delete all his data, all his related transactions and the resulting profit from this user. Are you absolutely sure you want to delete this user?'\n            }}\n            modalProps={{\n                isBlocking: true,\n                styles: { main: { maxWidth: 450 } },\n                dragOptions: true\n            }}\n            >\n            <DialogFooter>\n                <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                    onClick={() => {remove(url); setDeleting(false)}} text=\"Delete\" />\n                <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n            </DialogFooter>\n        </Dialog>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        save: (url, username, email, is_active, is_staff, partner_data) => dispatch(editUser(url, username, email, is_active, is_staff, partner_data)),\n        toggleActiveState: (url, active) => dispatch(toggleActive(url, active)),\n        endEdit: () => dispatch(endEdit()),\n        remove: url => dispatch(removeUser(url))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addUser, endAdd } from '../../store/actions/usersActions';\nimport axios from 'axios';\nimport './AddUser.sass';\n\nfunction AddUser({adding, endAdd, add, users}){\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password1, setPassword1] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n    const [Wrate, setWRate] = useState(1);\n    const [CCrate, setCCRate] = useState(1);\n    const [isReady, setReady] = useState(false);\n    const [errors, setErrors] = useState({\n        email: '',\n        username: '',\n        password: '',\n        passwordMatch: ''\n    })\n\n    useEffect(()=> {\n        if(username && email && password1 && password2 && !errors.username && !errors.email && !errors.password && !errors.passwordMatch){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [username, email, password1, password2, errors])\n\n    function checkEmail(){\n        if(email){\n            const emails = users.map(u => u.email);\n            //var emailRegex = new RegExp('^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$')\n            emails.forEach(em =>{\n                if (em === email){\n                    setErrors({...errors, email: 'User with this email is already present'})\n                }\n            })\n            if(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n                setErrors({...errors, email: ''})\n            }else{\n                setErrors({...errors, email: 'Email not valid'})\n            }\n        }else{\n            setErrors({...errors, email: ''})\n        }\n    }\n\n    function checkPassword(){\n        var mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n        if(password1){\n            if(mediumRegex.test(password1)){\n                setErrors({...errors, password: ''})\n            }else{\n                setErrors({...errors, password: 'Password not valid'})\n            }\n        }else{\n            setErrors({...errors, password: ''})\n        }\n    }\n\n    function checkPassword2(){\n        if(password2){\n            if(password1 === password2){\n                setErrors({...errors, passwordMatch: ''})\n            }else{\n                setErrors({...errors, passwordMatch: 'Passwords do not match'})\n            }\n        }else{\n            setErrors({...errors, passwordMatch: ''})\n        }\n    }\n\n    function checkUsername(){\n        var usernameRegex = new RegExp(\"^[A-Z]+$\", \"i\");\n        if(username){   \n            if(usernameRegex.test(username)){\n                setErrors({...errors, username: ''})\n            }else{\n                setErrors({...errors, username: 'Username should contain only letters'})\n            }\n            const usernames = users.map(u => u.username);\n            for(let us in usernames){\n                if (us === username){\n                    setErrors({...errors, username: 'User with this username is already present'})\n                }\n            }\n        }else{\n            setErrors({...errors, username: ''})\n        }\n    }\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Add user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" errorMessage={errors.email} value={email} onChange={({target}) => setEmail(target.value)} onBlur={checkEmail} /> \n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" errorMessage={errors.username} value={username} onChange={({target}) => setUsername(target.value)} onBlur={checkUsername} />\n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"password\" label=\"Password\" name=\"password1\" placeholder=\"password\" errorMessage={errors.password} value={password1} onChange={({target}) => setPassword1(target.value)} onBlur={checkPassword} />\n                        <TextField type=\"password\" label=\"Confirm Password\" name=\"password2\" placeholder=\"confirm password\" errorMessage={errors.passwordMatch} value={password2} onChange={({target}) => setPassword2(target.value)} onBlur={checkPassword2} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={balance} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={Wrate} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card Rate\" name=\"credit card rate\" placeholder=\"rate\" value={CCrate} onChange={({target}) => setCCRate(target.value)} /> \n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            disabled={!isReady}\n                            className=\"add\"\n                            onClick={()=>add(username, email, password1, {balance, Wrate, CCrate})}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (username, email, password1, password2, partner_data) => dispatch(addUser(username, email, password1, password2, partner_data)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsRow } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { getAllUsers, beginEdit, beginAdd } from '../store/actions/usersActions';\nimport EditUser from '../pjeset/Users/EditUser';\nimport AddUser from '../pjeset/Users/AddUser';\nimport './Users.sass';\n\nnumeral.locale('al');\n\nfunction sortByKey(array, key, asc) {\n    return array.sort(function(a, b) {\n        var x = a[key]; var y = b[key];\n        return asc ? ((x < y) ? -1 : ((x > y) ? 1 : 0)) : ((x > y) ? -1 : ((x < y) ? 1 : 0));\n    });\n}\n\nfunction Users({getUsers, selectMenu, beginEdit, beginAdd, token, users, editing, editingThis, adding}){\n\n    const [sortkey, setSortkey] = useState(\"staff\");\n    const [ascending, setAscending] = useState(true);\n    const [searchStr, setSearchStr] = useState(\"\");\n    const [roleFilter, setRoleFilter] = useState(\"partner\");\n\n    useEffect(()=>{\n        getUsers()\n    }, [getUsers])\n\n    const columns = [\n        {\n            key: 'username',\n            name: 'Username',\n            fieldName: 'username',\n            minWidth: 60,\n            maxWidth: 80,\n            isSorted: sortkey === 'username',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'email',\n            name: 'Email',\n            fieldName: 'email',\n            minWidth: 150,\n            maxWidth: 200,\n            isSorted: sortkey === 'email',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'password',\n            name: 'Password',\n            fieldName: 'password',\n            minWidth: 120,\n            maxWidth: 140,\n            isSorted: sortkey === 'password',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'date',\n            isPadded: true\n        },\n        {\n            key: 'last_login',\n            name: 'Last login',\n            fieldName: 'last_login',\n            minWidth: 100,\n            maxWidth: 120,\n            isSorted: sortkey === 'last_login',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'date',\n            isPadded: true\n        },\n        {\n            key: 'balance',\n            name: 'Balance',\n            fieldName: 'balance',\n            minWidth: 100,\n            maxWidth: 150,\n            isSorted: sortkey === 'balance',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'Wrate',\n            name: 'Wire Rate',\n            fieldName: 'Wrate',\n            minWidth: 40,\n            maxWidth: 150,\n            isSorted: sortkey === 'Wrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'CCrate',\n            name: 'Credit Card Rate',\n            fieldName: 'CCrate',\n            minWidth: 40,\n            maxWidth: 150,\n            isSorted: sortkey === 'CCrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'is_active',\n            name: 'Active',\n            fieldName: 'active',\n            minWidth: 60,\n            maxWidth: 100,\n            onColumnClick: onColumnClick,\n            isPadded: false\n        }\n    ];\n\n    const data = sortByKey(users.map(user => {\n        return {\n            email: user.email,\n            last_login: moment(new Date(user.last_login)).fromNow().replace(\"50 years ago\", 'never'),\n            date_joined: moment(new Date(user.date_joined)).fromNow(),\n            username: user.username,\n            password: user.password,\n            balance: parseFloat(user.partner_data.balance),\n            Wrate: user.partner_data.Wrate,\n            CCrate: user.partner_data.CCrate,\n            active: user.is_active,\n            staff: user.is_staff,\n            url: user.url\n        }\n    }), sortkey, ascending).filter(u => {\n        return (u.email.indexOf(searchStr) !== -1) || (u.username.indexOf(searchStr) !== -1)\n    }).filter(u => {\n        switch(roleFilter){\n            case \"partner\": return !u.staff;\n            case \"admin\": return u.staff;\n            default: return true;\n        }\n    })\n\n    useEffect(()=>{\n        selectMenu(\"1\");\n        document.title = \"Chimera | Users\"\n    }, [getUsers, selectMenu])\n\n    function onItemInvoked({email}){\n        beginEdit(email);\n    }\n    function onColumnClick(_e, {key}){\n        setSortkey(key);\n        setAscending(true)\n        if(key === sortkey){setAscending(!ascending)}\n    }\n    function onRenderItemColumn(item, index, column){\n        const fieldContent = item[column.fieldName];\n        switch (column.key) {\n            case 'is_active':\n                return fieldContent ? <Icon iconName=\"StatusCircleInner\" styles={{root: {marginLeft: '14px'}}} /> : null;\n            case 'balance':\n                return numeral(fieldContent).format('0,0.00 $')\n            default:\n              return <span>{fieldContent}</span>;\n          }\n    }\n    function onRenderRow(props){\n        return <DetailsRow {...props} styles={{root: {backgroundColor: props.item.staff ? \"lightblue\" : \"white\", fontSize: '1.1em'}}} />\n    }\n    \n    let editData;\n    editData = data.filter(user => {\n        return user.email === editingThis\n    })[0]\n    const roles = [\n        { key: 'admin', text: 'Admin' },\n        { key: 'partner', text: 'Partner' },\n    ];\n        \n    if(!token){\n        return <Redirect to=\"/login\" />\n    }\n    return(\n        <div id=\"users\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <SearchBox styles={{root:{width: 300}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}}  value={searchStr} placeholder=\"Filter by username or email...\" onChange={({target}) => setSearchStr(target.value)} />\n                        <ComboBox style={{width: 150}} options={roles} selectedKey={roleFilter} placeholder=\"Filter by role...\" onChange={(e, {key})=> setRoleFilter(key)} />\n                    </Stack>\n                    <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New user\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    />\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={960}\n                        items={data}\n                        compact={false}\n                        columns={columns}\n                        selectionMode={SelectionMode.none}\n                        isHeaderVisible={true}\n                        onItemInvoked={onItemInvoked}\n                        checkboxVisibility={2}\n                        onRenderItemColumn={onRenderItemColumn}\n                        onRenderRow={onRenderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {editing ? <EditUser editing={editing} {...editData} /> : null}\n            {adding ? <AddUser adding={adding} /> : null}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        editing: state.users.editing,\n        editingThis: state.users.editingThis,\n        adding: state.users.adding\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        getUsers: () => dispatch(getAllUsers()),\n        beginEdit: email => dispatch(beginEdit(email)),\n        beginAdd: () => dispatch(beginAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addTransaction, endAdd } from '../../store/actions/transactionsActions';\nimport './AddTransaction.sass';\n\nnumeral.locale('al');\n\nfunction AddTransaction({adding, endAdd, add, users, clients}){\n    const [type, setType] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [amount_paid, setAmountpaid] = useState(0);\n    const [partner, setPartner] = useState(\"\");\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(1);\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.CCrate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(1);break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    const client_names = clients.map(client => {\n        return {\n            key: client.client_name,\n            text: client.client_name\n        }\n    })\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `http://api.chimera-finance.com/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    let color = 'white'\n\n    switch(type){\n        case 'Wire': color = '#fce100'; break;\n        case 'Credit Card': color = '#ffaa44'; break;\n        case 'Withdraw': color = '#da3b01'; break;\n        case 'Payment': color = '#00b7c3'; break;\n        default: color = 'white'; break;\n    }\n\n    const showCalculations = (type && type !== \"Payment\" && partner)\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Add transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form style={{borderLeft: `4px solid ${color}`}}>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <ComboBox disabled={type === \"Payment\"} label=\"Client name\" autoComplete=\"on\" allowFreeform selectedKey={client} options={client_names} placeholder=\"Client name...\" onChange={(e, {key}) => setClient(key)} />\n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" styles={{root: {visibility: showCalculations ? 'visible' : 'hidden'}}} variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"add\"\n                            disabled={!ready}\n                            onClick={()=>add(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        clients: state.transactions.clients\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (type, client, amount, amount_paid, rate, partner) => dispatch(addTransaction(type, client, amount, amount_paid, rate, partner)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTransaction);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editTransaction, endEdit } from '../../store/actions/transactionsActions';\nimport './EditTransaction.sass';\n\nnumeral.locale('al');\n\nfunction EditTransaction({editing, endEdit, edit, users, data}){\n\n    const [type, setType] = useState(data.transaction_type);\n    const [client, setClient] = useState(data.client_name);\n    const [amount, setAmount] = useState(parseFloat(data.amount));\n    const [amount_paid, setAmountpaid] = useState(parseFloat(data.amount_paid));\n    const [partner, setPartner] = useState(data.user);\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(currentPartner.partner_data.rate)\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `http://api.chimera-finance.com/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    return(\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Edit transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <TextField disabled={type === \"Payment\"} name=\"client\" label=\"Client name\" placeholder=\"client\" value={client} onChange={({target}) => setClient(target.value)} /> \n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"edit\"\n                            disabled={!ready}\n                            onClick={()=>edit(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        edit: (type, client, amount, amount_paid, rate, partner) => dispatch(editTransaction(type, client, amount, amount_paid, rate, partner)),\n        endEdit: () => dispatch(endEdit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTransaction);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsListLayoutMode, DetailsRow } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton, IconButton, DefaultButton } from 'office-ui-fabric-react';\nimport { Dropdown, DropdownMenuItemType } from 'office-ui-fabric-react/lib/Dropdown';\nimport { CSVLink } from \"react-csv\";\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { formatDate } from '../useful';\nimport { beginEdit, beginAdd, removeTransaction, getAllTransactions, getAllClients, setTransactionsFilter, setAllPartnersSelected, setAllTypesSelected } from '../store/actions/transactionsActions';\nimport AddTransaction from '../pjeset/Transactions/AddTransaction';\nimport EditTransaction from '../pjeset/Transactions/EditTransaction';\nimport './Transactions.sass';\n\nnumeral.locale('al');\n\nfunction Transactions ({selectMenu, beginAdd, token, users, admin, adding, editing, editData, transactions, remove, getTransactions, getClients, setFilter, filters, allPartners, allTypes}){\n\n    const [deleting, setDeleting] = useState(false);\n    const [deletingID, setDeletingID] = useState(0);\n    \n    let {client, partners, types, fromDate, toDate} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=> {\n        if(!partners.length){\n            setFilter('partners', users.filter(u=> !u.is_staff).map(u => {\n                const urlArray = u.url.split(\"/\");\n                const key = urlArray[urlArray.length - 2];\n                return key\n            }));\n        }\n        if(!types.length){\n            setFilter('types', ['Wire', 'Credit Card', 'Withdraw', 'Payment']);\n        }\n    }, [setFilter, users])\n\n    const partnersDropdown = users.filter(u => !u.is_staff).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        const key = urlArray[urlArray.length - 2];\n        return {\n            key,\n            text: u.username,\n            selected: partners.includes(key)\n        }\n    });\n\n    const typesDropdown = [\n        { key: 'Wire', text: 'Wire', selected: types.includes('Wire') },\n        { key: 'Credit Card', text: 'Credit Card', selected: types.includes('Credit Card') },\n        { key: 'Withdraw', text: 'Withdraw', selected: types.includes('Withdraw') },\n        { key: 'Payment', text: 'Payment', selected: types.includes('Payment') }\n    ];\n    \n    useEffect(()=>{\n        document.title = \"Chimera | Transactions\"; \n        selectMenu(admin ? \"2\" : \"3\");\n        getTransactions();\n        if(admin){getClients()}\n    }, [selectMenu, getTransactions, admin]);\n    \n    const columns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 17,\n            maxWidth: 17,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 110,\n            maxWidth: 180,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'partner',\n            name: 'Partner',\n            fieldName: 'partner',\n            minWidth: 70,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'rate',\n            name: 'Rate',\n            fieldName: 'rate',\n            minWidth: 30,\n            maxWidth: 50,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'Partner amount',\n            fieldName: 'amount_paid',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 110,\n            maxWidth: 110,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'delete',\n            name: 'Delete',\n            minWidth: 45,\n            maxWidth: 55,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true,\n            onRender: (item) => {\n                return <IconButton onClick={() => { setDeleting(true); setDeletingID(item.id) }} styles={{root:{height: '15px', marginLeft: '7px', color: '#ccc'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}}} iconProps={{iconName: \"Delete\"}} />\n            }\n        }\n    ];\n\n    const partnerColumns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 20,\n            maxWidth: 30,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 60,\n            maxWidth: 100,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 120,\n            maxWidth: 140,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 50,\n            maxWidth: 60,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'My amount',\n            fieldName: 'amount_paid',\n            minWidth: 60,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 130,\n            maxWidth: 150,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        }\n    ];\n\n    function _onColumnClick(){}\n\n    function renderRow(row){\n        let color;\n        switch(row.item.transaction_type){\n            case 'Wire': color = '#fce100'; break;\n            case 'Credit Card': color = '#ffaa44'; break;\n            case 'Withdraw': color = '#da3b01'; break;\n            case 'Payment': color = '#00b7c3'; row.item.amount = ''; row.item.rate = ''; break;\n            default: color = 'white'; break;\n        }\n        return <DetailsRow {...row} styles={{root: {borderLeft: `4px solid ${color}`, fontSize: '1.1em'}}} />\n    }\n\n    function renderItemColumn(item, index, column){\n        if(column.key === 'amount' || column.key === 'amount_paid'){\n            return <div style={{textAlign: 'right'}}>{item[column.key]}</div>\n        }else if(column.key === 'id' || column.key === 'created_at'){\n            return <div style={{fontSize: '1em'}}>{item[column.key]}</div>\n        }else{\n            return item[column.key]\n        }\n    }\n\n    function editTransaction({id}){\n        // beginEdit(id)\n    }\n\n    let data = []\n    \n    data = transactions.map(t => {\n        return {\n            id: t.id,\n            transaction_type: t.transaction_type,\n            client: t.client_name,\n            amount: numeral(parseFloat(t.amount)).format('0,0.00 $'),\n            rate: numeral(parseFloat(t.rate)).format('0 %'),\n            partner: admin ? users.filter(u => u.url === `http://api.chimera-finance.com/api/users/${t.user}/`)[0].username : null,\n            amount_paid: numeral(parseFloat(t.amount_paid)).format('0,0.00 $'),\n            created_at: moment(new Date(t.entry_time)).format(\"DD/MM/YYYY hh:mm:ss\"),\n        }\n    });\n\n    const CSVheaders = [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Type\", key: \"transaction_type\" },\n        { label: \"Client Name\", key: \"client\" },\n        { label: \"Parner Name\", key: \"partner\" },\n        { label: \"Amount\", key: \"amount\" },\n        { label: \"Partner Amount\", key: \"amount_paid\" },\n        { label: \"Date\", key: \"created_at\" }\n      ];\n\n    function changeSelectedPartners(e, e2){\n        const p = partnersDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        });\n        allPartners(p.every(p=>p.selected));\n        setFilter('partners', p.filter(p => p.selected).map(p=> p.key));\n    }\n\n    function changeSelectedTypes(e, e2){\n        const t = typesDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        })\n        allTypes(t.every(t=>t.selected));\n        setFilter('types', t.filter(t => t.selected).map(t=> t.key));\n    }\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"transactions\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <Dropdown\n                            placeholder=\"Type\"\n                            selectedKeys={types}\n                            onChange={changeSelectedTypes}\n                            multiSelect\n                            options={[{ key: 'typesHeader', text: 'Types', itemType: DropdownMenuItemType.Header },...typesDropdown]}\n                            style={{width: 120, textAlign: 'left'}}\n                        />\n                        <SearchBox styles={{root: {width: 150}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}} value={client} placeholder=\"Client name...\" onChange={({target}) => setFilter('client',target.value.toLowerCase())} />\n                        {admin ? <Dropdown\n                            placeholder=\"Filter by partner\"\n                            selectedKeys={partners}\n                            onChange={changeSelectedPartners}\n                            multiSelect\n                            options={[{ key: 'partnersHeader', text: 'Partners', itemType: DropdownMenuItemType.Header },...partnersDropdown]}\n                            style={{width: 140, textAlign: 'left'}}\n                        /> : null}\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                    </Stack>\n                    {admin ? <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New transaction\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    /> : null}\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={admin ? 960 : 720}\n                        height={'70%'}\n                        items={data}\n                        compact={false}\n                        columns={admin ? columns : partnerColumns}\n                        onItemInvoked={editTransaction}\n                        enableShimmer={!data}\n                        isHeaderVisible={true}\n                        checkboxVisibility={2}\n                        selectionMode={SelectionMode.multiple}\n                        layoutMode={DetailsListLayoutMode.justified}\n                        onRenderItemColumn={renderItemColumn}\n                        onRenderRow={renderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {adding ? <AddTransaction adding={adding} /> : null}\n            {editing ? <EditTransaction data={editData} editing={editing} /> : null}\n            <Dialog\n                hidden={!deleting}\n                onDismiss={() => setDeleting(false)}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Delete transaction?',\n                    subText: 'Do you really want do delete this transaction?'\n                }}\n                modalProps={{\n                    isBlocking: true,\n                    styles: { main: { maxWidth: 450 } },\n                    dragOptions: true\n                }}\n                >\n                <DialogFooter>\n                    <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                        onClick={() => {remove(deletingID); setDeleting(false)}} text=\"Delete\" />\n                    <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n            <div className=\"bottom\">\n                <div className=\"data\">\n                    <Text variant=\"small\" >{transactions.length || 'No'} transaction{transactions.length !== 1 ? 's' : ''}</Text>\n                </div>\n                {transactions.length ? <DefaultButton iconProps={{iconName: 'Download'}}><CSVLink filename={`transactions_report_${moment(new Date()).format('DD_MM_YYYY_hh_mm_ss')}.csv`} data={data} headers={CSVheaders}>Download CSV</CSVLink></DefaultButton> : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        admin: state.auth.admin,\n        balance: state.auth.balance,\n        users: state.users.users,\n        transactions: state.transactions.transactions,\n        editing: state.transactions.editing,\n        adding: state.transactions.adding,\n        editData: state.transactions.editData,\n        filters: state.transactions.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        beginAdd: () => dispatch(beginAdd()),\n        beginEdit: id => dispatch(beginEdit(id)),\n        remove: url => dispatch(removeTransaction(url)),\n        getTransactions: () => dispatch(getAllTransactions()),\n        getClients: () => dispatch(getAllClients()),\n        setFilter: (filter, value) => dispatch(setTransactionsFilter(filter, value)),\n        allTypes: bool => dispatch(setAllTypesSelected(bool)),\n        allPartners: bool => dispatch(setAllPartnersSelected(bool))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport {getLogs, setFilter, deleteLog} from '../store/actions/logsActions';\nimport {selectMenu} from '../store/actions/systemActions';\nimport { ActivityItem, Icon, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport { Redirect } from 'react-router-dom';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { IconButton } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { formatText, formatDate } from '../useful';\nimport * as t from '../store/actions/logTypes';\nimport './Logs.sass';\n\nfunction Logs({logs, token, getLogs, remove, selectMenu, users, filters, setFilter}){\n\n    function Log({item}){\n        const [hovered, setHovered] = useState(false);\n        let color = hovered ? '#666' : '#ccc';\n        return <div className=\"log\" onMouseOver={() => setHovered(true)} onMouseOut={() => setHovered(false)}>\n            <IconButton onMouseEnter={() => setHovered(true)} onClick={() => remove(item.key)} iconProps={{iconName:\"Delete\"}} styles={{root: {position: 'absolute', right: '5px', top: '3px', color}, rootHovered: {color: 'red'}}} />\n            <ActivityItem {...item} className={classNames.exampleRoot} />\n        </div>\n    }\n\n    let {fromDate, toDate, message} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=>{\n        document.title = \"Chimera | Logs\"; \n        selectMenu(\"4\");\n    }, [selectMenu]);\n\n    useEffect(()=>{\n        getLogs()\n    }, [getLogs, filters])\n\n    function getUsername(user){\n        if(users.length){\n            const filteredUser = users.filter(u=> u.url === `http://api.chimera-finance.com/api/users/${user}/`);\n            if(filteredUser.length){\n                return \"@\" + filteredUser[0].username;\n            }else{\n                return \"Deleted\"\n            }\n        }else{\n            return '';\n        }\n    }\n\n    const classNames = mergeStyleSets({\n        exampleRoot: {\n          marginTop: '8px',\n          textAlign: 'left'\n        },\n        nameText: {\n          fontWeight: 'bold'\n        }\n    });\n\n    const items = logs.map(log => {\n        let iconName = '', color= '';\n        switch(log.log_type){\n            case t.USER_ADD: iconName = 'FollowUser'; color=\"darkgreen\";break;\n            case t.USER_REMOVE: iconName = 'UserRemove';color=\"darkred\"; break;\n            case t.USER_UPDATE: iconName = 'UserSync'; color=\"orange\";break;\n            case t.TRANSACTION_ADD: iconName = 'Money'; color=\"darkgreen\";break;\n            case t.TRANSACTION_REMOVE: iconName = 'Money';color=\"darkred\"; break;\n            case t.USER_DEACTIVATE: iconName = 'UserPause';color=\"darkred\"; break;\n            case t.USER_ACTIVATE: iconName = 'UserFollowed'; color=\"darkgreen\";break;\n            default: iconName = \"Message\";\n        }\n        return {\n            key: log.id,\n            activityDescription: [\n              <Text className={classNames.nameText} key={log.id}>{formatText(log.log_type)}</Text>,\n              <Link key={log.id + 'a'}>&nbsp;{getUsername(log.user)}</Link>\n            ],\n            activityIcon: <Icon styles={{root:{color}}} iconName={iconName} />,\n            comments: [\n              <span key={log.id}>{log.message}</span>\n            ],\n            timeStamp: moment(new Date(log.entry_time)).format(\"DD/MM/YY hh:mm:ss\")\n          }\n    })\n\n    if(!token){return <Redirect to=\"/login\" />}\n\n    return(\n        <div id=\"logs\">\n            <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\", marginTop: '20px', marginBottom: '12px' } }}>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                <SearchBox styles={{root:{width: 300}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}} value={message} placeholder=\"Filter by log text...\" onChange={({target}) => setFilter('message',target.value.toLowerCase())} />\n            </Stack>\n            <div className=\"logs\">\n                {items.map(item => (\n                    <Log key={item.key} item={item} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        logs: state.logs.logs,\n        filters: state.logs.filters,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getLogs: () => dispatch(getLogs()),\n        remove: id => dispatch(deleteLog(id)),\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setFilter: (filter, value) => dispatch(setFilter(filter, value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menu from './pjeset/common/Menu';\nimport Notifications from './pjeset/common/Notifications';\nimport Home from './faqet/Home';\nimport Login from './faqet/Login';\nimport Users from './faqet/Users';\nimport Transactions from './faqet/Transactions';\nimport Logs from './faqet/Logs';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport './App.css';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/users\" component={Users} />\n        <Route exact path=\"/transactions\" component={Transactions} />\n        <Route exact path=\"/logs\" component={Logs} />\n      </Switch>\n      <Notifications />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './store/reducers/rootReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n        key: 'root',\n        storage,\n      }\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);  \nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\nwindow.persistor = persistor;\n\nReactDOM.render(\n                <Provider store={store}>\n                        <PersistGate loading={null} persistor={persistor}>\n                                <BrowserRouter>\n                                        <App />\n                                </BrowserRouter>\n                        </PersistGate>\n                </Provider>, \n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}