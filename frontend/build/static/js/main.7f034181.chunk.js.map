{"version":3,"sources":["Chimera_01-01.svg","store/reducers/authReducer.js","store/actions/actionTypes.js","store/reducers/usersReducer.js","store/reducers/transactionsReducer.js","store/reducers/systemReducer.js","store/reducers/dashboardReducer.js","store/reducers/logsReducer.js","store/reducers/rootReducer.js","store/actions/logTypes.js","store/actions/logsActions.js","store/actions/transactionsActions.js","useful.js","store/actions/usersActions.js","store/actions/authActions.js","store/actions/systemActions.js","pjeset/common/Menu.js","pjeset/common/Notifications.js","pjeset/Home/Dashboard.js","store/actions/dashboardActions.js","faqet/Home.js","faqet/Login.js","pjeset/Users/EditUser.js","pjeset/Users/AddUser.js","faqet/Users.js","pjeset/Transactions/AddTransaction.js","pjeset/Transactions/EditTransaction.js","faqet/Transactions.js","faqet/Logs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","token","error","loading","admin","balance","id","authReducer","state","arguments","length","undefined","action","type","Object","objectSpread","authStart","authFail","email","username","is_staff","authSuccess","authSetToken","parseFloat","updateBalance","users","editing","editingThis","adding","updateUsersList","newUsers","map","user","url","data","usersReducer","console","log","getUsersList","filter","removeSuccess","beginEdit","endEdit","beginAdd","endAdd","concat","toConsumableArray","addSuccess","today","Date","aWeekAgo","setDate","getDate","transactions","editData","filters","partners","types","client","fromDate","setHours","toDate","allPartnersSelected","allTypesSelected","updateTransactionsList","newTransactions","transaction","systemReducer","getTransactionsList","defineProperty","value","setFilter","setAllPartnersSelected","setAllTypesSelected","menu","selected","selectMenu","partner","alltime","dashboardReducer","getDashboardData","message","logs","logsReducer","getLogs","rootReducer","combineReducers","auth","transactionsReducer","system","dashboard","USER_ADD","USER_REMOVE","USER_UPDATE","USER_DEACTIVATE","USER_ACTIVATE","TRANSACTION_ADD","TRANSACTION_REMOVE","addLog","dispatch","getState","bearer","axios","post","log_type","headers","Authorization","then","res","catch","e","response","status","logout","getAllTransactions","_state$auth","_state$transactions","q","toLocaleDateString","get","urltoid","arr","split","formatText","text","toUpperCase","toLowerCase","slice","replace","formatDate","date","year","month","day","round2","num","Math","round","Number","EPSILON","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","currency","symbol","getAllUsers","updateUserLocally","updateAdminLocally","partner_data","setToken","window","persistor","flush","purge","connect","logOut","setMenu","refreshToken","_ref","useEffect","interval","setInterval","clearInterval","addEventListener","removeEventListener","react_default","a","createElement","Pivot","linkSize","PivotLinkSize","normal","linkFormat","PivotLinkFormat","links","selectedKey","onLinkClick","key","PivotItem","iconProps","iconName","itemKey","headerText","onClick","onRenderItemLink","react_router_dom","to","Icon","Text","variant","styles","root","verticalAlign","color","DefaultButton","className","allowDisabledFocus","react_router","getTransactions","updateThisUser","w3cwebsocket","_useState","useState","_useState2","slicedToArray","anchor","setAnchor","_useState3","_useState4","notifications","setNotifications","Notification","_ref2","head","body","hideNotification","_useState5","_useState6","active","setActive","timeoutid","setTimeout","clearTimeout","Callout","isBeakVisible","target","gapSpace","directionalHint","DirectionalHint","bottomRightEdge","width","backgrounColor","zIndex","display","padding","onopen","onmessage","m","msg","JSON","parse","close","ref","notification","i","n","removeNotification","partnerId","getData","_state$dashboard$filt","dateQ","selectedPartner","parseInt","partnersDropdown","u","urlArray","d","alldata","t","transaction_type","name","wire","reduce","accumulator","amount","cc","profit","amount_paid","allUsersWire","acc","b","allUsersCC","allUsersDeposits","singleUserData","partnerData","sort","entry_time","Set","da","prepareSingleUserData","singleUserWire","singleUserCC","singleUserDeposits","due","selectedPartnerName","find","Stack","horizontal","horizontalAlign","tokens","childrenGap","ComboBox","autoComplete","options","placeholder","onChange","e2","style","DatePicker","firstDayOfWeek","DayOfWeek","Monday","maxDate","onSelectDate","minDate","Toggle","inlineLabel","label","onText","offText","checked","build_default","duration","formatValue","format","es6","height","strokeDasharray","dataKey","stackId","stroke","fill","document","title","Home_Dashboard","login","password","_res$data","pk","_res$data2","is_active","setEmail","setPassword","props","useSpring","opacity","from","src","logourl","alt","web","div","TextField","onKeyPress","_ref3","_ref4","_ref5","PrimaryButton","save","oldUser","oldUsername","oldEmail","oldBalance","oldWRate","Wrate","oldCCRate","CCrate","patch","adminOrPartner","changedUsername","changedEmail","changedBalance","changedWRate","changedCCRate","logTypes","editUser","toggleActiveState","logtype","toggleActive","remove","delete","removeUser","staff","_username","setUsername","_email","_balance","setBalance","_useState7","_useState8","_Wrate","setWRate","_useState9","_useState10","_CCrate","setCCRate","_useState11","_useState12","_active","_useState13","_useState14","deleting","setDeleting","deActivateColorRoot","deActivateColorRootHovered","deActivateColorRootPressed","Modal","isOpen","onDismiss","isModeless","dragOptions","dragHandleSelector","containerClassName","ActionButton","buttonType","step","min","max","_ref6","borderColor","rootHovered","rootPressed","menuProps","items","marginRight","Dialog","hidden","dialogContentProps","DialogType","subText","modalProps","isBlocking","main","maxWidth","DialogFooter","backgroundColor","add","password1","password2","addUser","setPassword1","setPassword2","_useState15","_useState16","isReady","setReady","_useState17","passwordMatch","_useState18","errors","setErrors","errorMessage","onBlur","mx_found","smtp_check","forEach","em","usernameRegex","RegExp","test","usernames","us","mediumRegex","_ref7","_ref8","disabled","locale","getUsers","sortkey","setSortkey","ascending","setAscending","searchStr","setSearchStr","roleFilter","setRoleFilter","array","asc","columns","fieldName","minWidth","isSorted","isSortedDescending","onColumnClick","isPadded","last_login","moment","fromNow","date_joined","x","y","indexOf","_e","Fabric","align","justifySelf","MarqueeSelection","DetailsList","compact","selectionMode","SelectionMode","none","isHeaderVisible","onItemInvoked","checkboxVisibility","onRenderItemColumn","item","index","column","fieldContent","marginLeft","onRenderRow","DetailsRow","assign","fontSize","Users_EditUser","Users_AddUser","rate","client_name","adminAmount","abs","partnerAmount","addTransaction","setType","setClient","setAmount","setAmountpaid","setPartner","currentPartner","setCurrentPartner","setRate","sign","setSign","ready","toPrecision","clientOK","setTheSign","showCalculations","borderLeft","allowFreeform","visibility","htmlFor","edit","editTransaction","_transactions$filter$","setTransactionsFilter","allTypes","bool","allPartners","deletingID","setDeletingID","includes","typesDropdown","isRowHeader","_onColumnClick","isResizable","onRender","IconButton","partnerColumns","created_at","Dropdown","selectedKeys","every","multiSelect","itemType","DropdownMenuItemType","Header","textAlign","enableShimmer","multiple","layoutMode","DetailsListLayoutMode","justified","row","Transactions_AddTransaction","Transactions_EditTransaction","react_csv","filename","_state$logs$filters","getUsername","filteredUser","classNames","mergeStyleSets","exampleRoot","marginTop","nameText","fontWeight","activityDescription","Link","activityIcon","comments","timeStamp","marginBottom","ActivityItem","initializeIcons","App","common_Menu","exact","path","component","Home","Login","Users","Transactions","Logs","common_Notifications","Boolean","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistStore","ReactDOM","render","es","integration_react","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.7f034181.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Chimera_01-01.71e6b608.svg\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    token: \"\",\n    error: null,\n    loading: false,\n    admin: false,\n    balance: 0,\n    id: 0\n}\n\nconst authStart = (state, action) => {\n    return {...state, error: null, loading: true}\n}\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state, \n        error: null, \n        loading: false, \n        token: action.token,\n        id: action.id,\n        email: action.email,\n        username: action.username,\n        admin: action.is_staff,\n        balance: action.balance\n    }\n}\n\nconst authSetToken = (state, action) => {\n    return {...state, token: action.token}\n}\n\n\nconst authFail = (state, action) => {\n    return {...state, error: action.error, loading: false}\n}\n\nconst updateBalance = (state, action) => {\n    return {...state, balance: parseFloat(action.balance)}\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.AUTH_START: return authStart(state, action);\n        case types.AUTH_FAIL: return authFail(state, action);\n        case types.AUTH_SUCCESS: return authSuccess(state, action);\n        case types.AUTH_SET_TOKEN: return authSetToken(state, action);\n        case types.ADMIN_UPDATE_BALANCE: return updateBalance(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default authReducer;","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const AUTH_SET_TOKEN = \"AUTH_SET_TOKEN\";\nexport const USERS_GET_ONE = \"USERS_GET_ONE\";\nexport const USERS_GET_LIST = \"USERS_GET_LIST\";\nexport const USERS_BEGIN_ADD = \"USERS_BEGIN_ADD\";\nexport const USERS_END_ADD = \"USERS_END_ADD\";\nexport const USERS_ADD_SUCCESS = \"USERS_ADD_SUCCESS\";\nexport const USERS_ADD_FAIL = \"USERS_ADD_FAIL\";\nexport const USERS_BEGIN_EDIT = \"USERS_BEGIN_EDIT\";\nexport const USERS_END_EDIT = \"USERS_END_EDIT\";\nexport const USERS_EDIT_SUCCESS = \"USERS_EDIT_SUCCESS\";\nexport const USERS_EDIT_FAIL = \"USERS_EDIT_FAIL\";\nexport const USERS_ARCHIVE_SUCCESS = \"USERS_ARCHIVE_SUCCESS\";\nexport const USERS_ARCHIVE_FAIL = \"USERS_ARCHIVE_FAIL\";\nexport const USERS_REMOVE_SUCCESS = \"USERS_REMOVE_SUCCESS\";\nexport const USERS_REMOVE_FAIL = \"USERS_REMOVE_FAIL\";\nexport const USERS_UPDATE_USER = \"USERS_UPDATE_USER\";\nexport const TRANSACTIONS_SET_FILTER = \"TRANSACTIONS_SET_FILTER\";\nexport const TRANSACTIONS_SET_ALL_PARTNERS_SELECTED = \"TRANSACTIONS_SET_ALL_PARTNERS_SELECTED\";\nexport const TRANSACTIONS_SET_ALL_TYPES_SELECTED = \"TRANSACTIONS_SET_ALL_TYPES_SELECTED\";\nexport const TRANSACTIONS_GET_LIST = \"TRANSACTIONS_GET_LIST\";\nexport const TRANSACTIONS_BEGIN_ADD = \"TRANSACTIONS_BEGIN_ADD\";\nexport const TRANSACTIONS_END_ADD = \"TRANSACTIONS_END_ADD\";\nexport const TRANSACTIONS_ADD_SUCCESS = \"TRANSACTIONS_ADD_SUCCESS\";\nexport const TRANSACTIONS_ADD_FAIL = \"TRANSACTIONS_ADD_FAIL\";\nexport const TRANSACTIONS_BEGIN_EDIT = \"TRANSACTIONS_BEGIN_EDIT\";\nexport const TRANSACTIONS_END_EDIT = \"TRANSACTIONS_END_EDIT\";\nexport const TRANSACTIONS_EDIT_SUCCESS = \"TRANSACTIONS_EDIT_SUCCESS\";\nexport const TRANSACTIONS_EDIT_FAIL = \"TRANSACTIONS_EDIT_FAIL\";\nexport const TRANSACTIONS_ARCHIVE_SUCCESS = \"TRANSACTIONS_ARCHIVE_SUCCESS\";\nexport const TRANSACTIONS_ARCHIVE_FAIL = \"TRANSACTIONS_ARCHIVE_FAIL\";\nexport const TRANSACTIONS_REMOVE_SUCCESS = \"TRANSACTIONS_REMOVE_SUCCESS\";\nexport const TRANSACTIONS_REMOVE_FAIL = \"TRANSACTIONS_REMOVE_FAIL\";\nexport const DASHBOARD_SET_FILTER = \"DASHBOARD_SET_FILTER\";\nexport const DASHBOARD_GET_DATA = \"DASHBOARD_GET_DATA\";\nexport const LOGS_SET_FILTER = \"LOGS_SET_FILTER\";\nexport const LOGS_GET_DATA = \"LOGS_GET_DATA\";\nexport const LOGS_ADD = \"LOGS_ADD\";\nexport const LOGS_REMOVE = \"LOGS_REMOVE\";\nexport const SYSTEM_CALLOUT_SHOW = \"SYSTEM_CALLOUT_SHOW\";\nexport const SYSTEM_CALLOUT_HIDE = \"SYSTEM_CALLOUT_HIDE\";\nexport const SYSTEM_SET_SELECTED_MENU = \"SYSTEM_SET_SELECTED_MENU\";\nexport const ADMIN_UPDATE_BALANCE = \"ADMIN_UPDATE_BALANCE\";\nexport const ADMIN_UPDATE_LOCALLY = \"ADMIN_UPDATE_LOCALLY\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    users: [],\n    editing: false,\n    editingThis: '',\n    adding: false\n}\n\nconst getUsersList = (state, action) => {\n    return {...state, users: action.users}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editingThis: action.email}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, users: [...state.users, action.user] }\n}\n\nconst removeSuccess = (state, action) => {\n    const newUsers = state.users.filter(user => {\n        return user.url !== action.url\n    });\n    return {...state, users: newUsers}\n}\n\nconst updateUsersList = (state, action) => {\n    const newUsers = state.users.map(user => {\n        if(user.url === action.data.url){\n            return action.data\n        }else{\n            return user\n        }\n    })\n    return {...state, users: newUsers}\n}\n\nconst usersReducer = (state = initialState, action) => {\n    console.log(action.type);\n    switch(action.type){\n        case types.USERS_GET_LIST: return getUsersList(state, action);\n        case types.USERS_GET_ONE: return updateUsersList(state, action);\n        case types.USERS_EDIT_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_ARCHIVE_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.USERS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.USERS_END_EDIT: return endEdit(state);\n        case types.USERS_BEGIN_ADD: return beginAdd(state);\n        case types.USERS_END_ADD: return endAdd(state);\n        case types.USERS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.USERS_UPDATE_USER: return updateUsersList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default usersReducer;","import * as types from '../actions/actionTypes';\n\nconst today = new Date();\nconst aWeekAgo = new Date(new Date().setDate(today.getDate()-6));\n\nconst initialState = {\n    transactions: [],\n    editing: false,\n    editingThis: 0,\n    adding: false,\n    editData: {},\n    filters: {\n        partners: [],\n        types: [],\n        client: '',\n        fromDate: new Date(aWeekAgo.setHours(0,0,0,0)),\n        toDate: new Date(today.setHours(23,59,59,0))\n    },\n    allPartnersSelected: true,\n    allTypesSelected: true\n}\n\nconst getTransactionsList = (state, action) => {\n    return {...state, transactions: action.transactions}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editData: action.transaction}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, transactions: [ action.transaction,...state.transactions] }\n}\n\nconst removeSuccess = (state, action) => {\n    const newTransactions = state.transactions.filter(transaction => {\n        return transaction.id !== action.id\n    });\n    return {...state, transactions: newTransactions}\n}\n\nconst updateTransactionsList = (state, action) => {\n    const newTransactions = state.transactions.map(transaction => {\n        if(transaction.url === action.data.url){\n            return action.data\n        }else{\n            return transaction\n        }\n    })\n    return {...state, transactions: newTransactions}\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst setAllPartnersSelected = (state, action) => {\n    return {...state, allPartnersSelected: action.allPartnersSelected}\n}\n\nconst setAllTypesSelected = (state, action) => {\n    return {...state, allTypesSelected: action.allTypesSelected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.TRANSACTIONS_GET_LIST: return getTransactionsList(state, action);\n        case types.TRANSACTIONS_EDIT_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_ARCHIVE_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.TRANSACTIONS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.TRANSACTIONS_END_EDIT: return endEdit(state);\n        case types.TRANSACTIONS_BEGIN_ADD: return beginAdd(state);\n        case types.TRANSACTIONS_END_ADD: return endAdd(state);\n        case types.TRANSACTIONS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.TRANSACTIONS_SET_FILTER: return setFilter(state, action);\n        case types.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED: return setAllPartnersSelected(state, action);\n        case types.TRANSACTIONS_SET_ALL_TYPES_SELECTED: return setAllTypesSelected(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    menu: '0'\n}\n\nconst selectMenu = (state, action) => {\n    return {...state, menu: action.selected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.SYSTEM_SET_SELECTED_MENU: return selectMenu(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        partner: 0,\n        alltime: false\n    },\n    data: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getDashboardData = (state, action) => {\n    return {...state, data: action.data}\n}\n\nconst dashboardReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.DASHBOARD_GET_DATA: return getDashboardData(state, action);\n        case types.DASHBOARD_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default dashboardReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        message: ''\n    },\n    logs: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getLogs = (state, action) => {\n    return {...state, logs: action.data}\n}\n\nconst logsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LOGS_GET_DATA: return getLogs(state, action);\n        case types.LOGS_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default logsReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer';\nimport transactionsReducer from './transactionsReducer';\nimport systemReducer from './systemReducer';\nimport dashboardReducer from './dashboardReducer';\nimport logsReducer from './logsReducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    users: usersReducer,\n    transactions: transactionsReducer,\n    system: systemReducer,\n    dashboard: dashboardReducer,\n    logs: logsReducer\n})\n\nexport default rootReducer;\n","export const USER_ADD = \"USER_ADD\";\nexport const USER_REMOVE = \"USER_REMOVE\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DEACTIVATE = \"USER_DEACTIVATE\";\nexport const USER_ACTIVATE = \"USER_ACTIVATE\";\nexport const TRANSACTION_ADD = \"TRANSACTION_ADD\";\nexport const TRANSACTION_REMOVE = \"TRANSACTION_REMOVE\";\nexport const TRANSACTION_UPDATE = \"TRANSACTION_UPDATE\";","import * as types from './actionTypes';\nimport axios from 'axios';\nimport { logout } from './authActions';\n\nexport const addLog = (user, type, message) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`https://api.chimera-finance.com/api/logs/`, {user, log_type: type, message}, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_ADD,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.LOGS_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getLogs = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, message} = state.logs.filters;\n        const {token} = state.auth;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(message){q+=`message=${message}`}\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/logs/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout());\n            }\n        });         \n    }    \n}","import * as actionTypes from './actionTypes';\nimport * as logTypes from './logTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { updateUserLocally, updateAdminLocally } from './usersActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\n\nexport const getAllTransactions = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, admin} = state.auth;\n        const {allTypesSelected, filters} = state.transactions;\n        // const own = admin ? '' : 'own';\n        const {client, types, partners, fromDate, toDate} = filters;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(client){q+=`client=${client}&`}\n        if(!allTypesSelected){q+=`types=${types}&,`}\n        if(admin){q+=`partners=${partners}&,`};\n        const bearer = 'Bearer ' + token;\n        if(!types.length || (admin && !partners.length)){\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_LIST,\n                transactions: []\n            })\n        }else{\n            axios.get(`https://api.chimera-finance.com/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n                const transactions = res.data;\n                dispatch({\n                    type: actionTypes.TRANSACTIONS_GET_LIST,\n                    transactions\n                })\n            }).catch(e => {\n                console.log(e)\n                if(e.response && e.response.status === 401){\n                    dispatch(logout);\n                }\n            });\n        }\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_ADD})\n    }\n}\n\nexport const beginEdit = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction = transactions.filter(t=>t.id === id)[0]\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_EDIT, transaction})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_EDIT})\n    }\n}\n\nexport const addTransaction = (transaction_type, client_name, amount, amount_paid, rate, user ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\"\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user0 = users.filter(u=> u.url === `https://api.chimera-finance.com/api/users/${user}/`)[0];\n        const {username} = user0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/transactions/\", {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\nexport const editTransaction = (transaction_type, client_name, amount, amount_paid, rate, user, id ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\";\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction0 = transactions.filter(t=> t.id === id)[0];\n        const {username} = transaction0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/transactions/\", {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\n\nexport const removeTransaction = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`https://api.chimera-finance.com/api/transactions/${id}/`,{headers: {\"Authorization\": bearer}})\n        .then(() => {\n            const {transactions} = state.transactions;\n            const {amount, amount_paid, client_name, user, rate, transaction_type} = transactions.filter(t=>t.id === id)[0];\n            const {users} = state.users;\n            const user0 = users.filter(u=> u.url === `https://api.chimera-finance.com/api/users/${user}/`)[0];\n            const {username} = user0;\n            const adminAmount = numeral(parseFloat(amount)).format('0,0.00 $');\n            const partnerAmount = numeral(parseFloat(amount_paid)).format('0,0.00 $');\n            dispatch({type: actionTypes.TRANSACTIONS_REMOVE_SUCCESS, id});\n            dispatch({type: actionTypes.TRANSACTIONS_END_EDIT});\n            dispatch(updateAdminLocally());\n            const message = `Removed transaction ${id} of type ${transaction_type}. Client: ${client_name}. Main amount: ${adminAmount}. Partner amount: ${partnerAmount}. Partner: ${username}. Rate ${rate}`;\n            dispatch(addLog(user, logTypes.TRANSACTION_REMOVE, message))\n        })\n        .catch(e => dispatch({type: actionTypes.TRANSACTIONS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const setTransactionsFilter = (filter, value) => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_SET_FILTER, filter, value});\n        dispatch(getAllTransactions())\n    }\n}\n\nexport const setAllPartnersSelected = allPartnersSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED,\n        allPartnersSelected\n    }\n}\n\nexport const setAllTypesSelected = allTypesSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_TYPES_SELECTED,\n        allTypesSelected\n    }\n}\n","import numeral from 'numeral';\n\nexport function urltoid(url){\n    const arr = url.split(\"/\");\n    return arr[arr.length - 2];\n}\n\nexport function formatText(text){\n    return text[0].toUpperCase() + text.toLowerCase().slice(1).replace(/[_.]/, ' ')\n}\n\nexport function formatDate(date){\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-UK', options)\n}\n\nexport function round2(num){\n    return Math.round(num * 100 + Number.EPSILON) / 100\n}\n\nnumeral.register('locale', 'al', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'k',\n        million: 'm',\n        billion: 'b',\n        trillion: 't'\n    },\n    currency: {\n        symbol: '€'\n    }\n});","import * as types from './actionTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { getAllTransactions } from './transactionsActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\nimport { urltoid } from '../../useful';\nimport * as  logTypes from './logTypes';\n\nexport const getAllUsers = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.get('https://api.chimera-finance.com/api/users/', { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.USERS_GET_LIST,\n                users: res.data\n            })\n        }).catch(e => {\n            console.log(e);\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_ADD})\n    }\n}\n\nexport const beginEdit = email => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_EDIT, email})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_EDIT})\n    }\n}\n\nexport const updateUserLocally = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.get(`https://api.chimera-finance.com/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.USERS_GET_ONE, data: response.data});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const updateAdminLocally = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, id} = state.auth;\n        axios.get(`https://api.chimera-finance.com/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.ADMIN_UPDATE_BALANCE, balance: response.data.partner_data.balance});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const addUser = (username, email, password, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(\"https://api.chimera-finance.com/api/users/\", {\n            username, email, password, partner_data\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            const {url, username, partner_data} = res.data;\n            const {balance, Wrate, CCrate} = partner_data;\n            dispatch({type: types.USERS_ADD_SUCCESS, user: res.data});\n            dispatch({type: types.USERS_END_ADD});\n            dispatch(updateAdminLocally());\n            dispatch(addLog(urltoid(url), logTypes.USER_ADD, `Added partner ${username} with initial balance ${numeral(parseFloat(balance)).format('0,0.00 $')} Wire rate ${Wrate} and Credit Card rate ${CCrate}.`))\n        }).catch(e => {\n            dispatch({type: types.USERS_ADD_FAIL})\n        })\n    }\n}\n\nexport const editUser = (url, username, email, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const oldUser = users.filter(u=> u.url === url)[0];\n        const oldUsername = oldUser.username;\n        const oldEmail = oldUser.email;\n        const oldBalance = oldUser.partner_data.balance;\n        const oldWRate = oldUser.partner_data.Wrate;\n        const oldCCRate = oldUser.partner_data.CCrate;\n        const admin = oldUser.is_staff;\n        const {balance, Wrate, CCrate} = partner_data;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(url, {username, email, partner_data},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_EDIT_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally())\n            dispatch(updateUserLocally(urltoid(url)));\n            const adminOrPartner = admin ? 'admin' : `partner with id ${urltoid(url)}`;\n            const changedUsername = (username !== oldUsername) ? ` username from ${oldUsername} to ${username},` : '';\n            const changedEmail = (email !== oldEmail) ?  ` email from ${oldEmail} to ${email},` : '';\n            const changedBalance = (parseFloat(balance) !== parseFloat(oldBalance)) ?  ` balance from ${numeral(parseFloat(oldBalance)).format('0,0.00 $')} to ${numeral(parseFloat(balance)).format('0,0.00 $')},` : '';\n            const changedWRate = (Wrate !== oldWRate) ?  ` Wire rate from ${oldWRate} to ${Wrate},` : '';\n            const changedCCRate = (CCrate !== oldCCRate) ?  ` Credit Card rate from ${oldCCRate} to ${CCrate},` : '';\n            let message = `Updated ${adminOrPartner}: changed${changedUsername + changedEmail + changedBalance + changedWRate + changedCCRate}`.replace(/.$/,\".\");\n            dispatch(addLog(urltoid(url), logTypes.USER_UPDATE, message))\n        })\n        .catch(e => dispatch({type: types.USERS_EDIT_FAIL, error: e}))\n    }\n}\n\nexport const removeUser = url => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const token = state.auth.token;\n        const {users} = state.users;\n        const user = users.filter(u=> u.url === url)[0];\n        const bearer = 'Bearer ' + token;\n        axios.delete(url,{headers: {\"Authorization\": bearer}})\n        .then((res) => {\n            const {username, partner_data} = user;\n            const {balance} = partner_data;\n            dispatch({type: types.USERS_REMOVE_SUCCESS, url});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally());\n            dispatch(getAllTransactions());\n            const message = `Removed partner ${username}, along with his balance of ${balance} and all his transactions.`;\n            dispatch(null, logTypes.USER_REMOVE, message)\n        })\n        .catch(e => dispatch({type: types.USERS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const toggleActive = (url, is_active) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user = users.filter(u=> u.url === url)[0];\n        const {username} = user;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(url, {is_active, partner_data: {}},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_ARCHIVE_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateUserLocally(urltoid(url)));\n            const logtype = is_active ? logTypes.USER_ACTIVATE : logTypes.USER_DEACTIVATE;\n            const action = is_active ? \"Activated\" : \"Deactivated\";\n            const message = `${action} partner ${username}. Now he will ${is_active ? 'again' : 'not'} be available for new transactions and${is_active ? '' : ' will not be able to'} log in.`;\n            dispatch(addLog(urltoid(url), logtype, message))\n        })\n        .catch(e => dispatch({type: types.USERS_ARCHIVE_FAIL, error: e}))\n    }\n}","import axios from 'axios';\nimport * as types from './actionTypes';\nimport {getAllUsers} from './usersActions';\nimport {getAllTransactions} from './transactionsActions';\n\nexport const authStart = () => {\n    return {\n        type: types.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, id, email, username, is_staff, balance) => {\n    return {\n        type: types.AUTH_SUCCESS,\n        token,\n        id,\n        email,\n        username,\n        is_staff,\n        balance\n    }\n}\nexport const authFail = error => {\n    return {\n        type: types.AUTH_FAIL,\n        error\n    }\n}\nexport const authLogout = () => {\n    return {\n        type: types.AUTH_LOGOUT\n    }\n}\n\nexport const setToken = token => {\n    return {\n        type: types.AUTH_SET_TOKEN,\n        token\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        axios.post('https://api.chimera-finance.com/api/auth/logout/').then(()=>{\n            dispatch(authLogout())\n            window.persistor.flush()\n            window.persistor.purge()\n        }).catch(e => {\n            console.log(e.message)\n        })\n    }\n}\n\nexport const refreshToken = token => {\n    return dispatch => {\n        axios.post('https://api.chimera-finance.com/api/auth-jwt-refresh/', {token}).then(res => {\n            dispatch(setToken(res.data.token))\n        }).catch(e => {\n            console.log(token)\n            console.log(\"refresh token error \" + e)\n            dispatch(logout())\n        })\n    }\n}\n\nexport const login = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('https://api.chimera-finance.com/api/auth/login/', {\n            email,\n            password\n        }).then(res => {\n            const {token, user} = res.data;\n            const {pk, email, username} = user;\n            axios.get(`https://api.chimera-finance.com/api/users/${pk}/`,{\n                headers: {'Authorization': `Bearer ${token}`}\n            }).then(res => {\n                const {is_active, is_staff, partner_data} = res.data;\n                let balance  = parseFloat(partner_data.balance);\n                if(is_active){\n                    dispatch(authSuccess(token, pk, email, username, is_staff, balance));\n                }\n                if(is_staff){\n                    dispatch(getAllUsers());\n                    dispatch(getAllTransactions())\n                }\n            })\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}\n\nexport const signup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('https://api.chimera-finance.com/api/users/register/', {\n            username,\n            email,\n            password1,\n            password2\n        }).then(res => {\n            const token = res.data.key;\n            dispatch(authSuccess(token));\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}","import * as types from './actionTypes';\n\nexport const selectMenu = selected => {\n    return dispatch => {\n        dispatch({\n            type: types.SYSTEM_SET_SELECTED_MENU,\n            selected\n        })\n    }\n}","import React, { useEffect } from 'react';\nimport { Pivot, PivotItem, PivotLinkSize, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { DefaultButton } from 'office-ui-fabric-react';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout, refreshToken } from '../../store/actions/authActions';\nimport { selectMenu } from '../../store/actions/systemActions';\nimport './Menu.sass';\n\nfunction Menu({logOut, refreshToken, setMenu, token, menu, admin, username}){\n    useEffect(() => {\n      const interval = setInterval( () => {\n        refreshToken(token)\n      }, 300000);\n      return () => clearInterval(interval);\n    }, [refreshToken, token]);\n\n    useEffect(()=>{\n      window.addEventListener(\"focus\", () => refreshToken(token));\n      return ()=>window.removeEventListener(\"focus\");\n    },[])\n    \n    if(!token) return null;\n    \n    function itemClicked(e){\n      setMenu(e.key.slice(1));\n    }\n    \n    function logOutClicked(){\n      logOut();\n      return <Redirect to=\"/login\" />\n    }\n    \n    return (\n        <div id=\"menu\">\n          <nav>\n            <Pivot linkSize={PivotLinkSize.normal} linkFormat={PivotLinkFormat.links} selectedKey={menu} onLinkClick={itemClicked}>\n              <PivotItem iconProps={{iconName: 'People'}} itemKey=\"0\" headerText=\"Dashboard\" onClick={() => setMenu(\"home\")} onRenderItemLink={() => <Link to=\"/\"><Icon iconName=\"Diagnostic\" /> Dashboard</Link>} />\n              {admin ? <PivotItem itemKey=\"1\" headerText=\"Users\" onClick={() => setMenu(\"users\")} onRenderItemLink={() => <Link to=\"/users\"><Icon iconName=\"People\" /> Users</Link>} /> : null}\n              <PivotItem itemKey=\"2\" headerText=\"Transactions\" onClick={() => setMenu(\"transactions\")} onRenderItemLink={() => <Link to=\"/transactions\"><Icon iconName=\"Money\" /> Transactions</Link>} />\n              <PivotItem itemKey=\"4\" headerText=\"Transactions\" onClick={() => setMenu(\"logs\")} onRenderItemLink={() => <Link to=\"/logs\"><Icon iconName=\"TextDocument\" /> Logs</Link>} />\n            </Pivot>\n            <div>\n              <Text variant=\"large\" styles={{root: {verticalAlign: 'middle', color: '#777'}}}>{username}  |  </Text>\n              <DefaultButton\n                className=\"logout\"\n                allowDisabledFocus={true}\n                text=\"Logout\"\n                onClick={() => logOutClicked()}\n                iconProps={{ iconName: 'Leave' }}\n              />\n            </div>\n          </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    admin: state.auth.admin,\n    menu: state.system.menu,\n    username: state.auth.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logout()),\n    setMenu: menu => dispatch(selectMenu(menu)),\n    refreshToken: token => dispatch(refreshToken(token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { w3cwebsocket } from 'websocket';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { formatText } from '../../useful';\nimport { getAllTransactions } from '../../store/actions/transactionsActions';\nimport { updateAdminLocally } from '../../store/actions/usersActions';\nimport './Notifications.sass';\n\nfunction Notifications({token, getTransactions, updateThisUser}){\n    const client = w3cwebsocket(`wss://api.chimera-finance.com/notifications/?${token}`);\n    const [anchor, setAnchor] = useState(null);\n    const [notifications, setNotifications] = useState([]);\n    \n    useEffect(()=>{\n        client.onopen = () => {\n          console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (m) => {\n            const msg = JSON.parse(m.data);\n            const {message, id, type} = msg;\n            setNotifications([...notifications, {head: formatText(type), message, id}])\n            getTransactions();\n            updateThisUser();\n        };\n        return () => client.close()\n    }, [token])\n\n    function Notification({head, body, id, hideNotification}){\n        const [active, setActive] = useState(true);\n        useEffect(()=>{\n            const timeoutid = setTimeout(() => {\n                setActive(false)\n                hideNotification(id)\n            }, 10000);\n            return () => clearTimeout(timeoutid)\n        }, [])\n        return(\n            <div>\n                {active ? <Callout\n                    className=\"ms-CalloutExample-callout\"\n                    onClick={()=>hideNotification(id)}\n                    isBeakVisible={false}\n                    target={anchor}\n                    gapSpace={0}\n                    directionalHint={DirectionalHint.bottomRightEdge}\n                    styles={{root: {width: '280px', backgrounColor: 'white', zIndex: 8}}}\n                >\n                    <div className=\"content\">\n                        <Text styles={{root: {display: 'block', padding: '20px 20px 0px 20px'}}} variant=\"large\">{head}</Text>\n                        <Text styles={{root: {display: 'block', padding: '0px 20px 20px 20px'}}} variant=\"medium\">{body}</Text>\n                    </div>\n                </Callout>: null}\n            </div>\n        )\n    }\n\n    function removeNotification(id){\n        setNotifications(notifications.filter(n=>n.id !== id))\n    }\n\n    return(\n        <div id=\"notifications\">\n            <div className=\"ms-CalloutCoverExample-buttonArea\" id=\"anchor\" ref={ref=>setAnchor(ref)}>\n                {notifications.map((notification, i) => {\n                    return <Notification key={i} head={notification.head} body={notification.message} id={notification.id} hideNotification={id => removeNotification(id)}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTransactions: () => dispatch(getAllTransactions()),\n        updateThisUser: () => dispatch(updateAdminLocally())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React, {useEffect} from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip, AreaChart, Area} from 'recharts';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { setFilter, getDashboardData } from '../../store/actions/dashboardActions';\nimport AnimatedNumber from 'animated-number-react';\nimport { round2 } from '../../useful';\nimport './Dashboard.sass';\n\nfunction Dashboard({admin, balance, users, setFilter, filters, getData, data, partnerId}){\n\n    let {fromDate, toDate, partner, alltime} = filters;\n\n    const selectedPartner = admin ? partner : parseInt(partnerId);\n\n    useEffect(()=>{\n        getData()\n    }, [getData, fromDate, toDate, partner, alltime])\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    const partnersDropdown = users.filter(u=> !u.is_staff).map(u => {\n        const urlArray = u.url.split(\"/\");\n        const key = urlArray[urlArray.length - 2];\n        return {key, text: u.username}\n    });\n\n    function formatDate(date){\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return date.toLocaleDateString('en-UK', options);\n    }\n\n    function prepareSingleUserData(id){\n        const partnerData = data.sort((a, b) => new Date(a.entry_time) - new Date(b.entry_time)).filter(d => d.user === parseInt(id)).filter(d => d.transaction_type !== \"Payment\").map(d=> {\n            return {\n                ...d,\n                entry_time: new Date(d.entry_time).toLocaleDateString(\"it-IT\").replace('/2019', '')\n            }\n        });\n        const dates = [...new Set(partnerData.map(d => d.entry_time))];\n        return dates.map(d => {\n            return {\n                name: d,\n                wire: round2(partnerData.filter(p => p.entry_time === d).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                cc: round2(partnerData.filter(p => p.entry_time === d).filter(d => d.transaction_type === \"Credit Card\").reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                profit: round2(partnerData.filter(p => p.entry_time === d).reduce((da, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + da\n                }, 0))\n            }\n        })\n    }\n\n    function prepareAllUsersData(d){\n        d = d.filter(t => t.transaction_type !== \"Payment\");\n        const partners = users.filter(u=>!u.is_staff).map(u => {\n            const urlArray = u.url.split(\"/\");\n            const id = parseInt(urlArray[urlArray.length - 2]);\n            const username = u.username\n            return {id, username}\n        });\n        return partners.map(p => {\n            return {\n                name: p.username,\n                wire: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                cc: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => d.transaction_type === \"Credit Card\").reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                profit: round2(d.filter(d => parseInt(d.user) === p.id).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + accumulator\n                }, 0))\n            }\n        })\n    }\n\n    const alldata = prepareAllUsersData(data);\n    const allUsersWire = alldata.reduce((acc, b)=> acc + b.wire, 0);\n    const allUsersCC = alldata.reduce((acc, b)=> acc + b.cc, 0);\n    const allUsersDeposits = allUsersWire + allUsersCC;\n    const singleUserData = prepareSingleUserData(selectedPartner);\n    const singleUserWire = singleUserData.reduce((acc, b)=> acc + b.wire, 0);\n    const singleUserCC = singleUserData.reduce((acc, b)=> acc + b.cc, 0);\n    const singleUserDeposits = singleUserWire + singleUserCC;\n    const due = users.filter(u => !u.is_staff).reduce((a, b) => a + parseFloat(b.partner_data.balance), 0);\n    const selectedPartnerName = (selectedPartner && admin) ? partnersDropdown.find(p=> p.key === selectedPartner).text : null;\n\n    return(\n        <div id=\"dashboard\">\n            <Stack className=\"bar\" horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                    {admin ? <div className=\"combo\"><ComboBox autoComplete=\"on\" selectedKey={selectedPartner} options={partnersDropdown} placeholder=\"Partner...\" onChange={(e, e2) => setFilter('partner',e2.key)} style={{width: 140}} />{selectedPartner ? <span className=\"clear\" onClick={()=>setFilter('partner', null)}>Clear</span> : null}</div> : null}\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> {setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0))); setFilter('alltime', false)}}/>\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> {setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)));setFilter('alltime', false)}}/>\n                    <Toggle inlineLabel label='Time limit' onText='All time' offText='Date range' checked={alltime} onChange={()=>setFilter('alltime', !alltime)}  />\n                </Stack>\n                <div className=\"balance\">\n                    <div className=\"txt\">{admin ? 'To pay: ' : 'Balance: '}</div>\n                    <Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(admin ? due : balance)} formatValue={(due) => numeral(parseFloat(due)).format(\"0,0.00 $\")} /></Text>\n                </div>\n            </Stack>\n            {selectedPartner ? <section className=\"userInfo\">\n                <AreaChart\n                    width={720}\n                    height={400}\n                    data={singleUserData}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"wire\" stackId=\"one\" stroke=\"#fce100\" fill=\"#fce100\" />\n                    <Area type=\"monotone\" dataKey=\"cc\" stackId=\"one\" stroke=\"#ffaa44\" fill=\"#ffaa44\" />\n                    {admin ? <Area type=\"monotone\" dataKey=\"profit\" stackId=\"one\" stroke=\"#82ca9d\" fill=\"darkgreen\" /> : null}\n                </AreaChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            {admin ? <tr>\n                                <td>Partner: </td>\n                                <td><Text variant=\"xLarge\">{selectedPartnerName}</Text></td>\n                            </tr> : null}\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(singleUserDeposits)} formatValue={(singleUserDeposits) => numeral(parseFloat(singleUserDeposits)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserWire)} formatValue={(singleUserWire) => numeral(parseFloat(singleUserWire)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserCC)} formatValue={(singleUserCC) => numeral(parseFloat(singleUserCC)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n            {admin ? <section className=\"allInfo\">\n            <BarChart\n                    width={720}\n                    height={400}\n                    data={alldata}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"wire\" fill=\"#fce100\" />\n                    <Bar dataKey=\"cc\" fill=\"#ffaa44\" />\n                    <Bar dataKey=\"profit\" fill=\"darkgreen\" />\n                </BarChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(allUsersDeposits)} formatValue={(allUsersDeposits) => numeral(parseFloat(allUsersDeposits)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersWire)} formatValue={(allUsersWire) => numeral(parseFloat(allUsersWire)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersCC)} formatValue={(allUsersCC) => numeral(parseFloat(allUsersCC)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users.users,\n        balance: state.auth.balance,\n        admin: state.auth.admin,\n        partnerId: state.auth.id,\n        data: state.dashboard.data,\n        filters: state.dashboard.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilter: (filter, value) => dispatch(setFilter(filter, value)),\n        getData: () => dispatch(getDashboardData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import * as types from './actionTypes';\nimport axios from 'axios';\nimport {logout} from './authActions';\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.DASHBOARD_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getDashboardData = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, alltime} = state.dashboard.filters;\n        const {token} = state.auth;\n        const dateQ = alltime ? '' : `from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        let q = `?${dateQ}`;\n        const bearer = 'Bearer ' + token;\n        axios.get(`https://api.chimera-finance.com/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.DASHBOARD_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}","import React, {useEffect} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Dashboard from '../pjeset/Home/Dashboard';\nimport { selectMenu } from '../store/actions/systemActions';\nimport './Home.sass';\n\nfunction Home({selectMenu, token, balance}){\n    useEffect(()=>{selectMenu(\"0\");document.title = \"Chimera | Home\"}, [selectMenu]);\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"home\">\n            <Dashboard />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        balance: state.auth.balance\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {useState, useEffect} from 'react';\nimport {useSpring, animated} from 'react-spring';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../store/actions/authActions';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport logourl from '../Chimera_01-01.svg'\nimport './Login.sass';\n\nfunction Login({login, error, token}){\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(()=>{document.title = \"Chimera | Login\"}, [])\n\n    const props = useSpring({opacity: 1, from: {opacity: 0}})\n    \n    if(token){return <Redirect to=\"/\" />}\n\n    return(\n        <div id=\"login\">\n            <div className=\"logo\">\n                <img src={logourl} alt=\"logo file\"/><animated.div style={props}><span className=\"Chimera\">Chimera</span></animated.div>\n            </div>\n            <form>\n                <h3>Log in</h3>\n                <TextField name=\"admin_email\" type=\"email\" label=\"email\" placeholder=\"enter email\" onChange={({target}) => setEmail(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <TextField name=\"admin_password\" label=\"Password\" type=\"password\" placeholder=\"enter password\" onChange={({target})=> setPassword(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <PrimaryButton className=\"login\" onClick={() => login(email, password)}>Log in</PrimaryButton>\n                <h6>{error && error.message}</h6>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        error: state.auth.error,\n        loading: state.auth.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (email, password) => dispatch(login(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editUser, removeUser,toggleActive, endEdit } from '../../store/actions/usersActions';\nimport './EditUser.sass';\n\nfunction EditUser({editing, endEdit, username, email, Wrate, CCrate, balance, active, staff, url, save, remove, toggleActiveState}){\n    const [_username, setUsername] = useState(username);\n    const [_email, setEmail] = useState(email);\n    const [_balance, setBalance] = useState(balance);\n    const [_Wrate, setWRate] = useState(Wrate);\n    const [_CCrate, setCCRate] = useState(CCrate);\n    const [_active, setActive] = useState(active);\n    const [deleting, setDeleting] = useState(false);\n    useEffect(()=>{setActive(active)}, [active]);\n    const deActivateColorRoot = !_active ? \"green\" : \"brown\";\n    const deActivateColorRootHovered = !_active ? \"darkgreen\" : \"darkbrown\";\n    const deActivateColorRootPressed = !_active ? \"darkgreen\" : \"darkred\";\n    return(\n        <div>\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Edit user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" value={_username || \"\"} onChange={({target}) => setUsername(target.value)} />\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" value={_email} onChange={({target}) => setEmail(target.value)} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={_balance || 0} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={_Wrate || undefined} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card Rate\" name=\"credit card rate\" placeholder=\"rate\" value={_CCrate || undefined} onChange={({target}) => setCCRate(target.value)} /> \n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()}text=\"Cancel\" />\n                        {!staff ? <DefaultButton\n                            className=\"delete\"\n                            styles={{root: {color: deActivateColorRoot, borderColor: deActivateColorRoot}, \n                                    rootHovered: {color: deActivateColorRootHovered, borderColor: deActivateColorRootHovered}, \n                                    rootPressed: {color: deActivateColorRootPressed, borderColor: deActivateColorRootPressed}}\n                                } \n                            onClick={() => toggleActiveState(url, !_active)}\n                            text={_active ? \"Deactivate\" : \"Activate\"}\n                            split={true}\n                            menuProps={{\n                                items: [\n                                  {\n                                    key: 'deleteUser',\n                                    text: 'Delete',\n                                    style: {color: 'red', marginRight: 0},\n                                    onClick: () => setDeleting(true),\n                                    styles: {root: {color: 'red'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}},\n                                    iconProps: { iconName: 'Delete', color: 'red' }\n                                  }\n                                ]\n                              }} /> : null}\n                        <PrimaryButton \n                            className=\"save\"\n                            onClick={()=>save(url, _username, _email, {balance: _balance, Wrate: _Wrate, CCrate: _CCrate})} \n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n        <Dialog\n            hidden={!deleting}\n            onDismiss={() => setDeleting(false)}\n            dialogContentProps={{\n                type: DialogType.normal,\n                title: `Delete user ${username}?`,\n                subText: 'Warning! By deleting this user you will delete all his data, all his related transactions and the resulting profit from this user. Are you absolutely sure you want to delete this user?'\n            }}\n            modalProps={{\n                isBlocking: true,\n                styles: { main: { maxWidth: 450 } },\n                dragOptions: true\n            }}\n            >\n            <DialogFooter>\n                <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                    onClick={() => {remove(url); setDeleting(false)}} text=\"Delete\" />\n                <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n            </DialogFooter>\n        </Dialog>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        save: (url, username, email, is_active, is_staff, partner_data) => dispatch(editUser(url, username, email, is_active, is_staff, partner_data)),\n        toggleActiveState: (url, active) => dispatch(toggleActive(url, active)),\n        endEdit: () => dispatch(endEdit()),\n        remove: url => dispatch(removeUser(url))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addUser, endAdd } from '../../store/actions/usersActions';\nimport axios from 'axios';\nimport './AddUser.sass';\n\nfunction AddUser({adding, endAdd, add, users}){\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password1, setPassword1] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n    const [Wrate, setWRate] = useState(1);\n    const [CCrate, setCCRate] = useState(1);\n    const [isReady, setReady] = useState(false);\n    const [errors, setErrors] = useState({\n        email: '',\n        username: '',\n        password: '',\n        passwordMatch: ''\n    })\n\n    useEffect(()=> {\n        if(username && email && password1 && password2 && !errors.username && !errors.email && !errors.password && !errors.passwordMatch){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [username, email, password1, password2, errors])\n\n    function checkEmail(){\n        if(email){\n            axios.get(`http://apilayer.net/api/check?access_key=b7de3ac4dc7084aee62c3517ccb05212&email=${email}&smtp=1&format=1`).then(res =>{\n                const {mx_found, smtp_check} = res.data;\n                if(mx_found !== undefined){\n                    if(mx_found && smtp_check){setErrors({...errors, email: ''})}else{\n                        setErrors({...errors, email: 'email not valid'})\n                    }\n                }\n                const emails = users.map(u => u.email);\n                emails.forEach(em =>{\n                    if (em === email){\n                        setErrors({...errors, email: 'User with this email is already present'})\n                    }\n                })\n            })\n        }else{\n            setErrors({...errors, email: ''})\n        }\n    }\n\n    function checkPassword(){\n        var mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n        if(password1){\n            if(mediumRegex.test(password1)){\n                setErrors({...errors, password: ''})\n            }else{\n                setErrors({...errors, password: 'Password not valid'})\n            }\n        }else{\n            setErrors({...errors, password: ''})\n        }\n    }\n\n    function checkPassword2(){\n        if(password2){\n            if(password1 === password2){\n                setErrors({...errors, passwordMatch: ''})\n            }else{\n                setErrors({...errors, passwordMatch: 'Passwords do not match'})\n            }\n        }else{\n            setErrors({...errors, passwordMatch: ''})\n        }\n    }\n\n    function checkUsername(){\n        var usernameRegex = new RegExp(\"^[A-Z]+$\", \"i\");\n        if(username){   \n            if(usernameRegex.test(username)){\n                setErrors({...errors, username: ''})\n            }else{\n                setErrors({...errors, username: 'Username should contain only letters'})\n            }\n            const usernames = users.map(u => u.username);\n            for(let us in usernames){\n                if (us === username){\n                    setErrors({...errors, username: 'User with this username is already present'})\n                }\n            }\n        }else{\n            setErrors({...errors, username: ''})\n        }\n    }\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Add user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" errorMessage={errors.email} value={email} onChange={({target}) => setEmail(target.value)} onBlur={checkEmail} /> \n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" errorMessage={errors.username} value={username} onChange={({target}) => setUsername(target.value)} onBlur={checkUsername} />\n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"password\" label=\"Password\" name=\"password1\" placeholder=\"password1\" errorMessage={errors.password} value={password1} onChange={({target}) => setPassword1(target.value)} onBlur={checkPassword} />\n                        <TextField type=\"password\" label=\"Confirm Password\" name=\"password2\" placeholder=\"password2\" errorMessage={errors.passwordMatch} value={password2} onChange={({target}) => setPassword2(target.value)} onBlur={checkPassword2} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={balance} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={Wrate} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card Rate\" name=\"credit card rate\" placeholder=\"rate\" value={CCrate} onChange={({target}) => setCCRate(target.value)} /> \n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            disabled={!isReady}\n                            className=\"add\"\n                            onClick={()=>add(username, email, password1, {balance, Wrate, CCrate})}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (username, email, password1, password2, partner_data) => dispatch(addUser(username, email, password1, password2, partner_data)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsRow } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { getAllUsers, beginEdit, beginAdd } from '../store/actions/usersActions';\nimport EditUser from '../pjeset/Users/EditUser';\nimport AddUser from '../pjeset/Users/AddUser';\nimport './Users.sass';\n\nnumeral.locale('al');\n\nfunction sortByKey(array, key, asc) {\n    return array.sort(function(a, b) {\n        var x = a[key]; var y = b[key];\n        return asc ? ((x < y) ? -1 : ((x > y) ? 1 : 0)) : ((x > y) ? -1 : ((x < y) ? 1 : 0));\n    });\n}\n\nfunction Users({getUsers, selectMenu, beginEdit, beginAdd, token, users, editing, editingThis, adding}){\n    \n    const [sortkey, setSortkey] = useState(\"staff\");\n    const [ascending, setAscending] = useState(true);\n    const [searchStr, setSearchStr] = useState(\"\");\n    const [roleFilter, setRoleFilter] = useState(\"partner\");\n\n    useEffect(()=>{\n        getUsers()\n    }, [getUsers])\n\n    const columns = [\n        {\n            key: 'username',\n            name: 'Username',\n            fieldName: 'username',\n            minWidth: 60,\n            maxWidth: 80,\n            isSorted: sortkey === 'username',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'email',\n            name: 'Email',\n            fieldName: 'email',\n            minWidth: 120,\n            maxWidth: 200,\n            isSorted: sortkey === 'email',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'date_joined',\n            name: 'Joined',\n            fieldName: 'date_joined',\n            minWidth: 120,\n            maxWidth: 140,\n            isSorted: sortkey === 'date_joined',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'date',\n            isPadded: true\n        },\n        {\n            key: 'last_login',\n            name: 'Last login',\n            fieldName: 'last_login',\n            minWidth: 120,\n            maxWidth: 140,\n            isSorted: sortkey === 'last_login',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'date',\n            isPadded: true\n        },\n        {\n            key: 'balance',\n            name: 'Balance',\n            fieldName: 'balance',\n            minWidth: 100,\n            maxWidth: 150,\n            isSorted: sortkey === 'balance',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'Wrate',\n            name: 'Wire Rate',\n            fieldName: 'Wrate',\n            minWidth: 40,\n            maxWidth: 150,\n            isSorted: sortkey === 'Wrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'CCrate',\n            name: 'Credit Card Rate',\n            fieldName: 'CCrate',\n            minWidth: 40,\n            maxWidth: 150,\n            isSorted: sortkey === 'CCrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'is_active',\n            name: 'Active',\n            fieldName: 'active',\n            minWidth: 60,\n            maxWidth: 100,\n            onColumnClick: onColumnClick,\n            isPadded: false\n        }\n    ];\n\n    const data = sortByKey(users.map(user => {\n        return {\n            email: user.email,\n            last_login: moment(new Date(user.last_login)).fromNow().replace(\"50 years ago\", 'never'),\n            date_joined: moment(new Date(user.date_joined)).fromNow(),\n            username: user.username,\n            balance: parseFloat(user.partner_data.balance),\n            Wrate: user.partner_data.Wrate,\n            CCrate: user.partner_data.CCrate,\n            active: user.is_active,\n            staff: user.is_staff,\n            url: user.url\n        }\n    }), sortkey, ascending).filter(u => {\n        return (u.email.indexOf(searchStr) !== -1) || (u.username.indexOf(searchStr) !== -1)\n    }).filter(u => {\n        switch(roleFilter){\n            case \"partner\": return !u.staff;\n            case \"admin\": return u.staff;\n            default: return true;\n        }\n    })\n\n    useEffect(()=>{\n        selectMenu(\"1\");\n        document.title = \"Chimera | Users\"\n    }, [getUsers, selectMenu])\n\n    function onItemInvoked({email}){\n        beginEdit(email);\n    }\n    function onColumnClick(_e, {key}){\n        setSortkey(key);\n        setAscending(true)\n        if(key === sortkey){setAscending(!ascending)}\n    }\n    function onRenderItemColumn(item, index, column){\n        const fieldContent = item[column.fieldName];\n        switch (column.key) {\n            case 'is_active':\n                return fieldContent ? <Icon iconName=\"StatusCircleInner\" styles={{root: {marginLeft: '14px'}}} /> : null;\n            case 'balance':\n                return numeral(fieldContent).format('0,0.00 $')\n            default:\n              return <span>{fieldContent}</span>;\n          }\n    }\n    function onRenderRow(props){\n        return <DetailsRow {...props} styles={{root: {backgroundColor: props.item.staff ? \"lightblue\" : \"white\", fontSize: '1.1em'}}} />\n    }\n    \n    let editData;\n    editData = data.filter(user => {\n        return user.email === editingThis\n    })[0]\n    const roles = [\n        { key: 'admin', text: 'Admin' },\n        { key: 'partner', text: 'Partner' },\n    ];\n        \n    if(!token){\n        return <Redirect to=\"/login\" />\n    }\n    return(\n        <div id=\"users\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <TextField style={{width: 300}} type=\"text\" value={searchStr} placeholder=\"Filter by username or email...\" onChange={({target}) => setSearchStr(target.value)} />\n                        <ComboBox style={{width: 150}} options={roles} selectedKey={roleFilter} placeholder=\"Filter by role...\" onChange={(e, {key})=> setRoleFilter(key)} />\n                    </Stack>\n                    <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New user\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    />\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={960}\n                        items={data}\n                        compact={false}\n                        columns={columns}\n                        selectionMode={SelectionMode.none}\n                        isHeaderVisible={true}\n                        onItemInvoked={onItemInvoked}\n                        checkboxVisibility={2}\n                        onRenderItemColumn={onRenderItemColumn}\n                        onRenderRow={onRenderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {editing ? <EditUser editing={editing} {...editData} /> : null}\n            {adding ? <AddUser adding={adding} /> : null}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        editing: state.users.editing,\n        editingThis: state.users.editingThis,\n        adding: state.users.adding\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        getUsers: () => dispatch(getAllUsers()),\n        beginEdit: email => dispatch(beginEdit(email)),\n        beginAdd: () => dispatch(beginAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addTransaction, endAdd } from '../../store/actions/transactionsActions';\nimport './AddTransaction.sass';\n\nnumeral.locale('al');\n\nfunction AddTransaction({adding, endAdd, add, users}){\n    const [type, setType] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [amount_paid, setAmountpaid] = useState(0);\n    const [partner, setPartner] = useState(\"\");\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(1);\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.CCrate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(1);break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `https://api.chimera-finance.com/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    let color = 'white'\n\n    switch(type){\n        case 'Wire': color = '#fce100'; break;\n        case 'Credit Card': color = '#ffaa44'; break;\n        case 'Withdraw': color = '#da3b01'; break;\n        case 'Payment': color = '#00b7c3'; break;\n        default: color = 'white'; break;\n    }\n\n    const showCalculations = (type && type !== \"Payment\" && partner)\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Add transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form style={{borderLeft: `4px solid ${color}`}}>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <TextField disabled={type === \"Payment\"} name=\"client\" label=\"Client name\" placeholder=\"client\" value={client} onChange={({target}) => setClient(target.value)} /> \n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" styles={{root: {visibility: showCalculations ? 'visible' : 'hidden'}}} variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"add\"\n                            disabled={!ready}\n                            onClick={()=>add(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (type, client, amount, amount_paid, rate, partner) => dispatch(addTransaction(type, client, amount, amount_paid, rate, partner)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTransaction);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editTransaction, endEdit } from '../../store/actions/transactionsActions';\nimport './EditTransaction.sass';\n\nnumeral.locale('al');\n\nfunction EditTransaction({editing, endEdit, edit, users, data}){\n\n    const [type, setType] = useState(data.transaction_type);\n    const [client, setClient] = useState(data.client_name);\n    const [amount, setAmount] = useState(parseFloat(data.amount));\n    const [amount_paid, setAmountpaid] = useState(parseFloat(data.amount_paid));\n    const [partner, setPartner] = useState(data.user);\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(currentPartner.partner_data.rate)\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `https://api.chimera-finance.com/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    return(\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Edit transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <TextField disabled={type === \"Payment\"} name=\"client\" label=\"Client name\" placeholder=\"client\" value={client} onChange={({target}) => setClient(target.value)} /> \n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"edit\"\n                            disabled={!ready}\n                            onClick={()=>edit(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        edit: (type, client, amount, amount_paid, rate, partner) => dispatch(editTransaction(type, client, amount, amount_paid, rate, partner)),\n        endEdit: () => dispatch(endEdit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTransaction);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsListLayoutMode, DetailsRow, DetailsRowBase } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton, IconButton, DefaultButton } from 'office-ui-fabric-react';\nimport { Dropdown, DropdownMenuItemType } from 'office-ui-fabric-react/lib/Dropdown';\nimport { CSVLink } from \"react-csv\";\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { formatDate } from '../useful';\nimport { beginEdit, beginAdd, removeTransaction, getAllTransactions, setTransactionsFilter, setAllPartnersSelected, setAllTypesSelected } from '../store/actions/transactionsActions';\nimport AddTransaction from '../pjeset/Transactions/AddTransaction';\nimport EditTransaction from '../pjeset/Transactions/EditTransaction';\nimport './Transactions.sass';\n\nnumeral.locale('al');\n\nfunction Transactions ({selectMenu, beginAdd, beginEdit, token, users, admin, balance, adding, editing, editData, transactions, remove, getTransactions, setFilter, filters, allPartners, allTypes}){\n\n    const [deleting, setDeleting] = useState(false);\n    const [deletingID, setDeletingID] = useState(0);\n    \n    let {client, partners, types, fromDate, toDate} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=> {\n        if(!partners.length){\n            setFilter('partners', users.filter(u=> !u.is_staff).map(u => {\n                const urlArray = u.url.split(\"/\");\n                const key = urlArray[urlArray.length - 2];\n                return key\n            }));\n        }\n        if(!types.length){\n            setFilter('types', ['Wire', 'Credit Card', 'Withdraw', 'Payment']);\n        }\n    }, [setFilter, users])\n\n    const partnersDropdown = users.filter(u => !u.is_staff).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        const key = urlArray[urlArray.length - 2];\n        return {\n            key,\n            text: u.username,\n            selected: partners.includes(key)\n        }\n    });\n\n    const typesDropdown = [\n        { key: 'Wire', text: 'Wire', selected: types.includes('Wire') },\n        { key: 'Credit Card', text: 'Credit Card', selected: types.includes('Credit Card') },\n        { key: 'Withdraw', text: 'Withdraw', selected: types.includes('Withdraw') },\n        { key: 'Payment', text: 'Payment', selected: types.includes('Payment') }\n    ];\n    \n    useEffect(()=>{\n        document.title = \"Chimera | Transactions\"; \n        selectMenu(admin ? \"2\" : \"3\");\n        getTransactions();\n    }, [selectMenu, getTransactions, admin]);\n    \n    const columns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 17,\n            maxWidth: 17,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 110,\n            maxWidth: 180,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'partner',\n            name: 'Partner',\n            fieldName: 'partner',\n            minWidth: 70,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'rate',\n            name: 'Rate',\n            fieldName: 'rate',\n            minWidth: 30,\n            maxWidth: 50,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'Partner amount',\n            fieldName: 'amount_paid',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 110,\n            maxWidth: 110,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'delete',\n            name: 'Delete',\n            minWidth: 45,\n            maxWidth: 55,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true,\n            onRender: (item) => {\n                return <IconButton onClick={() => { setDeleting(true); setDeletingID(item.id) }} styles={{root:{height: '15px', marginLeft: '7px', color: '#ccc'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}}} iconProps={{iconName: \"Delete\"}} />\n            }\n        }\n    ];\n\n    const partnerColumns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 20,\n            maxWidth: 30,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 60,\n            maxWidth: 100,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 120,\n            maxWidth: 140,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 50,\n            maxWidth: 60,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'My amount',\n            fieldName: 'amount_paid',\n            minWidth: 60,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 130,\n            maxWidth: 150,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        }\n    ];\n\n    function _onColumnClick(){}\n\n    function renderRow(row){\n        let color;\n        switch(row.item.transaction_type){\n            case 'Wire': color = '#fce100'; break;\n            case 'Credit Card': color = '#ffaa44'; break;\n            case 'Withdraw': color = '#da3b01'; break;\n            case 'Payment': color = '#00b7c3'; row.item.amount = ''; row.item.rate = ''; break;\n            default: color = 'white'; break;\n        }\n        return <DetailsRow {...row} styles={{root: {borderLeft: `4px solid ${color}`, fontSize: '1.1em'}}} />\n    }\n\n    function renderItemColumn(item, index, column){\n        if(column.key === 'amount' || column.key === 'amount_paid'){\n            return <div style={{textAlign: 'right'}}>{item[column.key]}</div>\n        }else if(column.key === 'id' || column.key === 'created_at'){\n            return <div style={{fontSize: '1em'}}>{item[column.key]}</div>\n        }else{\n            return item[column.key]\n        }\n    }\n\n    function editTransaction({id}){\n        // beginEdit(id)\n    }\n\n    let data = []\n    \n    data = transactions.map(t => {\n        return {\n            id: t.id,\n            transaction_type: t.transaction_type,\n            client: t.client_name,\n            amount: numeral(parseFloat(t.amount)).format('0,0.00 $'),\n            rate: numeral(parseFloat(t.rate)).format('0 %'),\n            partner: admin ? users.filter(u => u.url === `https://api.chimera-finance.com/api/users/${t.user}/`)[0].username : null,\n            amount_paid: numeral(parseFloat(t.amount_paid)).format('0,0.00 $'),\n            created_at: moment(new Date(t.entry_time)).format(\"DD/MM/YYYY hh:mm:ss\"),\n        }\n    });\n\n    const CSVheaders = [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Type\", key: \"transaction_type\" },\n        { label: \"Client Name\", key: \"client\" },\n        { label: \"Parner Name\", key: \"partner\" },\n        { label: \"Amount\", key: \"amount\" },\n        { label: \"Partner Amount\", key: \"amount_paid\" },\n        { label: \"Date\", key: \"created_at\" }\n      ];\n\n    function changeSelectedPartners(e, e2){\n        const p = partnersDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        });\n        allPartners(p.every(p=>p.selected));\n        setFilter('partners', p.filter(p => p.selected).map(p=> p.key));\n    }\n\n    function changeSelectedTypes(e, e2){\n        const t = typesDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        })\n        allTypes(t.every(t=>t.selected));\n        setFilter('types', t.filter(t => t.selected).map(t=> t.key));\n    }\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"transactions\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <Dropdown\n                            placeholder=\"Type\"\n                            selectedKeys={types}\n                            onChange={changeSelectedTypes}\n                            multiSelect\n                            options={[{ key: 'typesHeader', text: 'Types', itemType: DropdownMenuItemType.Header },...typesDropdown]}\n                            style={{width: 120, textAlign: 'left'}}\n                        />\n                        <TextField style={{width: 150}} type=\"text\" value={client} placeholder=\"Client name...\" onChange={({target}) => setFilter('client',target.value.toLowerCase())} />\n                        {admin ? <Dropdown\n                            placeholder=\"Filter by partner\"\n                            selectedKeys={partners}\n                            onChange={changeSelectedPartners}\n                            multiSelect\n                            options={[{ key: 'partnersHeader', text: 'Partners', itemType: DropdownMenuItemType.Header },...partnersDropdown]}\n                            style={{width: 140, textAlign: 'left'}}\n                        /> : null}\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                    </Stack>\n                    {admin ? <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New transaction\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    /> : null}\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={admin ? 960 : 720}\n                        height={'70%'}\n                        items={data}\n                        compact={false}\n                        columns={admin ? columns : partnerColumns}\n                        onItemInvoked={editTransaction}\n                        enableShimmer={!data}\n                        isHeaderVisible={true}\n                        checkboxVisibility={2}\n                        selectionMode={SelectionMode.multiple}\n                        layoutMode={DetailsListLayoutMode.justified}\n                        onRenderItemColumn={renderItemColumn}\n                        onRenderRow={renderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {adding ? <AddTransaction adding={adding} /> : null}\n            {editing ? <EditTransaction data={editData} editing={editing} /> : null}\n            <Dialog\n                hidden={!deleting}\n                onDismiss={() => setDeleting(false)}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Delete transaction?',\n                    subText: 'Do you really want do delete this transaction?'\n                }}\n                modalProps={{\n                    isBlocking: true,\n                    styles: { main: { maxWidth: 450 } },\n                    dragOptions: true\n                }}\n                >\n                <DialogFooter>\n                    <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                        onClick={() => {remove(deletingID); setDeleting(false)}} text=\"Delete\" />\n                    <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n            <div className=\"bottom\">\n                <div className=\"data\">\n                    <Text variant=\"small\" >{transactions.length || 'No'} transaction{transactions.length !== 1 ? 's' : ''}</Text>\n                </div>\n                {transactions.length ? <DefaultButton iconProps={{iconName: 'Download'}}><CSVLink filename={`transactions_report_${moment(new Date()).format('DD_MM_YYYY_hh_mm_ss')}.csv`} data={data} headers={CSVheaders}>Download CSV</CSVLink></DefaultButton> : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        admin: state.auth.admin,\n        balance: state.auth.balance,\n        users: state.users.users,\n        transactions: state.transactions.transactions,\n        editing: state.transactions.editing,\n        adding: state.transactions.adding,\n        editData: state.transactions.editData,\n        filters: state.transactions.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        beginAdd: () => dispatch(beginAdd()),\n        beginEdit: id => dispatch(beginEdit(id)),\n        remove: url => dispatch(removeTransaction(url)),\n        getTransactions: () => dispatch(getAllTransactions()),\n        setFilter: (filter, value) => dispatch(setTransactionsFilter(filter, value)),\n        allTypes: bool => dispatch(setAllTypesSelected(bool)),\n        allPartners: bool => dispatch(setAllPartnersSelected(bool))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","import React, {useEffect} from 'react';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport {getLogs, setFilter} from '../store/actions/logsActions';\nimport {selectMenu} from '../store/actions/systemActions';\nimport { ActivityItem, Icon, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport { Redirect } from 'react-router-dom';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { formatText, formatDate } from '../useful';\nimport * as t from '../store/actions/logTypes';\nimport './Logs.sass';\n\nfunction Logs({logs, token, getLogs, selectMenu, users, filters, setFilter}){\n\n    let {fromDate, toDate, message} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=>{\n        document.title = \"Chimera | Logs\"; \n        selectMenu(\"4\");\n    }, [selectMenu]);\n\n    useEffect(()=>{\n        getLogs()\n    }, [getLogs, filters])\n\n    function getUsername(user){\n        if(users.length){\n            const filteredUser = users.filter(u=> u.url === `https://api.chimera-finance.com/api/users/${user}/`);\n            if(filteredUser.length){\n                return \"@\" + filteredUser[0].username;\n            }else{\n                return \"Deleted\"\n            }\n        }else{\n            return '';\n        }\n    }\n\n    const classNames = mergeStyleSets({\n        exampleRoot: {\n          marginTop: '8px',\n          textAlign: 'left'\n        },\n        nameText: {\n          fontWeight: 'bold'\n        }\n    });\n\n    const items = logs.map(log => {\n        let iconName = '', color= '';\n        switch(log.log_type){\n            case t.USER_ADD: iconName = 'FollowUser'; color=\"darkgreen\";break;\n            case t.USER_REMOVE: iconName = 'UserRemove';color=\"darkred\"; break;\n            case t.USER_UPDATE: iconName = 'UserSync'; color=\"orange\";break;\n            case t.TRANSACTION_ADD: iconName = 'Money'; color=\"darkgreen\";break;\n            case t.TRANSACTION_REMOVE: iconName = 'Money';color=\"darkred\"; break;\n            case t.USER_DEACTIVATE: iconName = 'UserPause';color=\"darkred\"; break;\n            case t.USER_ACTIVATE: iconName = 'UserFollowed'; color=\"darkgreen\";break;\n            default: iconName = \"Message\";\n        }\n        return {\n            key: log.id,\n            activityDescription: [\n              <Text className={classNames.nameText} key={log.id}>{formatText(log.log_type)}</Text>,\n              <Link key={log.id + 'a'}>&nbsp;{getUsername(log.user)}</Link>\n            ],\n            activityIcon: <Icon styles={{root:{color}}} iconName={iconName} />,\n            comments: [\n              <span key={log.id}>{log.message}</span>\n            ],\n            timeStamp: moment(new Date(log.entry_time)).format(\"DD/MM/YY hh:mm:ss\")\n          }\n    })\n\n    if(!token){return <Redirect to=\"/login\" />}\n\n    return(\n        <div id=\"logs\">\n            <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\", marginTop: '20px', marginBottom: '12px' } }}>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                <TextField style={{width: 300}} type=\"text\" value={message} placeholder=\"Search log text...\" onChange={({target}) => setFilter('message',target.value.toLowerCase())} />\n            </Stack>\n            <div className=\"logs\">\n                {items.map(item => (\n                    <ActivityItem {...item} key={item.key} className={classNames.exampleRoot} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        logs: state.logs.logs,\n        filters: state.logs.filters,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getLogs: () => dispatch(getLogs()),\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setFilter: (filter, value) => dispatch(setFilter(filter, value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menu from './pjeset/common/Menu';\nimport Notifications from './pjeset/common/Notifications';\nimport Home from './faqet/Home';\nimport Login from './faqet/Login';\nimport Users from './faqet/Users';\nimport Transactions from './faqet/Transactions';\nimport Logs from './faqet/Logs';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport './App.css';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/users\" component={Users} />\n        <Route exact path=\"/transactions\" component={Transactions} />\n        <Route exact path=\"/logs\" component={Logs} />\n      </Switch>\n      <Notifications />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './store/reducers/rootReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n        key: 'root',\n        storage,\n      }\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);  \nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\nwindow.persistor = persistor;\n\nReactDOM.render(\n                <Provider store={store}>\n                        <PersistGate loading={null} persistor={persistor}>\n                                <BrowserRouter>\n                                        <App />\n                                </BrowserRouter>\n                        </PersistGate>\n                </Provider>, \n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}