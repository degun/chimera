{"version":3,"sources":["Chimera_01-01.svg","store/reducers/authReducer.js","store/actions/actionTypes.js","store/reducers/usersReducer.js","store/reducers/transactionsReducer.js","store/reducers/systemReducer.js","store/reducers/dashboardReducer.js","store/reducers/logsReducer.js","store/reducers/rootReducer.js","store/actions/logTypes.js","config.js","store/actions/logsActions.js","useful.js","store/actions/transactionsActions.js","store/actions/usersActions.js","store/actions/authActions.js","store/actions/systemActions.js","pjeset/common/Menu.js","pjeset/common/Notifications.js","pjeset/Home/Dashboard.js","store/actions/dashboardActions.js","faqet/Home.js","faqet/Login.js","pjeset/Users/EditUser.js","pjeset/Users/AddUser.js","faqet/Users.js","pjeset/Transactions/AddTransaction.js","pjeset/Transactions/EditTransaction.js","faqet/Transactions.js","faqet/Logs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","token","error","loading","admin","balance","id","authReducer","state","arguments","length","undefined","action","type","_objectSpread","authStart","authFail","email","username","is_staff","btc","authSuccess","authSetToken","parseFloat","updateBalance","users","editing","editingThis","adding","updateUsersList","newUsers","map","user","data","usersReducer_objectSpread","usersReducer","console","log","getUsersList","filter","removeSuccess","beginEdit","endEdit","beginAdd","endAdd","concat","Object","toConsumableArray","addSuccess","today","Date","aWeekAgo","setDate","getDate","transactions","clients","editData","filters","partners","types","client","fromDate","setHours","toDate","allPartnersSelected","allTypesSelected","updateTransactionsList","newTransactions","transaction","transactionsReducer_objectSpread","systemReducer","getTransactionsList","defineProperty","value","setFilter","setAllPartnersSelected","setAllTypesSelected","c","client_name","getClientsList","menu","systemReducer_objectSpread","selected","selectMenu","partner","alltime","dashboardReducer","dashboardReducer_objectSpread","getDashboardData","message","logs","logsReducer","logsReducer_objectSpread","getLogs","removeLog","rootReducer","combineReducers","auth","transactionsReducer","system","dashboard","USER_ADD","USER_REMOVE","USER_UPDATE","USER_DEACTIVATE","USER_ACTIVATE","TRANSACTION_ADD","TRANSACTION_REMOVE","HOST","addLog","dispatch","getState","bearer","axios","post","log_type","headers","Authorization","then","res","catch","e","response","status","logout","urltoid","url","arr","split","formatText","text","toUpperCase","toLowerCase","slice","replace","formatDate","date","toLocaleDateString","year","month","day","round2","num","Math","round","Number","EPSILON","numeral","register","delimiters","thousands","decimal","abbreviations","thousand","million","billion","trillion","currency","symbol","getAllTransactions","_state$auth","_state$transactions","q","get","_ref","others","objectWithoutProperties","transactionsActions_objectSpread","getAllUsers","usersActions_objectSpread","updateUserLocally","updateAdminLocally","partner_data","setToken","window","persistor","flush","purge","connect","logOut","setMenu","refreshToken","useEffect","interval","setInterval","clearInterval","addEventListener","removeEventListener","react_default","a","createElement","Pivot","linkSize","PivotLinkSize","normal","linkFormat","PivotLinkFormat","links","selectedKey","onLinkClick","key","PivotItem","iconProps","iconName","itemKey","headerText","onClick","onRenderItemLink","react_router_dom","to","Icon","DefaultButton","className","allowDisabledFocus","react_router","getTransactions","updateThisUser","w3cwebsocket","_useState","useState","_useState2","slicedToArray","anchor","setAnchor","_useState3","_useState4","notifications","setNotifications","Notification","_ref2","head","body","hideNotification","_useState5","_useState6","active","setActive","timeoutid","setTimeout","clearTimeout","Callout","isBeakVisible","target","gapSpace","directionalHint","DirectionalHint","bottomRightEdge","styles","root","width","backgrounColor","zIndex","Text","display","padding","variant","onopen","onmessage","m","msg","JSON","parse","close","ref","notification","i","n","removeNotification","partnerId","getData","_state$dashboard$filt","dateQ","selectedPartner","parseInt","partnersDropdown","u","d","alldata","t","transaction_type","name","wire","reduce","accumulator","amount","cc","profit","amount_paid","allUsersWire","acc","b","allUsersCC","allUsersBTC","allUsersDeposits","singleUserData","partnerData","sort","entry_time","Dashboard_objectSpread","Set","da","prepareSingleUserData","singleUserWire","singleUserCC","singleUserBTC","singleUserDeposits","due","selectedPartnerName","find","selectedPartnerBalance","Stack","horizontal","horizontalAlign","tokens","childrenGap","ComboBox","autoComplete","options","placeholder","onChange","e2","style","DatePicker","firstDayOfWeek","DayOfWeek","Monday","maxDate","onSelectDate","minDate","Toggle","inlineLabel","label","onText","offText","checked","build_default","duration","formatValue","format","es6","height","strokeDasharray","dataKey","stackId","stroke","fill","val","document","title","Home_Dashboard","login","password","_res$data","pk","_res$data2","is_active","setEmail","setPassword","props","useSpring","opacity","from","src","logourl","alt","web","div","TextField","onKeyPress","_ref3","_ref4","_ref5","PrimaryButton","save","oldUser","oldUsername","oldEmail","oldBalance","oldWRate","Wrate","oldCCRate","CCrate","oldBTCRate","BTCrate","oldBtc","patch","adminOrPartner","changedUsername","changedEmail","changedBalance","changedWRate","changedCCRate","changedBTCRate","changedBTC","logTypes","editUser","toggleActiveState","logtype","toggleActive","remove","delete","removeUser","staff","_username","setUsername","_email","_balance","setBalance","_useState7","_useState8","_Wrate","setWRate","_useState9","_useState10","_CCrate","setCCRate","_useState11","_useState12","_BTCrate","setBTCRate","_useState13","_useState14","_active","_useState15","_useState16","_btc","setBtc","_useState17","_useState18","deleting","setDeleting","deActivateColorRoot","deActivateColorRootHovered","deActivateColorRootPressed","Modal","isOpen","onDismiss","isModeless","dragOptions","dragHandleSelector","containerClassName","ActionButton","buttonType","color","step","min","max","_ref6","_ref7","Link","href","borderColor","rootHovered","rootPressed","menuProps","items","marginRight","Dialog","hidden","dialogContentProps","DialogType","subText","modalProps","isBlocking","main","maxWidth","DialogFooter","backgroundColor","add","password1","password2","addUser","setPassword1","setPassword2","isReady","setReady","_useState19","passwordMatch","_useState20","errors","setErrors","errorMessage","onBlur","forEach","em","AddUser_objectSpread","test","usernameRegex","RegExp","usernames","us","mediumRegex","_ref8","_ref9","disabled","locale","getUsers","sortkey","setSortkey","ascending","setAscending","searchStr","setSearchStr","roleFilter","setRoleFilter","array","asc","columns","fieldName","minWidth","isSorted","isSortedDescending","onColumnClick","isPadded","last_login","moment","fromNow","date_joined","x","y","indexOf","_e","Fabric","SearchBox","align","justifySelf","MarqueeSelection","DetailsList","compact","onItemInvoked","enableShimmer","isHeaderVisible","checkboxVisibility","selectionMode","SelectionMode","multiple","layoutMode","DetailsListLayoutMode","justified","onRenderItemColumn","item","index","column","fieldContent","marginLeft","textAlign","onRenderRow","DetailsRow","assign","fontSize","Users_EditUser","Users_AddUser","rate","adminAmount","abs","partnerAmount","addTransaction","setType","setClient","client_names","setClientNames","setAmount","setAmountpaid","setPartner","currentPartner","setCurrentPartner","setRate","sign","setSign","ready","toPrecision","clientOK","setTheSign","showCalculations","borderLeft","allowFreeform","visibility","htmlFor","host","edit","editTransaction","urlArray","_transactions$filter$","removeTransaction","getClients","setTransactionsFilter","allTypes","bool","allPartners","deletingID","setDeletingID","includes","typesDropdown","isRowHeader","_onColumnClick","isResizable","onRender","IconButton","partnerColumns","created_at","Dropdown","selectedKeys","_","every","multiSelect","itemType","DropdownMenuItemType","Header","row","onShouldVirtualize","constrainMode","ConstrainMode","unconstrained","Transactions_AddTransaction","Transactions_EditTransaction","react_csv","filename","_state$logs$filters","deleteLog","Log","hovered","setHovered","onMouseOver","onMouseOut","onMouseEnter","position","right","top","ActivityItem","classNames","exampleRoot","getUsername","filteredUser","mergeStyleSets","marginTop","nameText","fontWeight","activityDescription","activityIcon","comments","timeStamp","marginBottom","initializeIcons","App","common_Menu","exact","path","component","Home","Login","Users","Transactions","Logs","common_Notifications","Boolean","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistStore","ReactDOM","render","es","integration_react","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.49afae1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Chimera_01-01.71e6b608.svg\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    token: \"\",\n    error: null,\n    loading: false,\n    admin: false,\n    balance: 0,\n    id: 0\n}\n\nconst authStart = (state, action) => {\n    return {...state, error: null, loading: true}\n}\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state, \n        error: null, \n        loading: false, \n        token: action.token,\n        id: action.id,\n        email: action.email,\n        username: action.username,\n        admin: action.is_staff,\n        balance: action.balance,\n        btc: action.btc\n    }\n}\n\nconst authSetToken = (state, action) => {\n    return {...state, token: action.token}\n}\n\n\nconst authFail = (state, action) => {\n    return {...state, error: action.error, loading: false}\n}\n\nconst updateBalance = (state, action) => {\n    return {...state, balance: parseFloat(action.balance)}\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.AUTH_START: return authStart(state, action);\n        case types.AUTH_FAIL: return authFail(state, action);\n        case types.AUTH_SUCCESS: return authSuccess(state, action);\n        case types.AUTH_SET_TOKEN: return authSetToken(state, action);\n        case types.ADMIN_UPDATE_BALANCE: return updateBalance(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default authReducer;","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const AUTH_SET_TOKEN = \"AUTH_SET_TOKEN\";\nexport const AUTH_RESET_PASSWORD = \"AUTH_RESET_PASSWORD\";\nexport const AUTH_CHANGE_PASSWORD = \"AUTH_CHANGE_PASSWORD\";\nexport const USERS_GET_ONE = \"USERS_GET_ONE\";\nexport const USERS_GET_LIST = \"USERS_GET_LIST\";\nexport const USERS_BEGIN_ADD = \"USERS_BEGIN_ADD\";\nexport const USERS_END_ADD = \"USERS_END_ADD\";\nexport const USERS_ADD_SUCCESS = \"USERS_ADD_SUCCESS\";\nexport const USERS_ADD_FAIL = \"USERS_ADD_FAIL\";\nexport const USERS_BEGIN_EDIT = \"USERS_BEGIN_EDIT\";\nexport const USERS_END_EDIT = \"USERS_END_EDIT\";\nexport const USERS_EDIT_SUCCESS = \"USERS_EDIT_SUCCESS\";\nexport const USERS_EDIT_FAIL = \"USERS_EDIT_FAIL\";\nexport const USERS_ARCHIVE_SUCCESS = \"USERS_ARCHIVE_SUCCESS\";\nexport const USERS_ARCHIVE_FAIL = \"USERS_ARCHIVE_FAIL\";\nexport const USERS_REMOVE_SUCCESS = \"USERS_REMOVE_SUCCESS\";\nexport const USERS_REMOVE_FAIL = \"USERS_REMOVE_FAIL\";\nexport const USERS_UPDATE_USER = \"USERS_UPDATE_USER\";\nexport const TRANSACTIONS_SET_FILTER = \"TRANSACTIONS_SET_FILTER\";\nexport const TRANSACTIONS_SET_ALL_PARTNERS_SELECTED = \"TRANSACTIONS_SET_ALL_PARTNERS_SELECTED\";\nexport const TRANSACTIONS_SET_ALL_TYPES_SELECTED = \"TRANSACTIONS_SET_ALL_TYPES_SELECTED\";\nexport const TRANSACTIONS_GET_LIST = \"TRANSACTIONS_GET_LIST\";\nexport const TRANSACTIONS_BEGIN_ADD = \"TRANSACTIONS_BEGIN_ADD\";\nexport const TRANSACTIONS_END_ADD = \"TRANSACTIONS_END_ADD\";\nexport const TRANSACTIONS_ADD_SUCCESS = \"TRANSACTIONS_ADD_SUCCESS\";\nexport const TRANSACTIONS_ADD_FAIL = \"TRANSACTIONS_ADD_FAIL\";\nexport const TRANSACTIONS_BEGIN_EDIT = \"TRANSACTIONS_BEGIN_EDIT\";\nexport const TRANSACTIONS_END_EDIT = \"TRANSACTIONS_END_EDIT\";\nexport const TRANSACTIONS_EDIT_SUCCESS = \"TRANSACTIONS_EDIT_SUCCESS\";\nexport const TRANSACTIONS_EDIT_FAIL = \"TRANSACTIONS_EDIT_FAIL\";\nexport const TRANSACTIONS_ARCHIVE_SUCCESS = \"TRANSACTIONS_ARCHIVE_SUCCESS\";\nexport const TRANSACTIONS_ARCHIVE_FAIL = \"TRANSACTIONS_ARCHIVE_FAIL\";\nexport const TRANSACTIONS_REMOVE_SUCCESS = \"TRANSACTIONS_REMOVE_SUCCESS\";\nexport const TRANSACTIONS_REMOVE_FAIL = \"TRANSACTIONS_REMOVE_FAIL\";\nexport const TRANSACTIONS_GET_CLIENTS_LIST = \"TRANSACTIONS_GET_CLIENTS_LIST\";\nexport const TRANSACTIONS_ADD_ONE_CLIENT = \"TRANSACTIONS_ADD_ONE_CLIENT\";\nexport const DASHBOARD_SET_FILTER = \"DASHBOARD_SET_FILTER\";\nexport const DASHBOARD_GET_DATA = \"DASHBOARD_GET_DATA\";\nexport const LOGS_SET_FILTER = \"LOGS_SET_FILTER\";\nexport const LOGS_GET_DATA = \"LOGS_GET_DATA\";\nexport const LOGS_ADD = \"LOGS_ADD\";\nexport const LOGS_REMOVE = \"LOGS_REMOVE\";\nexport const SYSTEM_CALLOUT_SHOW = \"SYSTEM_CALLOUT_SHOW\";\nexport const SYSTEM_CALLOUT_HIDE = \"SYSTEM_CALLOUT_HIDE\";\nexport const SYSTEM_SET_SELECTED_MENU = \"SYSTEM_SET_SELECTED_MENU\";\nexport const ADMIN_UPDATE_BALANCE = \"ADMIN_UPDATE_BALANCE\";\nexport const ADMIN_UPDATE_LOCALLY = \"ADMIN_UPDATE_LOCALLY\";","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    users: [],\n    editing: false,\n    editingThis: '',\n    adding: false\n}\n\nconst getUsersList = (state, action) => {\n    return {...state, users: action.users}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editingThis: action.email}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, users: [...state.users, action.user] }\n}\n\nconst removeSuccess = (state, action) => {\n    const newUsers = state.users.filter(user => {\n        return user.id !== action.id\n    });\n    return {...state, users: newUsers}\n}\n\nconst updateUsersList = (state, action) => {\n    const newUsers = state.users.map(user => {\n        if(user.id === action.data.id){\n            return action.data\n        }else{\n            return user\n        }\n    })\n    return {...state, users: newUsers}\n}\n\nconst usersReducer = (state = initialState, action) => {\n    console.log(action.type);\n    switch(action.type){\n        case types.USERS_GET_LIST: return getUsersList(state, action);\n        case types.USERS_GET_ONE: return updateUsersList(state, action);\n        case types.USERS_EDIT_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_ARCHIVE_SUCCESS: return updateUsersList(state, action);\n        case types.USERS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.USERS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.USERS_END_EDIT: return endEdit(state);\n        case types.USERS_BEGIN_ADD: return beginAdd(state);\n        case types.USERS_END_ADD: return endAdd(state);\n        case types.USERS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.USERS_UPDATE_USER: return updateUsersList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default usersReducer;","import * as types from '../actions/actionTypes';\n\nconst today = new Date();\nconst aWeekAgo = new Date(new Date().setDate(today.getDate()-6));\n\nconst initialState = {\n    transactions: [],\n    clients: [],\n    editing: false,\n    editingThis: 0,\n    adding: false,\n    editData: {},\n    filters: {\n        partners: [],\n        types: [],\n        client: '',\n        fromDate: new Date(aWeekAgo.setHours(0,0,0,0)),\n        toDate: new Date(today.setHours(23,59,59,0))\n    },\n    allPartnersSelected: true,\n    allTypesSelected: true\n}\n\nconst getTransactionsList = (state, action) => {\n    return {...state, transactions: action.transactions}\n}\n\nconst getClientsList = (state, action) => {\n    return {...state, clients: action.clients.map(c => c.client_name)}\n}\n\nconst beginEdit = (state, action) => {\n    return {...state, editing: true, editData: action.transaction}\n}\n\nconst endEdit = state => {\n    return {...state, editing: false}\n}\n\nconst beginAdd = state => {\n    return {...state, adding: true}\n}\n\nconst endAdd = state => {\n    return {...state, adding: false}\n}\n\nconst addSuccess = (state, action) => {\n    return {...state, transactions: [ action.transaction,...state.transactions]}\n}\n\nconst removeSuccess = (state, action) => {\n    const newTransactions = state.transactions.filter(transaction => {\n        return transaction.id !== action.id\n    });\n    return {...state, transactions: newTransactions}\n}\n\nconst updateTransactionsList = (state, action) => {\n    const newTransactions = state.transactions.map(transaction => {\n        if(transaction.id === action.data.id){\n            return action.data\n        }else{\n            return transaction\n        }\n    })\n    return {...state, transactions: newTransactions}\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst setAllPartnersSelected = (state, action) => {\n    return {...state, allPartnersSelected: action.allPartnersSelected}\n}\n\nconst setAllTypesSelected = (state, action) => {\n    return {...state, allTypesSelected: action.allTypesSelected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.TRANSACTIONS_GET_LIST: return getTransactionsList(state, action);\n        case types.TRANSACTIONS_EDIT_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_ARCHIVE_SUCCESS: return updateTransactionsList(state, action);\n        case types.TRANSACTIONS_REMOVE_SUCCESS: return removeSuccess(state, action);\n        case types.TRANSACTIONS_BEGIN_EDIT: return beginEdit(state, action);\n        case types.TRANSACTIONS_END_EDIT: return endEdit(state);\n        case types.TRANSACTIONS_BEGIN_ADD: return beginAdd(state);\n        case types.TRANSACTIONS_END_ADD: return endAdd(state);\n        case types.TRANSACTIONS_ADD_SUCCESS: return addSuccess(state, action);\n        case types.TRANSACTIONS_SET_FILTER: return setFilter(state, action);\n        case types.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED: return setAllPartnersSelected(state, action);\n        case types.TRANSACTIONS_SET_ALL_TYPES_SELECTED: return setAllTypesSelected(state, action);\n        case types.TRANSACTIONS_GET_CLIENTS_LIST: return getClientsList(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    menu: '0'\n}\n\nconst selectMenu = (state, action) => {\n    return {...state, menu: action.selected}\n}\n\nconst systemReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.SYSTEM_SET_SELECTED_MENU: return selectMenu(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default systemReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        partner: 0,\n        alltime: false\n    },\n    data: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getDashboardData = (state, action) => {\n    return {...state, data: action.data}\n}\n\nconst dashboardReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.DASHBOARD_GET_DATA: return getDashboardData(state, action);\n        case types.DASHBOARD_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        default: return state;\n    }\n}\n\nexport default dashboardReducer;","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n    filters: {\n        fromDate: new Date().setDate(1),\n        toDate: new Date(),\n        message: ''\n    },\n    logs: []\n}\n\nconst setFilter = (state, action) => {\n    return {...state, filters: {...state.filters, [action.filter]: action.value}}\n}\n\nconst getLogs = (state, action) => {\n    return {...state, logs: action.data}\n}\n\nconst removeLog = (state, action) => {\n    return {...state, logs: state.logs.filter(log => log.id !== action.id)}\n}\n\nconst logsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LOGS_GET_DATA: return getLogs(state, action);\n        case types.LOGS_SET_FILTER: return setFilter(state, action);\n        case types.AUTH_LOGOUT: return {...initialState};\n        case types.LOGS_REMOVE: return removeLog(state, action);\n        default: return state;\n    }\n}\n\nexport default logsReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer';\nimport transactionsReducer from './transactionsReducer';\nimport systemReducer from './systemReducer';\nimport dashboardReducer from './dashboardReducer';\nimport logsReducer from './logsReducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    users: usersReducer,\n    transactions: transactionsReducer,\n    system: systemReducer,\n    dashboard: dashboardReducer,\n    logs: logsReducer\n})\n\nexport default rootReducer;\n","export const USER_ADD = \"USER_ADD\";\nexport const USER_REMOVE = \"USER_REMOVE\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DEACTIVATE = \"USER_DEACTIVATE\";\nexport const USER_ACTIVATE = \"USER_ACTIVATE\";\nexport const TRANSACTION_ADD = \"TRANSACTION_ADD\";\nexport const TRANSACTION_REMOVE = \"TRANSACTION_REMOVE\";\nexport const TRANSACTION_UPDATE = \"TRANSACTION_UPDATE\";","// export const HOST = 'https://api.chimera-finance.com';\nexport const HOST = 'http://localhost:8000';","import * as types from './actionTypes';\nimport axios from 'axios';\nimport { logout } from './authActions';\nimport { HOST } from '../../config';\n\nexport const addLog = (user, type, message) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`${HOST}/api/logs/`, {user, log_type: type, message}, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_ADD,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}\n\nexport const deleteLog = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`${HOST}/api/logs/${id}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_REMOVE,\n                id\n            })\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n}\n\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.LOGS_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getLogs = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, message} = state.logs.filters;\n        const {token} = state.auth;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(message){q+=`message=${message}`}\n        const bearer = 'Bearer ' + token;\n        axios.get(`${HOST}/api/logs/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.LOGS_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout());\n            }\n        });         \n    }    \n}","import numeral from 'numeral';\n\nexport function urltoid(url){\n    let arr;\n    if(url){\n        arr = url.split(\"/\");\n        return arr[arr.length - 2];\n    }else{\n        return 0\n    }\n}\n\nexport function formatText(text){\n    return text[0].toUpperCase() + text.toLowerCase().slice(1).replace(/[_.]/, ' ')\n}\n\nexport function formatDate(date){\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-UK', options)\n}\n\nexport function round2(num){\n    return Math.round(num * 100 + Number.EPSILON) / 100\n}\n\nnumeral.register('locale', 'al', {\n    delimiters: {\n        thousands: '.',\n        decimal: ','\n    },\n    abbreviations: {\n        thousand: 'k',\n        million: 'm',\n        billion: 'b',\n        trillion: 't'\n    },\n    currency: {\n        symbol: '€'\n    }\n});","import * as actionTypes from './actionTypes';\nimport * as logTypes from './logTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { updateUserLocally, updateAdminLocally } from './usersActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\nimport { HOST } from '../../config';\nimport { urltoid } from '../../useful';\n\nexport const getAllTransactions = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, admin} = state.auth;\n        const {allTypesSelected, filters} = state.transactions;\n        // const own = admin ? '' : 'own';\n        const {client, types, partners, fromDate, toDate} = filters;\n        let q = `?from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        if(client){q+=`client=${client}&`}\n        if(!allTypesSelected){q+=`types=${types}&`}\n        if(admin){q+=`partners=${partners}&`};\n        const bearer = 'Bearer ' + token;\n        if(!types.length || (admin && !partners.length)){\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_LIST,\n                transactions: []\n            })\n        }else{\n            axios.get(`${HOST}/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n                const transactions = res.data.map(({url, ...others}) => {\n                    return {\n                        id: urltoid(url),\n                        ...others\n                    }\n                });\n                dispatch({\n                    type: actionTypes.TRANSACTIONS_GET_LIST,\n                    transactions\n                })\n            }).catch(e => {\n                console.log(e)\n                if(e.response && e.response.status === 401){\n                    dispatch(logout);\n                }\n            });\n        }\n    }   \n}\n\nexport const getAllClients = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.get(`${HOST}/api/clients/`, { headers: { 'Authorization': bearer } }).then(res => {\n            const clients = res.data;\n            dispatch({\n                type: actionTypes.TRANSACTIONS_GET_CLIENTS_LIST,\n                clients\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_ADD})\n    }\n}\n\nexport const beginEdit = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction = transactions.filter(t=>t.id === id)[0]\n        dispatch({type: actionTypes.TRANSACTIONS_BEGIN_EDIT, transaction})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_END_EDIT})\n    }\n}\n\nexport const addTransaction = (transaction_type, client_name, amount, amount_paid, rate, user ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\"\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user0 = users.filter(u=> u.id === user)[0];\n        const {username} = user0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`${HOST}/api/transactions/`, {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\nexport const editTransaction = (transaction_type, client_name, amount, amount_paid, rate, user, id ) => {\n    if(transaction_type === \"Payment\")client_name = \"-\";\n    return (dispatch, getState) => {\n        const state = getState();\n        const {transactions} = state.transactions;\n        const transaction0 = transactions.filter(t=> t.id === id)[0];\n        const {username} = transaction0;\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`${HOST}/api/transactions/`, {\n            transaction_type, client_name, amount, amount_paid, rate, user\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_SUCCESS, transaction: res.data});\n            dispatch({type: actionTypes.TRANSACTIONS_END_ADD});\n            dispatch(updateUserLocally(user));\n            dispatch(updateAdminLocally());\n            let message;\n            const adminAmount = numeral(Math.abs(parseFloat(amount))).format('0,0.00 $');\n            const partnerAmount = numeral(Math.abs(parseFloat(amount_paid))).format('0,0.00 $');\n            switch(transaction_type){\n                case 'Wire':\n                case 'Credit Card': message = `Added deposit of ${adminAmount} by client ${client_name}, made via ${transaction_type}. Amount registered on partner ${username} is ${partnerAmount}, given that the actual rate is ${rate}.`; break;\n                case 'Withdraw': message = `Client ${client_name} withdrawed ${adminAmount} from main balance. ${partnerAmount} were substracted from ${username}'s balance, given that the actual rate is ${rate}.`; break;\n                case 'Payment': message = `Made payment of ${adminAmount} to ${username}`;break;\n                default: message = `Made transaction of type ${transaction_type}. Partner ${username}, main amount ${adminAmount}, partner amount ${partnerAmount} (because rate is ${rate}).`;break;\n            } \n            dispatch(addLog(user, logTypes.TRANSACTION_ADD, message))\n        }).catch(e => {\n            dispatch({type: actionTypes.TRANSACTIONS_ADD_FAIL, e})\n        })\n    }\n}\n\n\nexport const removeTransaction = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.delete(`${HOST}/api/transactions/${id}/`,{headers: {\"Authorization\": bearer}})\n        .then(() => {\n            const {transactions} = state.transactions;\n            const {amount, amount_paid, client_name, user, rate, transaction_type} = transactions.filter(t=>t.id === id)[0];\n            const {users} = state.users;\n            const user0 = users.filter(u=> u.url === `${HOST}/api/users/${user}/`)[0];\n            const {username} = user0;\n            const adminAmount = numeral(parseFloat(amount)).format('0,0.00 $');\n            const partnerAmount = numeral(parseFloat(amount_paid)).format('0,0.00 $');\n            dispatch({type: actionTypes.TRANSACTIONS_REMOVE_SUCCESS, id});\n            dispatch({type: actionTypes.TRANSACTIONS_END_EDIT});\n            dispatch(updateAdminLocally());\n            const message = `Removed transaction ${id} of type ${transaction_type}. Client: ${client_name}. Main amount: ${adminAmount}. Partner amount: ${partnerAmount}. Partner: ${username}. Rate ${rate}`;\n            dispatch(addLog(user, logTypes.TRANSACTION_REMOVE, message))\n        })\n        .catch(e => dispatch({type: actionTypes.TRANSACTIONS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const setTransactionsFilter = (filter, value) => {\n    return dispatch => {\n        dispatch({type: actionTypes.TRANSACTIONS_SET_FILTER, filter, value});\n        dispatch(getAllTransactions())\n    }\n}\n\nexport const setAllPartnersSelected = allPartnersSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_PARTNERS_SELECTED,\n        allPartnersSelected\n    }\n}\n\nexport const setAllTypesSelected = allTypesSelected => {\n    return {\n        type: actionTypes.TRANSACTIONS_SET_ALL_TYPES_SELECTED,\n        allTypesSelected\n    }\n}\n","import * as types from './actionTypes';\nimport axios from 'axios';\nimport numeral from 'numeral';\nimport { getAllTransactions } from './transactionsActions';\nimport { logout } from './authActions';\nimport { addLog } from './logsActions';\nimport { urltoid } from '../../useful';\nimport { HOST } from '../../config';\nimport * as  logTypes from './logTypes';\n\nexport const getAllUsers = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.get(`${HOST}/api/users/`, { headers: { 'Authorization': bearer } }).then(res => {\n            const users = res.data.map(({url, ...others}) => {\n                return {\n                    id: urltoid(url),\n                    ...others\n                }\n            })\n            dispatch({\n                type: types.USERS_GET_LIST,\n                users\n            })\n        }).catch(e => {\n            console.log(e);\n            if(e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });\n    }   \n}\n\nexport const beginAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_ADD})\n    }\n}\n\nexport const endAdd = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_ADD})\n    }\n}\n\nexport const beginEdit = email => {\n    return dispatch => {\n        dispatch({type: types.USERS_BEGIN_EDIT, email})\n    }\n}\n\nexport const endEdit = () => {\n    return dispatch => {\n        dispatch({type: types.USERS_END_EDIT})\n    }\n}\n\nexport const updateUserLocally = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.get(`${HOST}/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.USERS_GET_ONE, data: {...response.data, id: urltoid(response.data.url)}});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const updateAdminLocally = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token, id} = state.auth;\n        axios.get(`${HOST}/api/users/${id}/`,{\n            headers: {\"Authorization\": 'Bearer ' + token}\n        }).then(response=>{\n            dispatch({type: types.ADMIN_UPDATE_BALANCE, balance: response.data.partner_data.balance});\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n}\n\nexport const addUser = (username, email, password, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = 'Bearer ' + token;\n        axios.post(`${HOST}/api/users/`, {\n            username, email, password, partner_data\n        },{\n            headers: {\"Authorization\": bearer}\n        }).then(res => {\n            const {url, username, partner_data} = res.data;\n            const {balance, Wrate, CCrate, BTCrate, btc} = partner_data;\n            dispatch({type: types.USERS_ADD_SUCCESS, user: res.data});\n            dispatch({type: types.USERS_END_ADD});\n            dispatch(updateAdminLocally());\n            dispatch(addLog(urltoid(url), logTypes.USER_ADD, `Added partner ${username} with initial balance ${numeral(parseFloat(balance)).format('0,0.00 $')} Wire rate ${Wrate}, Credit Card rate ${CCrate} ${btc ? 'and BTC rate ' + BTCrate : ''}.`))\n        }).catch(e => {\n            dispatch({type: types.USERS_ADD_FAIL})\n        })\n    }\n}\n\nexport const editUser = (id, username, email, partner_data) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const oldUser = users.filter(u=> u.id === id)[0];\n        const oldUsername = oldUser.username;\n        const oldEmail = oldUser.email;\n        const oldBalance = oldUser.partner_data.balance;\n        const oldWRate = oldUser.partner_data.Wrate;\n        const oldCCRate = oldUser.partner_data.CCrate;\n        const oldBTCRate = oldUser.partner_data.BTCrate;\n        const oldBtc = oldUser.partner_data.btc;\n        const admin = oldUser.is_staff;\n        const {balance, Wrate, CCrate, BTCrate, btc} = partner_data;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(`${HOST}/api/users/${id}/`, {username, email, partner_data},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_EDIT_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally())\n            dispatch(updateUserLocally(id));\n            const adminOrPartner = admin ? 'admin' : `partner with id ${id}`;\n            const changedUsername = (username !== oldUsername) ? ` username from ${oldUsername} to ${username},` : '';\n            const changedEmail = (email !== oldEmail) ?  ` email from ${oldEmail} to ${email},` : '';\n            const changedBalance = (parseFloat(balance) !== parseFloat(oldBalance)) ?  ` balance from ${numeral(parseFloat(oldBalance)).format('0,0.00 $')} to ${numeral(parseFloat(balance)).format('0,0.00 $')},` : '';\n            const changedWRate = (Wrate !== oldWRate) ?  ` Wire rate from ${oldWRate} to ${Wrate},` : '';\n            const changedCCRate = (CCrate !== oldCCRate) ?  ` Credit Card rate from ${oldCCRate} to ${CCrate},` : '';\n            const changedBTCRate = (BTCrate !== oldBTCRate) ?  ` BTC rate from ${oldBTCRate} to ${BTCrate},` : '';\n            const changedBTC = (oldBtc !== btc) ?  (btc ? ' activated BTC' : 'deactivated BTC') : '';\n            let message = `Updated ${adminOrPartner}: changed${changedUsername + changedEmail + changedBTC + changedBalance + changedWRate + changedCCRate + changedBTCRate}`.replace(/.$/,\".\");\n            dispatch(addLog(id, logTypes.USER_UPDATE, message))\n        })\n        .catch(e => dispatch({type: types.USERS_EDIT_FAIL, error: e}))\n    }\n}\n\nexport const removeUser = id => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const {users} = state.users;\n        const user = users.filter(u=> urltoid(u.url) === id)[0];\n        const bearer = 'Bearer ' + token;\n        axios.delete(`${HOST}/api/users/${id}/`,{headers: {\"Authorization\": bearer}})\n        .then(() => {\n            const {username, partner_data} = user;\n            const {balance} = partner_data;\n            dispatch({type: types.USERS_REMOVE_SUCCESS, id});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateAdminLocally());\n            dispatch(getAllTransactions());\n            const message = `Removed partner ${username}, along with his balance of ${balance} and all his transactions.`;\n            dispatch(null, logTypes.USER_REMOVE, message)\n        })\n        .catch(e => dispatch({type: types.USERS_REMOVE_FAIL, error: e}))\n    }\n}\n\nexport const toggleActive = (id, is_active) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {users} = state.users;\n        const user = users.filter(u=> urltoid(u.url) === id)[0];\n        const {username} = user;\n        const token = state.auth.token;\n        const bearer = 'Bearer ' + token;\n        axios.patch(`${HOST}/api/users/${id}/`, {is_active, partner_data: {}},{headers: {\"Authorization\": bearer}})\n        .then(res => {\n            dispatch({type: types.USERS_ARCHIVE_SUCCESS, data: res.data});\n            dispatch({type: types.USERS_END_EDIT});\n            dispatch(updateUserLocally(id));\n            const logtype = is_active ? logTypes.USER_ACTIVATE : logTypes.USER_DEACTIVATE;\n            const action = is_active ? \"Activated\" : \"Deactivated\";\n            const message = `${action} partner ${username}. Now he will ${is_active ? 'again' : 'not'} be available for new transactions and${is_active ? '' : ' will not be able to'} log in.`;\n            dispatch(addLog(id, logtype, message))\n        })\n        .catch(e => dispatch({type: types.USERS_ARCHIVE_FAIL, error: e}))\n    }\n}","import axios from 'axios';\nimport * as types from './actionTypes';\nimport {getAllUsers} from './usersActions';\nimport {getAllTransactions} from './transactionsActions';\nimport { HOST } from '../../config';\n\nexport const authStart = () => {\n    return {\n        type: types.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, id, email, username, is_staff, balance, btc) => {\n    return {\n        type: types.AUTH_SUCCESS,\n        token,\n        id,\n        email,\n        username,\n        is_staff,\n        balance,\n        btc\n    }\n}\nexport const authFail = error => {\n    return {\n        type: types.AUTH_FAIL,\n        error\n    }\n}\nexport const authLogout = () => {\n    return {\n        type: types.AUTH_LOGOUT\n    }\n}\n\nexport const setToken = token => {\n    return {\n        type: types.AUTH_SET_TOKEN,\n        token\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        axios.post(`${HOST}/api/auth/logout/`).then(()=>{\n            dispatch(authLogout())\n            window.persistor.flush()\n            window.persistor.purge()\n        }).catch(e => {\n            console.log(e.message)\n        })\n    }\n}\n\nexport const refreshToken = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        axios.post(`${HOST}/api/auth-jwt-refresh/`, {token}).then(res => {\n            dispatch(setToken(res.data.token))\n        }).catch(e => {\n            console.log(\"refresh token error \" + e)\n            dispatch(logout())\n        })\n    }\n}\n\nexport const login = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${HOST}/api/auth/login/`, {\n            email,\n            password\n        }).then(res => {\n            const {token, user} = res.data;\n            const {pk, email, username} = user;\n            axios.get(`${HOST}/api/users/${pk}/`,{\n                headers: {'Authorization': `Bearer ${token}`}\n            }).then(res => {\n                const {is_active, is_staff, partner_data} = res.data;\n                let balance  = parseFloat(partner_data.balance);\n                let btc  = partner_data.btc;\n                if(is_active){\n                    dispatch(authSuccess(token, pk, email, username, is_staff, balance, btc));\n                }\n                if(is_staff){\n                    dispatch(getAllUsers());\n                    dispatch(getAllTransactions())\n                }\n            })\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}\n\nexport const changePassword = (new_password1, new_password2) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {token} = state.auth;\n        const bearer = `Bearer ` + token;\n        axios.post(`${HOST}/api/auth/password/change/`, {new_password1, new_password2}, { headers: { 'Authorization': bearer } });\n        dispatch({type: types.AUTH_RESET_PASSWORD});\n    }\n}\n\nexport const signup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${HOST}/api/users/register/`, {\n            username,\n            email,\n            password1,\n            password2\n        }).then(res => {\n            const token = res.data.key;\n            dispatch(authSuccess(token));\n        }).catch(error => {\n            dispatch(authFail(error));\n        })\n    }\n}","import * as types from './actionTypes';\n\nexport const selectMenu = selected => {\n    return dispatch => {\n        dispatch({\n            type: types.SYSTEM_SET_SELECTED_MENU,\n            selected\n        })\n    }\n}","import React, { useEffect } from 'react';\nimport { Pivot, PivotItem, PivotLinkSize, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { DefaultButton } from 'office-ui-fabric-react';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout, refreshToken } from '../../store/actions/authActions';\nimport { selectMenu } from '../../store/actions/systemActions';\nimport './Menu.sass';\n\nfunction Menu({logOut, refreshToken, setMenu, token, menu, admin, username}){\n    useEffect(() => {\n      const interval = setInterval( () => {\n        refreshToken()\n      }, 300000);\n      return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        refreshToken();\n        window.addEventListener(\"focus\", refreshToken);\n        return () => window.removeEventListener(\"focus\", refreshToken);\n    },[])\n    \n    if(!token) return null;\n    \n    function itemClicked(e){\n      setMenu(e.key.slice(1));\n    }\n    \n    function logOutClicked(){\n      logOut();\n      return <Redirect to=\"/login\" />\n    }\n    \n    return (\n        <div id=\"menu\">\n          <nav>\n            <Pivot linkSize={PivotLinkSize.normal} linkFormat={PivotLinkFormat.links} selectedKey={menu} onLinkClick={itemClicked}>\n              <PivotItem iconProps={{iconName: 'People'}} itemKey=\"0\" headerText=\"Dashboard\" onClick={() => setMenu(\"home\")} onRenderItemLink={() => <Link to=\"/\"><Icon iconName=\"Diagnostic\" /> Dashboard</Link>} />\n              {admin ? <PivotItem itemKey=\"1\" headerText=\"Users\" onClick={() => setMenu(\"users\")} onRenderItemLink={() => <Link to=\"/users\"><Icon iconName=\"People\" /> Users</Link>} /> : null}\n              <PivotItem itemKey=\"2\" headerText=\"Transactions\" onClick={() => setMenu(\"transactions\")} onRenderItemLink={() => <Link to=\"/transactions\"><Icon iconName=\"Money\" /> Transactions</Link>} />\n              <PivotItem itemKey=\"4\" headerText=\"Transactions\" onClick={() => setMenu(\"logs\")} onRenderItemLink={() => <Link to=\"/logs\"><Icon iconName=\"TextDocument\" /> Logs</Link>} />\n            </Pivot>\n            <div>\n              {/* <Text variant=\"large\" styles={{root: {verticalAlign: 'middle', color: '#777'}}}>{username} </Text> */}\n              <DefaultButton\n                className=\"logout\"\n                allowDisabledFocus={true}\n                text=\"Logout\"\n                onClick={() => logOutClicked()}\n                iconProps={{ iconName: 'Leave' }}\n              />\n            </div>\n          </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    admin: state.auth.admin,\n    menu: state.system.menu,\n    username: state.auth.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logout()),\n    setMenu: menu => dispatch(selectMenu(menu)),\n    refreshToken: () => dispatch(refreshToken())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { w3cwebsocket } from 'websocket';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { formatText } from '../../useful';\nimport { getAllTransactions } from '../../store/actions/transactionsActions';\nimport { updateAdminLocally } from '../../store/actions/usersActions';\nimport './Notifications.sass';\n\nfunction Notifications({token, getTransactions, updateThisUser}){\n    const client = w3cwebsocket(`wss://api.chimera-finance.com/notifications/?${token}`);\n    const [anchor, setAnchor] = useState(null);\n    const [notifications, setNotifications] = useState([]);\n    \n    useEffect(()=>{\n        client.onopen = () => {\n          console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (m) => {\n            const msg = JSON.parse(m.data);\n            const {message, id, type} = msg;\n            setNotifications([...notifications, {head: formatText(type), message, id}])\n            getTransactions();\n            updateThisUser();\n        };\n        return () => client.close()\n    }, [token])\n\n    function Notification({head, body, id, hideNotification}){\n        const [active, setActive] = useState(true);\n        useEffect(()=>{\n            const timeoutid = setTimeout(() => {\n                setActive(false)\n                hideNotification(id)\n            }, 10000);\n            return () => clearTimeout(timeoutid)\n        }, [])\n        return(\n            <div>\n                {active ? <Callout\n                    className=\"ms-CalloutExample-callout\"\n                    onClick={()=>hideNotification(id)}\n                    isBeakVisible={false}\n                    target={anchor}\n                    gapSpace={0}\n                    directionalHint={DirectionalHint.bottomRightEdge}\n                    styles={{root: {width: '280px', backgrounColor: 'white', zIndex: 8}}}\n                >\n                    <div className=\"content\">\n                        <Text styles={{root: {display: 'block', padding: '20px 20px 0px 20px'}}} variant=\"large\">{head}</Text>\n                        <Text styles={{root: {display: 'block', padding: '0px 20px 20px 20px'}}} variant=\"medium\">{body}</Text>\n                    </div>\n                </Callout>: null}\n            </div>\n        )\n    }\n\n    function removeNotification(id){\n        setNotifications(notifications.filter(n=>n.id !== id))\n    }\n\n    return(\n        <div id=\"notifications\">\n            <div className=\"ms-CalloutCoverExample-buttonArea\" id=\"anchor\" ref={ref=>setAnchor(ref)}>\n                {notifications.map((notification, i) => {\n                    return <Notification key={i} head={notification.head} body={notification.message} id={notification.id} hideNotification={id => removeNotification(id)}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTransactions: () => dispatch(getAllTransactions()),\n        updateThisUser: () => dispatch(updateAdminLocally())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","import React, {useEffect} from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip, AreaChart, Area} from 'recharts';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { setFilter, getDashboardData } from '../../store/actions/dashboardActions';\nimport AnimatedNumber from 'animated-number-react';\nimport { round2 } from '../../useful';\nimport { HOST } from '../../config';\nimport './Dashboard.sass';\n\nconst host = HOST.replace(\"https\", \"http\");\n\nfunction Dashboard({admin, balance, users, setFilter, filters, getData, data, partnerId, btc}){\n\n    let {fromDate, toDate, partner, alltime} = filters;\n\n    const selectedPartner = admin ? partner : parseInt(partnerId);\n\n    useEffect(()=>{\n        getData()\n    }, [getData, fromDate, toDate, partner, alltime])\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    const partnersDropdown = users.filter(u=> !u.is_staff).map(u => {\n        const key = u.id;\n        return {key, text: u.username}\n    });\n\n    function formatDate(date){\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return date.toLocaleDateString('en-UK', options);\n    }\n\n    function prepareSingleUserData(id){\n        const partnerData = data.sort((a, b) => new Date(a.entry_time) - new Date(b.entry_time)).filter(d => d.user === parseInt(id)).filter(d => d.transaction_type !== \"Payment\").map(d=> {\n            return {\n                ...d,\n                entry_time: new Date(d.entry_time).toLocaleDateString(\"it-IT\").replace('/2019', '')\n            }\n        });\n        const dates = [...new Set(partnerData.map(d => d.entry_time))];\n        return dates.map(d => {\n            return {\n                name: d,\n                wire: round2(partnerData.filter(p => p.entry_time === d).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                cc: round2(partnerData.filter(p => p.entry_time === d).filter(d => d.transaction_type === \"Credit Card\").reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                btc: round2(partnerData.filter(p => p.entry_time === d).filter(d => d.transaction_type === \"BTC\").reduce((acc, a)=>{\n                    return parseFloat(a.amount) + acc\n                }, 0)),\n                profit: round2(partnerData.filter(p => p.entry_time === d).reduce((da, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + da\n                }, 0))\n            }\n        })\n    }\n\n    function prepareAllUsersData(d){\n        d = d.filter(t => t.transaction_type !== \"Payment\");\n        const partners = users.filter(u=>!u.is_staff).map(({id, username}) => {\n            return {id, username}\n        });\n        return partners.map(p => {\n            return {\n                name: p.username,\n                wire: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => (d.transaction_type === \"Wire\" || d.transaction_type === \"Withdraw\")).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                cc: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => d.transaction_type === \"Credit Card\").reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                btc: round2(d.filter(d => parseInt(d.user) === p.id).filter(d => d.transaction_type === \"BTC\").reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) + accumulator\n                }, 0)),\n                profit: round2(d.filter(d => parseInt(d.user) === p.id).reduce((accumulator, a)=>{\n                    return parseFloat(a.amount) - parseFloat(a.amount_paid) + accumulator\n                }, 0))\n            }\n        })\n    }\n\n    const alldata = prepareAllUsersData(data);\n    const allUsersWire = alldata.reduce((acc, b)=> acc + b.wire, 0);\n    const allUsersCC = alldata.reduce((acc, b)=> acc + b.cc, 0);\n    const allUsersBTC = alldata.reduce((acc, b)=> acc + b.btc, 0);\n    const allUsersDeposits = allUsersWire + allUsersCC + allUsersBTC;\n    const singleUserData = prepareSingleUserData(selectedPartner);\n    const singleUserWire = singleUserData.reduce((acc, b)=> acc + b.wire, 0);\n    const singleUserCC = singleUserData.reduce((acc, b)=> acc + b.cc, 0);\n    const singleUserBTC = singleUserData.reduce((acc, b)=> acc + b.btc, 0);\n    const singleUserDeposits = singleUserWire + singleUserCC + singleUserBTC;\n    const due = users.filter(u => !u.is_staff).reduce((a, b) => a + parseFloat(b.partner_data.balance), 0);\n    const selectedPartnerName = (selectedPartner && admin) ? partnersDropdown.find(p=> p.key === selectedPartner).text : null;\n    const selectedPartnerBalance = (selectedPartner && admin) ? users.find(u => u.id === selectedPartner).partner_data.balance : balance;\n    \n    return(\n        <div id=\"dashboard\">\n            <Stack className=\"bar\" horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                    {admin ? <div className=\"combo\"><ComboBox autoComplete=\"on\" selectedKey={selectedPartner} options={partnersDropdown} placeholder=\"Partner...\" onChange={(e, e2) => setFilter('partner',e2.key)} style={{width: 140}} />{selectedPartner ? <span className=\"clear\" onClick={()=>setFilter('partner', null)}>Clear</span> : null}</div> : null}\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> {setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0))); setFilter('alltime', false)}}/>\n                    <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> {setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)));setFilter('alltime', false)}}/>\n                    <Toggle inlineLabel label='Time limit' onText='All time' offText='Date range' checked={alltime} onChange={()=>setFilter('alltime', !alltime)}  />\n                </Stack>\n                <div className=\"balance\">\n                    <div className=\"txt\">{admin ? 'To pay: ' : 'Balance: '}</div>\n                    <Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(admin ? due : balance)} formatValue={(due) => numeral(parseFloat(due)).format(\"0,0.00 $\")} /></Text>\n                </div>\n            </Stack>\n            {selectedPartner ? <section className=\"userInfo\">\n                <AreaChart\n                    width={720}\n                    height={400}\n                    data={singleUserData}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"wire\" stackId=\"one\" stroke=\"#fce100\" fill=\"#fce100\" />\n                    <Area type=\"monotone\" dataKey=\"cc\" stackId=\"one\" stroke=\"#ffaa44\" fill=\"#ffaa44\" />\n                    {(btc || admin) ? <Area type=\"monotone\" dataKey=\"btc\" stackId=\"one\" stroke=\"#8e41be\" fill=\"#8e41be\" /> : null}\n                    {admin ? <Area type=\"monotone\" dataKey=\"profit\" stackId=\"one\" stroke=\"#82ca9d\" fill=\"darkgreen\" /> : null}\n                </AreaChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            {admin ? <tr>\n                                <td>Partner: </td>\n                                <td><Text variant=\"xLarge\">{selectedPartnerName}</Text></td>\n                            </tr> : null}\n                            <tr>\n                                <td>Balance: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(selectedPartnerBalance)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(singleUserDeposits)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserWire)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserCC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            {(btc || admin) ? <tr>\n                                <td>BTC: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(singleUserBTC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr> : null}\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n            {(admin && alldata.length) ? <section className=\"allInfo\">\n            <BarChart\n                    width={720}\n                    height={400}\n                    data={alldata}\n                >\n                    <CartesianGrid strokeDasharray=\"1 13\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"wire\" fill=\"#fce100\" />\n                    <Bar dataKey=\"cc\" fill=\"#ffaa44\" />\n                    <Bar dataKey=\"btc\" fill=\"#8e41be\" />\n                    <Bar dataKey=\"profit\" fill=\"darkgreen\" />\n                </BarChart>\n                <div className=\"cyphers\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Deposits: </td>\n                                <td><Text variant=\"xLarge\"><AnimatedNumber duration={500} value={parseFloat(allUsersDeposits)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Wire: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersWire)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>Credit Card: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersCC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                            <tr>\n                                <td>BTC: </td>\n                                <td><Text variant=\"medium\"><AnimatedNumber duration={500} value={parseFloat(allUsersBTC)} formatValue={val => numeral(parseFloat(val)).format(\"0,0.00 $\")} /></Text></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users.users,\n        balance: state.auth.balance,\n        admin: state.auth.admin,\n        partnerId: state.auth.id,\n        btc: state.auth.btc,\n        data: state.dashboard.data,\n        filters: state.dashboard.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilter: (filter, value) => dispatch(setFilter(filter, value)),\n        getData: () => dispatch(getDashboardData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import * as types from './actionTypes';\nimport axios from 'axios';\nimport {logout} from './authActions';\nimport { HOST } from '../../config';\nexport const setFilter = (filter, value) => {\n    return {\n        type: types.DASHBOARD_SET_FILTER,\n        filter,\n        value\n    }\n}\n\nexport const getDashboardData = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const {fromDate, toDate, alltime} = state.dashboard.filters;\n        const {token} = state.auth;\n        const dateQ = alltime ? '' : `from=${new Date(fromDate).toLocaleDateString(\"it-IT\")}&to=${new Date(toDate).toLocaleDateString(\"it-IT\")}&`;\n        let q = `?${dateQ}`;\n        const bearer = 'Bearer ' + token;\n        axios.get(`${HOST}/api/transactions/${q}`, { headers: { 'Authorization': bearer } }).then(res => {\n            dispatch({\n                type: types.DASHBOARD_GET_DATA,\n                data: res.data\n            })\n        }).catch(e => {\n            console.log(e)\n            if(e.response && e.response && e.response.status === 401){\n                dispatch(logout);\n            }\n        });         \n    }    \n}","import React, {useEffect} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Dashboard from '../pjeset/Home/Dashboard';\nimport { selectMenu } from '../store/actions/systemActions';\nimport './Home.sass';\n\nfunction Home({selectMenu, token, balance}){\n    useEffect(()=>{selectMenu(\"0\");document.title = \"Chimera | Home\"}, [selectMenu]);\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"home\">\n            <Dashboard />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        balance: state.auth.balance\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {useState, useEffect} from 'react';\nimport {useSpring, animated} from 'react-spring';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../store/actions/authActions';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport logourl from '../Chimera_01-01.svg'\nimport './Login.sass';\n\nfunction Login({login, error, token}){\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(()=>{document.title = \"Chimera | Login\"}, [])\n\n    const props = useSpring({opacity: 1, from: {opacity: 0}})\n    \n    if(token){return <Redirect to=\"/\" />}\n\n    return(\n        <div id=\"login\">\n            <div className=\"logo\">\n                <img src={logourl} alt=\"logo file\"/><animated.div style={props}><span className=\"Chimera\">Chimera</span></animated.div>\n            </div>\n            <form>\n                <h3>Log in</h3>\n                <TextField name=\"admin_email\" type=\"email\" label=\"email\" placeholder=\"enter email\" onChange={({target}) => setEmail(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <TextField name=\"admin_password\" label=\"Password\" type=\"password\" placeholder=\"enter password\" onChange={({target})=> setPassword(target.value)} onKeyPress={({key}) => (key === \"Enter\") ? login(email, password) : null} />\n                <PrimaryButton className=\"login\" onClick={() => login(email, password)}>Log in</PrimaryButton>\n                <h6>{error && error.message}</h6>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        error: state.auth.error,\n        loading: state.auth.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (email, password) => dispatch(login(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editUser, removeUser,toggleActive, endEdit } from '../../store/actions/usersActions';\nimport { HOST } from '../../config';\nimport './EditUser.sass';\n\nfunction EditUser({editing, endEdit, username, email, Wrate, CCrate, BTCrate, balance, active, btc, staff, id, save, remove, toggleActiveState}){\n    const [_username, setUsername] = useState(username);\n    const [_email, setEmail] = useState(email);\n    const [_balance, setBalance] = useState(balance);\n    const [_Wrate, setWRate] = useState(Wrate);\n    const [_CCrate, setCCRate] = useState(CCrate);\n    const [_BTCrate, setBTCRate] = useState(BTCrate ? BTCrate : 1);\n    const [_active, setActive] = useState(active);\n    const [_btc, setBtc] = useState(btc);\n    const [deleting, setDeleting] = useState(false);\n    useEffect(()=>{setActive(active)}, [active]);\n    const deActivateColorRoot = !_active ? \"green\" : \"brown\";\n    const deActivateColorRootHovered = !_active ? \"darkgreen\" : \"darkbrown\";\n    const deActivateColorRootPressed = !_active ? \"darkgreen\" : \"darkred\";\n    return(\n        <div>\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Edit user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" value={_username || \"\"} onChange={({target}) => setUsername(target.value)} />\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" value={_email} onChange={({target}) => setEmail(target.value)} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={_balance || 0} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={_Wrate || undefined} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label={`Credit Card ${_btc ? \"R.\" : \"Rate\"}`} name=\"credit card rate\" placeholder=\"rate\" value={_CCrate || undefined} onChange={({target}) => setCCRate(target.value)} /> \n                        {_btc ? <TextField type=\"number\" step={0.01} min={0} max={1} label=\"BTC Rate\" name=\"credit card rate\" placeholder=\"rate\" value={_BTCrate || undefined} onChange={({target}) => setBTCRate(target.value)} /> : null} \n                    </Stack>\n                    <Stack horizontal>\n                        <Link className=\"changePassword\" target=\"_blank\" href={`${HOST}/admin/api/user/${id}/password/`}>Change password</Link>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()}text=\"Cancel\" />\n                        <DefaultButton className={`btc ${_btc ? \"active\" : \"\"}`} onClick={()=> setBtc(!_btc)}text=\"BTC\" />\n                        {!staff ? <DefaultButton\n                            className=\"delete\"\n                            styles={{root: {color: deActivateColorRoot, borderColor: deActivateColorRoot}, \n                                    rootHovered: {color: deActivateColorRootHovered, borderColor: deActivateColorRootHovered}, \n                                    rootPressed: {color: deActivateColorRootPressed, borderColor: deActivateColorRootPressed}}\n                                } \n                            onClick={() => toggleActiveState(id, !_active)}\n                            text={_active ? \"Deactivate\" : \"Activate\"}\n                            split={true}\n                            menuProps={{\n                                items: [\n                                  {\n                                    key: 'deleteUser',\n                                    text: 'Delete',\n                                    style: {color: 'red', marginRight: 0},\n                                    onClick: () => setDeleting(true),\n                                    styles: {root: {color: 'red'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}},\n                                    iconProps: { iconName: 'Delete', color: 'red' }\n                                  }\n                                ]\n                              }} /> : null}\n                        <PrimaryButton \n                            className=\"save\"\n                            onClick={()=>save(id, _username, _email, {balance: _balance, Wrate: _Wrate, CCrate: _CCrate, BTCrate: _BTCrate, btc: _btc})} \n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n        <Dialog\n            hidden={!deleting}\n            onDismiss={() => setDeleting(false)}\n            dialogContentProps={{\n                type: DialogType.normal,\n                title: `Delete user ${username}?`,\n                subText: 'Warning! By deleting this user you will delete all his data, all his related transactions and the resulting profit from this user. Are you absolutely sure you want to delete this user?'\n            }}\n            modalProps={{\n                isBlocking: true,\n                styles: { main: { maxWidth: 450 } },\n                dragOptions: true\n            }}\n            >\n            <DialogFooter>\n                <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                    onClick={() => {remove(id); setDeleting(false)}} text=\"Delete\" />\n                <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n            </DialogFooter>\n        </Dialog>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        save: (id, username, email, is_active, is_staff, partner_data) => dispatch(editUser(id, username, email, is_active, is_staff, partner_data)),\n        toggleActiveState: (id, active) => dispatch(toggleActive(id, active)),\n        endEdit: () => dispatch(endEdit()),\n        remove: id => dispatch(removeUser(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addUser, endAdd } from '../../store/actions/usersActions';\nimport './AddUser.sass';\n\nfunction AddUser({adding, endAdd, add, users}){\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password1, setPassword1] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n    const [Wrate, setWRate] = useState(1);\n    const [CCrate, setCCRate] = useState(1);\n    const [BTCrate, setBTCRate] = useState(1);\n    const [isReady, setReady] = useState(false);\n    const [errors, setErrors] = useState({\n        email: '',\n        username: '',\n        password: '',\n        passwordMatch: ''\n    })\n\n    useEffect(()=> {\n        if(username && email && password1 && password2 && !errors.username && !errors.email && !errors.password && !errors.passwordMatch){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [username, email, password1, password2, errors])\n\n    function checkEmail(){\n        if(email){\n            const emails = users.map(u => u.email);\n            //var emailRegex = new RegExp('^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$')\n            emails.forEach(em =>{\n                if (em === email){\n                    setErrors({...errors, email: 'User with this email is already present'})\n                }\n            })\n            if(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n                setErrors({...errors, email: ''})\n            }else{\n                setErrors({...errors, email: 'Email not valid'})\n            }\n        }else{\n            setErrors({...errors, email: ''})\n        }\n    }\n\n    function checkPassword(){\n        var mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n        if(password1){\n            if(mediumRegex.test(password1)){\n                setErrors({...errors, password: ''})\n            }else{\n                setErrors({...errors, password: 'Password not valid'})\n            }\n        }else{\n            setErrors({...errors, password: ''})\n        }\n    }\n\n    function checkPassword2(){\n        if(password2){\n            if(password1 === password2){\n                setErrors({...errors, passwordMatch: ''})\n            }else{\n                setErrors({...errors, passwordMatch: 'Passwords do not match'})\n            }\n        }else{\n            setErrors({...errors, passwordMatch: ''})\n        }\n    }\n\n    function checkUsername(){\n        var usernameRegex = new RegExp(\"^[A-Z]+$\", \"i\");\n        if(username){   \n            if(usernameRegex.test(username)){\n                setErrors({...errors, username: ''})\n            }else{\n                setErrors({...errors, username: 'Username should contain only letters'})\n            }\n            const usernames = users.map(u => u.username);\n            for(let us in usernames){\n                if (us === username){\n                    setErrors({...errors, username: 'User with this username is already present'})\n                }\n            }\n        }else{\n            setErrors({...errors, username: ''})\n        }\n    }\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"editModal\"}>\n            <div className=\"head\"><Text>Add user</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal>\n                        <TextField label=\"Email\" name=\"email\" placeholder=\"email\" errorMessage={errors.email} value={email} onChange={({target}) => setEmail(target.value)} onBlur={checkEmail} /> \n                        <TextField label=\"Username\" name=\"username\" placeholder=\"username\" errorMessage={errors.username} value={username} onChange={({target}) => setUsername(target.value)} onBlur={checkUsername} />\n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"password\" label=\"Password\" name=\"password1\" placeholder=\"password\" errorMessage={errors.password} value={password1} onChange={({target}) => setPassword1(target.value)} onBlur={checkPassword} />\n                        <TextField type=\"password\" label=\"Confirm Password\" name=\"password2\" placeholder=\"confirm password\" errorMessage={errors.passwordMatch} value={password2} onChange={({target}) => setPassword2(target.value)} onBlur={checkPassword2} /> \n                    </Stack>\n                    <Stack horizontal>\n                        <TextField type=\"number\" label=\"Balance\" name=\"balance\" placeholder=\"balance\" value={balance} onChange={({target}) => setBalance(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Wire Rate\" name=\"wire rate\" placeholder=\"rate\" value={Wrate} onChange={({target}) => setWRate(target.value)} /> \n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"Credit Card R.\" name=\"credit card rate\" placeholder=\"rate\" value={CCrate} onChange={({target}) => setCCRate(target.value)} />\n                        <TextField type=\"number\" step={0.01} min={0} max={1} label=\"BTC Rate\" name=\"BTC rate\" placeholder=\"rate\" value={BTCrate} onChange={({target}) => setBTCRate(target.value)} />  \n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            disabled={!isReady}\n                            className=\"add\"\n                            onClick={()=>add(username, email, password1, {balance, Wrate, CCrate, BTCrate})}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (username, email, password1, password2, partner_data) => dispatch(addUser(username, email, password1, password2, partner_data)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsRow, DetailsListLayoutMode } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { getAllUsers, beginEdit, beginAdd } from '../store/actions/usersActions';\nimport EditUser from '../pjeset/Users/EditUser';\nimport AddUser from '../pjeset/Users/AddUser';\nimport './Users.sass';\n\nnumeral.locale('al');\n\nfunction sortByKey(array, key, asc) {\n    return array.sort(function(a, b) {\n        var x = a[key]; var y = b[key];\n        return asc ? ((x < y) ? -1 : ((x > y) ? 1 : 0)) : ((x > y) ? -1 : ((x < y) ? 1 : 0));\n    });\n}\n\nfunction Users({getUsers, selectMenu, beginEdit, beginAdd, token, users, editing, editingThis, adding}){\n\n    const [sortkey, setSortkey] = useState(\"staff\");\n    const [ascending, setAscending] = useState(true);\n    const [searchStr, setSearchStr] = useState(\"\");\n    const [roleFilter, setRoleFilter] = useState(\"partner\");\n\n    useEffect(()=>{\n        getUsers();\n    }, [getUsers])\n\n    const columns = [\n        {\n            key: 'username',\n            name: 'Username',\n            fieldName: 'username',\n            minWidth: 60,\n            maxWidth: 80,\n            isSorted: sortkey === 'username',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'email',\n            name: 'Email',\n            fieldName: 'email',\n            minWidth: 180,\n            maxWidth: 200,\n            isSorted: sortkey === 'email',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'string',\n            isPadded: true\n        },\n        {\n            key: 'last_login',\n            name: 'Last login',\n            fieldName: 'last_login',\n            minWidth: 80,\n            maxWidth: 100,\n            isSorted: sortkey === 'last_login',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'date',\n            isPadded: true\n        },\n        {\n            key: 'balance',\n            name: 'Balance',\n            fieldName: 'balance',\n            minWidth: 80,\n            maxWidth: 90,\n            isSorted: sortkey === 'balance',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'Wrate',\n            name: 'Wire',\n            fieldName: 'Wrate',\n            minWidth: 30,\n            maxWidth: 30,\n            isSorted: sortkey === 'Wrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'CCrate',\n            name: 'CC',\n            fieldName: 'CCrate',\n            minWidth: 30,\n            maxWidth: 30,\n            isSorted: sortkey === 'CCrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'BTCrate',\n            name: 'BTC',\n            fieldName: 'BTCrate',\n            minWidth: 30,\n            maxWidth: 30,\n            isSorted: sortkey === 'BTCrate',\n            isSortedDescending: ascending,\n            onColumnClick: onColumnClick,\n            data: 'number',\n            isPadded: true\n        },\n        {\n            key: 'btc',\n            name: 'BTC on',\n            fieldName: 'btc',\n            minWidth: 40,\n            maxWidth: 40,\n            isPadded: true\n        },\n        {\n            key: 'is_active',\n            name: 'Active',\n            fieldName: 'active',\n            minWidth: 60,\n            maxWidth: 100,\n            isPadded: true\n        }\n    ];\n\n    const data = sortByKey(users.map(user => {\n        return {\n            id: user.id,\n            email: user.email,\n            last_login: moment(new Date(user.last_login)).fromNow().replace(\"50 years ago\", 'never'),\n            date_joined: moment(new Date(user.date_joined)).fromNow(),\n            username: user.username,\n            password: user.password,\n            balance: parseFloat(user.partner_data.balance),\n            Wrate: user.partner_data.Wrate,\n            CCrate: user.partner_data.CCrate,\n            BTCrate: user.partner_data.BTCrate,\n            btc: user.partner_data.btc,\n            active: user.is_active,\n            staff: user.is_staff\n        }\n    }), sortkey, ascending).filter(u => {\n        return (u.email.indexOf(searchStr) !== -1) || (u.username.toLowerCase().indexOf(searchStr) !== -1)\n    }).filter(u => {\n        switch(roleFilter){\n            case \"partner\": return !u.staff;\n            case \"admin\": return u.staff;\n            default: return true;\n        }\n    })\n\n    useEffect(()=>{\n        selectMenu(\"1\");\n        document.title = \"Chimera | Users\"\n    }, [getUsers, selectMenu])\n\n    function onItemInvoked({email}){\n        beginEdit(email);\n    }\n    function onColumnClick(_e, {key}){\n        setSortkey(key);\n        setAscending(true)\n        if(key === sortkey){setAscending(!ascending)}\n    }\n    function onRenderItemColumn(item, index, column){\n        const fieldContent = item[column.fieldName];\n        switch (column.key) {\n            case 'is_active':\n                return fieldContent ? <Icon iconName=\"StatusCircleInner\" styles={{root: {marginLeft: '14px'}}} /> : null;\n            case 'btc':\n                return fieldContent ? <Icon iconName=\"StatusCircleInner\" styles={{root: {marginLeft: '14px'}}} /> : null;\n            case 'balance':\n                return <span style={{textAlign: 'right'}}>{numeral(fieldContent).format('0,0.00 $')}</span>\n            default:\n              return <span>{fieldContent}</span>;\n          }\n    }\n    function onRenderRow(props){\n        return <DetailsRow {...props} styles={{root: {backgroundColor: props.item.staff ? \"lightblue\" : \"white\", fontSize: '1.1em'}}} />\n    }\n    \n    let editData;\n    editData = data.filter(user => {\n        return user.email === editingThis\n    })[0]\n\n    const roles = [\n        { key: 'admin', text: 'Admin' },\n        { key: 'partner', text: 'Partner' },\n    ];\n        \n    if(!token){\n        return <Redirect to=\"/login\" />\n    }\n    return(\n        <div id=\"users\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <SearchBox styles={{root:{width: 300}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}}  value={searchStr} placeholder=\"Filter by username or email...\" onChange={({target}) => setSearchStr(target.value)} />\n                        <ComboBox style={{width: 150}} options={roles} selectedKey={roleFilter} placeholder=\"Filter by role...\" onChange={(e, {key})=> setRoleFilter(key)} />\n                    </Stack>\n                    <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New user\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    />\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={960}\n                        minWidth={960}\n                        items={data}\n                        compact={false}\n                        columns={columns}\n                        onItemInvoked={onItemInvoked}\n                        enableShimmer={!data}\n                        isHeaderVisible={true}\n                        checkboxVisibility={2}\n                        selectionMode={SelectionMode.multiple}\n                        layoutMode={DetailsListLayoutMode.justified}\n                        onRenderItemColumn={onRenderItemColumn}\n                        onRenderRow={onRenderRow}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {editing ? <EditUser editing={editing} {...editData} /> : null}\n            {adding ? <AddUser adding={adding} /> : null}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        editing: state.users.editing,\n        editingThis: state.users.editingThis,\n        adding: state.users.adding\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        getUsers: () => dispatch(getAllUsers()),\n        beginEdit: email => dispatch(beginEdit(email)),\n        beginAdd: () => dispatch(beginAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { addTransaction, endAdd } from '../../store/actions/transactionsActions';\nimport './AddTransaction.sass';\n\nnumeral.locale('al');\n\nfunction AddTransaction({adding, endAdd, add, users, clients}){\n    const [type, setType] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [client_names, setClientNames] = useState([]);\n    const [amount, setAmount] = useState(0);\n    const [amount_paid, setAmountpaid] = useState(0);\n    const [partner, setPartner] = useState(\"\");\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(1);\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.CCrate).toPrecision(2)); break;\n            case \"BTC\": setRate(parseFloat(currentPartner.partner_data.BTCrate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.Wrate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(1);break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'BTC', text: 'BTC' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    useEffect(()=>{\n        setClientNames(clients.map(c => {\n            return {\n                key: c,\n                text: c\n            }\n        }))\n    }, [])\n\n    function addClientToClientNames(){\n        setClientNames([{key: client, text: client}, ...client_names])\n    }\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active && (type === 'BTC' ? u.partner_data.btc : true))).map(({id, username}) => {\n        return {\n            key: id,\n            text: username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        setCurrentPartner(users.filter(u=>u.id === key)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"BTC\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    let color = 'white'\n\n    switch(type){\n        case 'Wire': color = '#fce100'; break;\n        case 'Credit Card': color = '#ffaa44'; break;\n        case 'BTC': color = '#8e41be'; break;\n        case 'Withdraw': color = '#da3b01'; break;\n        case 'Payment': color = '#00b7c3'; break;\n        default: color = 'white'; break;\n    }\n\n    const showCalculations = (type && type !== \"Payment\" && partner)\n\n    return(\n        <Modal isOpen={adding} onDismiss={endAdd} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Add transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endAdd()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form style={{borderLeft: `4px solid ${color}`}}>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <ComboBox disabled={type === \"Payment\"} label=\"Client name\" autoComplete=\"on\" allowFreeform={true} selectedKey={client} options={client_names} onBlur={addClientToClientNames} placeholder=\"Client name...\" onChange={(e, e2) => setClient(e.target.value ? e.target.value : e2.key)} />\n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" styles={{root: {visibility: showCalculations ? 'visible' : 'hidden'}}} variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endAdd()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"add\"\n                            disabled={!ready}\n                            onClick={()=>add(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Add\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users,\n        clients: state.transactions.clients\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        add: (type, client, amount, amount_paid, rate, partner) => dispatch(addTransaction(type, client, amount, amount_paid, rate, partner)),\n        endAdd: () => dispatch(endAdd())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTransaction);","import React, {useState, useEffect} from 'react';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\nimport { DefaultButton, PrimaryButton, ActionButton } from 'office-ui-fabric-react';\nimport { ComboBox } from 'office-ui-fabric-react/lib/index';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { editTransaction, endEdit } from '../../store/actions/transactionsActions';\nimport { HOST } from '../../config';\nimport './EditTransaction.sass';\n\nconst host = HOST.replace(\"https\", \"http\");\n\nnumeral.locale('al');\n\nfunction EditTransaction({editing, endEdit, edit, users, data}){\n\n    const [type, setType] = useState(data.transaction_type);\n    const [client, setClient] = useState(data.client_name);\n    const [amount, setAmount] = useState(parseFloat(data.amount));\n    const [amount_paid, setAmountpaid] = useState(parseFloat(data.amount_paid));\n    const [partner, setPartner] = useState(data.user);\n    const [currentPartner, setCurrentPartner] = useState({partner_data: {rate: 1}});\n    const [rate, setRate] = useState(currentPartner.partner_data.rate)\n    const [sign, setSign] = useState(1);\n    const [ready, setReady] = useState(false);\n    \n    useEffect(()=>{\n        switch(type){\n            case \"Wire\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Credit Card\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2)); break;\n            case \"Withdraw\": setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n            case \"Payment\": setRate(1) ;break;\n            default: setRate(parseFloat(currentPartner.partner_data.rate).toPrecision(2));break;\n        }\n    }, [currentPartner, type]);\n\n    useEffect(()=>{\n        setAmount(Math.abs(amount) * sign);\n    }, [sign, type, amount]);\n\n    useEffect(()=>{\n        setAmountpaid(Math.round( (amount * rate) * 100 + Number.EPSILON ) / 100);\n    }, [amount, rate]);\n\n    useEffect(()=>{\n        let clientOK = false;\n        if(type===\"Payment\"){\n            setClient(\"\");\n        }\n        if(type===\"Payment\" || client !== \"\"){\n            clientOK = true;\n        }\n        if(type !== \"\" && amount !== 0 && partner !== \"\" && clientOK){\n            setReady(true)\n        }else{\n            setReady(false)\n        }\n    }, [type, amount, partner, client]);\n\n    useEffect(()=> {\n        setTheSign(type)\n    },[type])\n\n    const transaction_types = [\n        { key: 'Wire', text: 'Wire' },\n        { key: 'Credit Card', text: 'Credit Card' },\n        { key: 'Withdraw', text: 'Withdraw' },\n        { key: 'Payment', text: 'Payment' }\n    ];\n\n    const partners = users.filter(u => (!u.is_staff && u.is_active)).map(u=>{\n        const urlArray = u.url.split(\"/\");\n        return {\n            key: urlArray[urlArray.length - 2],\n            text: u.username\n        }\n    })\n\n    function selectPartner(e, {key}){\n        setPartner(key);\n        const url = `${host}/api/users/${key}/`;\n        setCurrentPartner(users.filter(u=>u.url === url)[0]);\n    }\n\n    function setTheSign(type){\n        switch(type){\n            case \"Wire\": setSign(1); break;\n            case \"Credit Card\": setSign(1); break;\n            case \"Withdraw\": setSign(-1);break;\n            case \"Payment\": setSign(-1) ;break;\n            default: setSign(1);break;\n        }\n    }\n\n    function setAmountField({target}){\n        setTheSign(type);\n        if(target.value){\n            setAmount(sign * Math.abs(parseFloat(target.value)))\n        }else{\n            setAmount(0)\n        }\n    }\n\n    return(\n        <Modal isOpen={editing} onDismiss={endEdit} isModeless={true} dragOptions={{dragHandleSelector: '.head'}} containerClassName={\"transactionModal\"}>\n            <div className=\"head\"><Text>Edit transaction</Text><ActionButton style={{height: \"100%\"}} buttonType={5} onClick={()=>endEdit()}><Icon iconName=\"Cancel\" style={{color: \"white\"}}/></ActionButton></div>\n            <form>\n                <Stack>\n                    <Stack horizontal className=\"row1\">\n                        <ComboBox label=\"Type of transaction\" autoComplete=\"on\" selectedKey={type} options={transaction_types} placeholder=\"Type...\" onChange={(e, {key}) => setType(key)} />\n                        <ComboBox label=\"Partner name\" autoComplete=\"on\" allowFreeform selectedKey={partner} options={partners} placeholder=\"Partner...\" onChange={selectPartner} />\n                    </Stack>\n                    <Stack horizontal className=\"row2\">\n                        <TextField disabled={type === \"Payment\"} name=\"client\" label=\"Client name\" placeholder=\"client\" value={client} onChange={({target}) => setClient(target.value)} /> \n                        <TextField type=\"number\" step={1} name=\"amount\" label=\"Amount\" placeholder=\"amount\" value={amount} onChange={setAmountField} />\n                    </Stack>\n                    <Stack horizontal className=\"row3\">\n                        <Text className=\"calc\" variant=\"xLarge\">{`${numeral(amount).format(\"0,0.00\")} x ${rate} =`}</Text>\n                        <div className=\"partnerAmount\">\n                            <label htmlFor=\"partner_amount\"><Text variant=\"medium\">Partner amount</Text></label>\n                            <Text className=\"amount\" name=\"partner_amount\" variant=\"xLarge\">{numeral(amount_paid).format('0,0.00 $')}</Text>\n                        </div>\n                    </Stack>\n                    <Stack horizontal className=\"actions\">\n                        <DefaultButton className=\"cancel\" onClick={()=> endEdit()} text=\"Cancel\" />\n                        <PrimaryButton \n                            className=\"edit\"\n                            disabled={!ready}\n                            onClick={()=>edit(type, client, amount, amount_paid, rate, partner)}\n                            text=\"Save\" />\n                    </Stack>\n                </Stack>\n            </form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        edit: (type, client, amount, amount_paid, rate, partner) => dispatch(editTransaction(type, client, amount, amount_paid, rate, partner)),\n        endEdit: () => dispatch(endEdit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTransaction);","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DetailsList, SelectionMode, DetailsListLayoutMode, DetailsRow, ConstrainMode } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { PrimaryButton, IconButton, DefaultButton } from 'office-ui-fabric-react';\nimport { Dropdown, DropdownMenuItemType } from 'office-ui-fabric-react/lib/Dropdown';\nimport { CSVLink } from \"react-csv\";\nimport { selectMenu } from '../store/actions/systemActions';\nimport { setToken } from '../store/actions/authActions';\nimport { formatDate } from '../useful';\nimport { beginEdit, beginAdd, removeTransaction, getAllTransactions, getAllClients, setTransactionsFilter, setAllPartnersSelected, setAllTypesSelected } from '../store/actions/transactionsActions';\nimport AddTransaction from '../pjeset/Transactions/AddTransaction';\nimport EditTransaction from '../pjeset/Transactions/EditTransaction';\nimport { HOST } from '../config';\nimport './Transactions.sass';\n\nconst host = HOST.replace(\"https\", \"http\")\n\nnumeral.locale('al');\n\nfunction Transactions ({selectMenu, beginAdd, token, users, admin, adding, editing, editData, transactions, remove, getTransactions, getClients, setFilter, filters, allPartners, allTypes, btc}){\n\n    const [deleting, setDeleting] = useState(false);\n    const [deletingID, setDeletingID] = useState(0);\n    \n    let {client, partners, types, fromDate, toDate} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=> {\n        if(!partners.length){\n            setFilter('partners', users.filter(u=> !u.is_staff).map(({id}) => id));\n        }\n        if(!types.length){\n            setFilter('types', ['Wire', 'Credit Card', 'BTC', 'Withdraw', 'Payment']);\n        }\n    }, [setFilter, users])\n\n    const partnersDropdown = users.filter(u => !u.is_staff).map(({id, username}) => {\n        return {\n            key: id,\n            text: username,\n            selected: partners.includes(id)\n        }\n    });\n\n    const typesDropdown = [\n        { key: 'Wire', text: 'Wire', selected: types.includes('Wire') },\n        { key: 'Credit Card', text: 'Credit Card', selected: types.includes('Credit Card') },\n        { key: 'BTC', text: 'BTC', selected: types.includes('BTC') },\n        { key: 'Withdraw', text: 'Withdraw', selected: types.includes('Withdraw') },\n        { key: 'Payment', text: 'Payment', selected: types.includes('Payment') }\n    ];\n    \n    useEffect(()=>{\n        document.title = \"Chimera | Transactions\"; \n        selectMenu(admin ? \"2\" : \"3\");\n        getTransactions();\n        if(admin){getClients()}\n    }, [selectMenu, getTransactions, admin]);\n    \n    const columns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 17,\n            maxWidth: 17,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 110,\n            maxWidth: 180,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'partner',\n            name: 'Partner',\n            fieldName: 'partner',\n            minWidth: 70,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'rate',\n            name: 'Rate',\n            fieldName: 'rate',\n            minWidth: 30,\n            maxWidth: 50,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'Partner amount',\n            fieldName: 'amount_paid',\n            minWidth: 70,\n            maxWidth: 90,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 110,\n            maxWidth: 110,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'delete',\n            name: 'Delete',\n            minWidth: 45,\n            maxWidth: 55,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true,\n            onRender: (item) => {\n                return <IconButton onClick={() => { setDeleting(true); setDeletingID(item.id) }} styles={{root:{height: '15px', marginLeft: '7px', color: '#ccc'}, rootHovered: {color: 'red'}, rootPressed: {color: 'darkred'}}} iconProps={{iconName: \"Delete\"}} />\n            }\n        }\n    ];\n\n    const partnerColumns = [\n        {\n            key: 'id',\n            name: 'ID',\n            fieldName: 'id',\n            minWidth: 20,\n            maxWidth: 30,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'transaction_type',\n            name: 'Type',\n            fieldName: 'transaction_type',\n            minWidth: 60,\n            maxWidth: 100,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'client',\n            name: 'Client name',\n            fieldName: 'client',\n            minWidth: 120,\n            maxWidth: 140,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount',\n            name: 'Amount',\n            fieldName: 'amount',\n            minWidth: 50,\n            maxWidth: 60,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'amount_paid',\n            name: 'My amount',\n            fieldName: 'amount_paid',\n            minWidth: 60,\n            maxWidth: 80,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        },\n        {\n            key: 'created_at',\n            name: 'Created at',\n            fieldName: 'created_at',\n            minWidth: 130,\n            maxWidth: 150,\n            isRowHeader: false,\n            isSorted: false,\n            isSortedDescending: false,\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n            isResizable: true\n        }\n    ];\n\n    function _onColumnClick(){}\n\n    function renderRow(row){\n        let color;\n        switch(row.item.transaction_type){\n            case 'Wire': color = '#fce100'; break;\n            case 'Credit Card': color = '#ffaa44'; break;\n            case 'BTC': color = '#8e41be'; break;\n            case 'Withdraw': color = '#da3b01'; break;\n            case 'Payment': color = '#00b7c3'; row.item.amount = ''; row.item.rate = ''; break;\n            default: color = 'white'; break;\n        }\n        return <DetailsRow {...row} styles={{root: {borderLeft: `4px solid ${color}`, fontSize: '1.1em'}}} />\n    }\n\n    function renderItemColumn(item, index, column){\n        if(column.key === 'amount' || column.key === 'amount_paid'){\n            return <div style={{textAlign: 'right'}}>{item[column.key]}</div>\n        }else if(column.key === 'id' || column.key === 'created_at'){\n            return <div style={{fontSize: '1em'}}>{item[column.key]}</div>\n        }else{\n            return item[column.key]\n        }\n    }\n\n    function editTransaction({id}){\n        // beginEdit(id)\n    }\n\n    let data = []\n    \n    data = transactions.filter(({transaction_type}) => transaction_type !== 'BTC').map(t => {\n        return {\n            id: t.id,\n            transaction_type: t.transaction_type,\n            client: t.client_name,\n            amount: numeral(parseFloat(t.amount)).format('0,0.00 $'),\n            rate: numeral(parseFloat(t.rate)).format('0 %'),\n            partner: admin ? users.filter(u => parseInt(u.id) === t.user)[0].username : null,\n            amount_paid: numeral(parseFloat(t.amount_paid)).format('0,0.00 $'),\n            created_at: moment(new Date(t.entry_time)).format(\"DD/MM/YYYY hh:mm:ss\"),\n        }\n    });\n\n    const CSVheaders = [\n        { label: \"ID\", key: \"id\" },\n        { label: \"Type\", key: \"transaction_type\" },\n        { label: \"Client Name\", key: \"client\" },\n        { label: \"Parner Name\", key: \"partner\" },\n        { label: \"Amount\", key: \"amount\" },\n        { label: \"Partner Amount\", key: \"amount_paid\" },\n        { label: \"Date\", key: \"created_at\" }\n      ];\n\n    function changeSelectedPartners(e, e2){\n        const p = partnersDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        });\n        allPartners(p.every(p=>p.selected));\n        setFilter('partners', p.filter(p => p.selected).map(p=> p.key));\n    }\n\n    function changeSelectedTypes(_, e2){\n        const t = typesDropdown.map(type => {\n            if(type.key === e2.key){\n                return e2\n            }else{\n                return type\n            }\n        })\n        allTypes(t.every(t=>t.selected));\n        setFilter('types', t.filter(t => t.selected).map(t=> t.key));\n    }\n\n    if(!token){return <Redirect to=\"/login\" />}\n    return(\n        <div id=\"transactions\">\n            <Fabric>\n                <Stack horizontal horizontalAlign=\"space-between\" tokens={{ childrenGap: 20 }} styles={{ root: { width: 960, padding: \"20px 0\" } }}>\n                    <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\" } }}>\n                        <Dropdown\n                            placeholder=\"Type\"\n                            selectedKeys={types}\n                            onChange={changeSelectedTypes}\n                            multiSelect\n                            options={[{ key: 'typesHeader', text: 'Types', itemType: DropdownMenuItemType.Header },...typesDropdown.filter(t => (btc || admin) ? t : t.key !== 'BTC')]}\n                            style={{width: 120, textAlign: 'left'}}\n                        />\n                        <SearchBox styles={{root: {width: 150}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}} value={client} placeholder=\"Client name...\" onChange={({target}) => setFilter('client',target.value.toLowerCase())} />\n                        {admin ? <Dropdown\n                            placeholder=\"Filter by partner\"\n                            selectedKeys={partners}\n                            onChange={changeSelectedPartners}\n                            multiSelect\n                            options={[{ key: 'partnersHeader', text: 'Partners', itemType: DropdownMenuItemType.Header },...partnersDropdown]}\n                            style={{width: 140, textAlign: 'left'}}\n                        /> : null}\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                        <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                    </Stack>\n                    {admin ? <PrimaryButton\n                        allowDisabledFocus={true}\n                        disabled={adding}\n                        checked={false}\n                        text=\"New transaction\"\n                        onClick={()=>beginAdd()}\n                        iconProps={{iconName: \"Add\"}}\n                        align=\"end\"\n                        styles={{root: {\n                            justifySelf: 'flex-end'\n                        }}}\n                    /> : null}\n                </Stack>\n                <MarqueeSelection>\n                    <DetailsList\n                        className=\"table\"\n                        maxWidth={admin ? 960 : 720}\n                        height={'70%'}\n                        items={data}\n                        compact={true}\n                        columns={admin ? columns : partnerColumns}\n                        onItemInvoked={editTransaction}\n                        enableShimmer={!data}\n                        isHeaderVisible={true}\n                        checkboxVisibility={2}\n                        selectionMode={SelectionMode.multiple}\n                        layoutMode={DetailsListLayoutMode.justified}\n                        onRenderItemColumn={renderItemColumn}\n                        onRenderRow={renderRow}\n                        onShouldVirtualize={()=>false}\n                        constrainMode={ConstrainMode.unconstrained}\n                    />\n                </MarqueeSelection>\n            </Fabric>\n            {adding ? <AddTransaction adding={adding} /> : null}\n            {editing ? <EditTransaction data={editData} editing={editing} /> : null}\n            <Dialog\n                hidden={!deleting}\n                onDismiss={() => setDeleting(false)}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Delete transaction?',\n                    subText: 'Do you really want do delete this transaction?'\n                }}\n                modalProps={{\n                    isBlocking: true,\n                    styles: { main: { maxWidth: 450 } },\n                    dragOptions: true\n                }}\n                >\n                <DialogFooter>\n                    <PrimaryButton styles={{root:{backgroundColor: 'red'}, rootHovered:{backgroundColor: 'orangered'}, rootPressed:{backgroundColor: 'darkred'}, }} \n                        onClick={() => {remove(deletingID); setDeleting(false)}} text=\"Delete\" />\n                    <DefaultButton onClick={()=>setDeleting(false)} text=\"Cancel\" />\n                </DialogFooter>\n            </Dialog>\n            <div className=\"bottom\">\n                <div className=\"data\">\n                    <Text variant=\"small\" >{transactions.length || 'No'} transaction{transactions.length !== 1 ? 's' : ''}</Text>\n                </div>\n                {transactions.length ? <DefaultButton iconProps={{iconName: 'Download'}}><CSVLink filename={`transactions_report_${moment(new Date()).format('DD_MM_YYYY_hh_mm_ss')}.csv`} data={data} headers={CSVheaders}>Download CSV</CSVLink></DefaultButton> : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        admin: state.auth.admin,\n        balance: state.auth.balance,\n        btc: state.auth.btc,\n        users: state.users.users,\n        transactions: state.transactions.transactions,\n        editing: state.transactions.editing,\n        adding: state.transactions.adding,\n        editData: state.transactions.editData,\n        filters: state.transactions.filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setToken: token => dispatch(setToken(token)),\n        beginAdd: () => dispatch(beginAdd()),\n        beginEdit: id => dispatch(beginEdit(id)),\n        remove: id => dispatch(removeTransaction(id)),\n        getTransactions: () => dispatch(getAllTransactions()),\n        getClients: () => dispatch(getAllClients()),\n        setFilter: (filter, value) => dispatch(setTransactionsFilter(filter, value)),\n        allTypes: bool => dispatch(setAllTypesSelected(bool)),\n        allPartners: bool => dispatch(setAllPartnersSelected(bool))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport {getLogs, setFilter, deleteLog} from '../store/actions/logsActions';\nimport {selectMenu} from '../store/actions/systemActions';\nimport { ActivityItem, Icon, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport { Redirect } from 'react-router-dom';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { IconButton } from 'office-ui-fabric-react';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { DatePicker, DayOfWeek } from 'office-ui-fabric-react';\nimport { formatText, formatDate } from '../useful';\nimport { HOST } from '../config';\nimport * as t from '../store/actions/logTypes';\nimport './Logs.sass';\n\nconst host = HOST.replace(\"https\", \"http\");\n\nfunction Logs({logs, token, getLogs, remove, selectMenu, users, filters, setFilter}){\n\n    function Log({item}){\n        const [hovered, setHovered] = useState(false);\n        let color = hovered ? '#666' : '#ccc';\n        return <div className=\"log\" onMouseOver={() => setHovered(true)} onMouseOut={() => setHovered(false)}>\n            <IconButton onMouseEnter={() => setHovered(true)} onClick={() => remove(item.key)} iconProps={{iconName:\"Delete\"}} styles={{root: {position: 'absolute', right: '5px', top: '3px', color}, rootHovered: {color: 'red'}}} />\n            <ActivityItem {...item} className={classNames.exampleRoot} />\n        </div>\n    }\n\n    let {fromDate, toDate, message} = filters;\n\n    fromDate = new Date(fromDate);\n    toDate = new Date(toDate);\n\n    useEffect(()=>{\n        document.title = \"Chimera | Logs\"; \n        selectMenu(\"4\");\n    }, [selectMenu]);\n\n    useEffect(()=>{\n        getLogs()\n    }, [getLogs, filters])\n\n    function getUsername(user){\n        if(users.length){\n            const filteredUser = users.filter(u=> u.url === `${host}/api/users/${user}/`);\n            if(filteredUser.length){\n                return \"@\" + filteredUser[0].username;\n            }else{\n                return \"Deleted\"\n            }\n        }else{\n            return '';\n        }\n    }\n\n    const classNames = mergeStyleSets({\n        exampleRoot: {\n          marginTop: '8px',\n          textAlign: 'left'\n        },\n        nameText: {\n          fontWeight: 'bold'\n        }\n    });\n\n    const items = logs.map(log => {\n        let iconName = '', color= '';\n        switch(log.log_type){\n            case t.USER_ADD: iconName = 'FollowUser'; color=\"darkgreen\";break;\n            case t.USER_REMOVE: iconName = 'UserRemove';color=\"darkred\"; break;\n            case t.USER_UPDATE: iconName = 'UserSync'; color=\"orange\";break;\n            case t.TRANSACTION_ADD: iconName = 'Money'; color=\"darkgreen\";break;\n            case t.TRANSACTION_REMOVE: iconName = 'Money';color=\"darkred\"; break;\n            case t.USER_DEACTIVATE: iconName = 'UserPause';color=\"darkred\"; break;\n            case t.USER_ACTIVATE: iconName = 'UserFollowed'; color=\"darkgreen\";break;\n            default: iconName = \"Message\";\n        }\n        return {\n            key: log.id,\n            activityDescription: [\n              <Text className={classNames.nameText} key={log.id}>{formatText(log.log_type)}</Text>,\n              <Link key={log.id + 'a'}>&nbsp;{getUsername(log.user)}</Link>\n            ],\n            activityIcon: <Icon styles={{root:{color}}} iconName={iconName} />,\n            comments: [\n              <span key={log.id}>{log.message}</span>\n            ],\n            timeStamp: moment(new Date(log.entry_time)).format(\"DD/MM/YY hh:mm:ss\")\n          }\n    })\n\n    if(!token){return <Redirect to=\"/login\" />}\n\n    return(\n        <div id=\"logs\">\n            <Stack horizontal horizontalAlign=\"auto\" tokens={{ childrenGap: 20 }} styles={{ root: { width: \"auto\", marginTop: '20px', marginBottom: '12px' } }}>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={toDate} placeholder=\"From date\" value={fromDate} onSelectDate={e=> setFilter('fromDate',new Date(new Date(e).setHours(0,0,0,0)))}/>\n                <DatePicker style={{width: 140}} formatDate={date => formatDate(date)} firstDayOfWeek={DayOfWeek.Monday} maxDate={new Date(new Date().setHours(23,59,59,0))} minDate={fromDate} placeholder=\"To date\" value={toDate} onSelectDate={e=> setFilter('toDate',new Date(new Date(e).setHours(23,59,59,0)))}/>\n                <SearchBox styles={{root:{width: 300}}} iconProps={{ iconName: 'Filter', style: {color: 'black'}}} value={message} placeholder=\"Filter by log text...\" onChange={({target}) => setFilter('message',target.value.toLowerCase())} />\n            </Stack>\n            <div className=\"logs\">\n                {items.map(item => (\n                    <Log key={item.key} item={item} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        logs: state.logs.logs,\n        filters: state.logs.filters,\n        users: state.users.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getLogs: () => dispatch(getLogs()),\n        remove: id => dispatch(deleteLog(id)),\n        selectMenu: menu => dispatch(selectMenu(menu)),\n        setFilter: (filter, value) => dispatch(setFilter(filter, value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menu from './pjeset/common/Menu';\nimport Notifications from './pjeset/common/Notifications';\nimport Home from './faqet/Home';\nimport Login from './faqet/Login';\nimport Users from './faqet/Users';\nimport Transactions from './faqet/Transactions';\nimport Logs from './faqet/Logs';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport './App.css';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/users\" component={Users} />\n        <Route exact path=\"/transactions\" component={Transactions} />\n        <Route exact path=\"/logs\" component={Logs} />\n      </Switch>\n      <Notifications />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './store/reducers/rootReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n        key: 'root',\n        storage,\n      }\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);  \nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\nwindow.persistor = persistor;\n\nReactDOM.render(\n                <Provider store={store}>\n                        <PersistGate loading={null} persistor={persistor}>\n                                <BrowserRouter>\n                                        <App />\n                                </BrowserRouter>\n                        </PersistGate>\n                </Provider>, \n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}